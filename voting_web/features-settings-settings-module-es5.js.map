{"version":3,"sources":["webpack:///projects/blockchain-voting-system-app/src/app/features/settings/settings-routing.module.ts","webpack:///projects/blockchain-voting-system-app/src/app/features/settings/settings.module.ts","webpack:///projects/blockchain-voting-system-app/src/app/features/settings/settings/settings-container.component.ts","webpack:///projects/blockchain-voting-system-app/src/app/features/settings/settings/settings-container.component.html"],"names":["routes","path","component","data","title","SettingsRoutingModule","forChild","SettingsModule","SettingsContainerComponent","store","routeAnimationsElements","themes","value","label","languages","settings$","pipe","language","dispatch","theme","autoNightMode","checked","stickyHeader","pageAnimations","elementsAnimations"],"mappings":"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","file":"features-settings-settings-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SettingsContainerComponent,\n    data: { title: 'bvs.menu.settings' }\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SettingsRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SharedModule } from '../../shared/shared.module';\n\nimport { SettingsRoutingModule } from './settings-routing.module';\nimport { SettingsContainerComponent } from './settings/settings-container.component';\n\n@NgModule({\n  declarations: [SettingsContainerComponent],\n  imports: [CommonModule, SharedModule, SettingsRoutingModule]\n})\nexport class SettingsModule {}\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { ROUTE_ANIMATIONS_ELEMENTS } from '../../../core/core.module';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader\n} from '../../../core/settings/settings.actions';\nimport { SettingsState, State } from '../../../core/settings/settings.model';\nimport { selectSettings } from '../../../core/settings/settings.selectors';\n\n@Component({\n  selector: 'bvs-settings',\n  templateUrl: './settings-container.component.html',\n  styleUrls: ['./settings-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SettingsContainerComponent implements OnInit {\n  routeAnimationsElements = ROUTE_ANIMATIONS_ELEMENTS;\n  settings$: Observable<SettingsState>;\n\n  themes = [\n    { value: 'DEFAULT-THEME', label: 'blue' },\n    { value: 'LIGHT-THEME', label: 'light' },\n    { value: 'NATURE-THEME', label: 'nature' },\n    { value: 'BLACK-THEME', label: 'dark' }\n  ];\n\n  languages = [{ value: 'en', label: 'English' }];\n\n  constructor(private store: Store<State>) {}\n\n  ngOnInit() {\n    this.settings$ = this.store.pipe(select(selectSettings));\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n\n  onThemeSelect({ value: theme }) {\n    this.store.dispatch(actionSettingsChangeTheme({ theme }));\n  }\n\n  onAutoNightModeToggle({ checked: autoNightMode }) {\n    this.store.dispatch(actionSettingsChangeAutoNightMode({ autoNightMode }));\n  }\n\n  onStickyHeaderToggle({ checked: stickyHeader }) {\n    this.store.dispatch(actionSettingsChangeStickyHeader({ stickyHeader }));\n  }\n\n  onPageAnimationsToggle({ checked: pageAnimations }) {\n    this.store.dispatch(actionSettingsChangeAnimationsPage({ pageAnimations }));\n  }\n\n  onElementsAnimationsToggle({ checked: elementsAnimations }) {\n    this.store.dispatch(\n      actionSettingsChangeAnimationsElements({ elementsAnimations })\n    );\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-sm-12\"><h1>{{ 'bvs.settings.title' | translate }}</h1></div>\n  </div>\n  <br>\n  <ng-container *ngIf=\"settings$ | async as settings\">\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'bvs.settings.general.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"language\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'bvs.settings.general.placeholder' | translate\"\n                        [ngModel]=\"settings.language\"\n                        (selectionChange)=\"onLanguageSelect($event)\"\n                        name=\"language\">\n              <ng-container  *ngFor=\"let l of languages\">\n                <!-- ngFor hack of missing ngLet of Angular -->\n                <mat-option *ngFor=\"let title of ['bvs.settings.general.language.' + l.value | translate]\"\n                  [value]=\"l.value\"\n                  [title]=\"title !== l.label\n                    ? title\n                    : ''\">\n                  {{ l.label }}\n                </mat-option>\n              </ng-container>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n           <mat-icon color=\"accent\"><fa-icon icon=\"bars\" color=\"accent\"></fa-icon></mat-icon>\n           <mat-placeholder>{{ 'bvs.settings.themes.sticky-header' | translate }}\n           </mat-placeholder>\n           <mat-slide-toggle\n             [checked]=\"settings.stickyHeader\"\n             (change)=\"onStickyHeaderToggle($event)\">\n           </mat-slide-toggle>\n         </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'bvs.settings.themes.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"paint-brush\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-form-field>\n            <mat-select [placeholder]=\"'bvs.settings.themes.placeholder' | translate\"\n                        [ngModel]=\"settings.theme\"\n                        (selectionChange)=\"onThemeSelect($event)\"\n                        name=\"themes\">\n              <mat-option *ngFor=\"let t of themes\" [value]=\"t.value\">\n                {{ 'bvs.settings.themes.' + t.label | translate }}\n              </mat-option>\n            </mat-select>\n          </mat-form-field>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"lightbulb\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-placeholder>{{ 'bvs.settings.themes.night-mode' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.autoNightMode\"\n            (change)=\"onAutoNightModeToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n      <div class=\"col-md-6 group\" [ngClass]=\"routeAnimationsElements\">\n        <h2>{{ 'bvs.settings.animations.title' | translate }}</h2>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><mat-icon color=\"accent\"><fa-icon icon=\"window-maximize\"></fa-icon></mat-icon></mat-icon>\n          <mat-placeholder>{{ 'bvs.settings.animations.page' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            matTooltip=\"Sorry, this feature is disabled in IE, EDGE and Safari\"\n            matTooltipPosition=\"before\"\n            *ngIf=\"settings.pageAnimationsDisabled\"\n            disabled>\n          </mat-slide-toggle>\n          <mat-slide-toggle\n            *ngIf=\"!settings.pageAnimationsDisabled\"\n            [checked]=\"settings.pageAnimations\"\n            (change)=\"onPageAnimationsToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n        <div class=\"icon-form-field\">\n          <mat-icon color=\"accent\"><fa-icon icon=\"stream\" color=\"accent\"></fa-icon></mat-icon>\n          <mat-placeholder>{{ 'bvs.settings.animations.elements' | translate }}\n          </mat-placeholder>\n          <mat-slide-toggle\n            [checked]=\"settings.elementsAnimations\"\n            (change)=\"onElementsAnimationsToggle($event)\">\n          </mat-slide-toggle>\n        </div>\n      </div>\n    </div>\n  </ng-container>\n</div>\n"]}