{"version":3,"sources":["./styles-app-loading.scss","./node_modules/@angular/material/_theming.scss","./node_modules/bootstrap/scss/bootstrap-reboot.scss","./node_modules/bootstrap/scss/_reboot.scss","./styles.scss","./node_modules/bootstrap/scss/_variables.scss","./node_modules/bootstrap/scss/vendor/_rfs.scss","./node_modules/bootstrap/scss/mixins/_hover.scss","./styles-variables.scss","./node_modules/bootstrap/scss/bootstrap-grid.scss","./node_modules/bootstrap/scss/_grid.scss","./node_modules/bootstrap/scss/mixins/_grid.scss","./node_modules/bootstrap/scss/mixins/_breakpoints.scss","./node_modules/bootstrap/scss/mixins/_grid-framework.scss","./node_modules/bootstrap/scss/utilities/_display.scss","./node_modules/bootstrap/scss/utilities/_flex.scss","./node_modules/bootstrap/scss/utilities/_spacing.scss","./styles-reset.scss","./styles-reset.scss-theme.scss","./app/app/app.component.scss-theme.scss","./app/features/about/about/about.component.scss-theme.scss","./app/shared/big-input/big-input/big-input.component.scss-theme.scss"],"names":[],"mappings":";AACE;EACE;EACA;EACA;EACA;AAAJ,C;;AC8zDA;AA+IA;AAobA;AAmwDA;AA6CA;ACtrIA;;;;;;EAAA;ACkBA;;;EAGE;ACJF;ADOA;EACE;EACA;EACA;EACA;ACJF;ADUA;EACE;ACPF;ADiBA;EACE;EACA,kMEqO4B;ECrJxB,eAtCa;EHxCjB,gBE8O4B;EF7O5B,gBEkP4B;EFjP5B,cEnCS;EFoCT;EACA,sBE9CS;ADgCX;AD0BA;EACE;ACvBF;ADgCA;EACE;EACA;EACA;AC7BF;AD0CA;EACE;EACA,qBEgN4B;ADvP9B;AD8CA;EACE;EACA,mBEoF0B;AD/H5B;ADsDA;;EAEE;EACA;UAAA;EACA;EACA;EACA;UAAA;ACnDF;ADsDA;EACE;EACA;EACA;ACnDF;ADsDA;;;EAGE;EACA;ACnDF;ADsDA;;;;EAIE;ACnDF;ADsDA;EACE,gBEiJ4B;ADpM9B;ADsDA;EACE;EACA;ACnDF;ADsDA;EACE;ACnDF;ADsDA;;EAEE,mBEoI4B;ADvL9B;ADsDA;EGxFI;AFsCJ;AD2DA;;EAEE;EGnGE;EHqGF;EACA;ACxDF;AD2DA;EAAM;ACvDN;ADwDA;EAAM;ACpDN;AD2DA;EACE,cEXwC;EFYxC,qBEXwC;EFYxC;ACxDF;AGxHE;EJmLE,cEdsC;EFetC,qBK1LoB;AJkIxB;ADiEA;EACE;EACA;AC9DF;AGjIE;EJkME;EACA;AC9DJ;ADuEA;;;;EAIE,iGEyD4B;EC7M1B;AFiFJ;ADuEA;EAEE;EAEA;EAEA;EAGA;ACzEF;ADiFA;EAEE;AC/EF;ADuFA;EACE;EACA;ACpFF;ADuFA;EAGE;EACA;ACtFF;AD8FA;EACE;AC3FF;AD8FA;EACE,oBE6E4B;EF5E5B,uBE4E4B;EF3E5B,cEtQS;EFuQT;EACA;AC3FF;ADkGA;EAEE;EACA;AChGF;ADwGA;EAEE;EACA,gBKnSoB;AJ6LtB;AD4GA;EAEE;AC1GF;ADiHA;EACE;EACA;AC9GF;ADiHA;;;;;EAKE;EACA;EG5PE;EH8PF;AC9GF;ADiHA;;EAEE;AC9GF;ADiHA;;EAEE;AC9GF;ADoHA;EACE;ACjHF;ADuHA;EACE;ACpHF;AD2HA;;;;EAIE;ACxHF;ADiII;;;;EACE;AC3HN;ADiIA;;;;EAIE;EACA;AC9HF;ADiIA;;EAEE;EACA;AC9HF;ADkIA;EACE;EAEA;AChIF;ADmIA;EAME;EAEA;EACA;EACA;ACtIF;AD2IA;EACE;EACA;EACA;EACA;EACA;EGnSI,iBAtCa;EH2UjB;EACA;EACA;ACxIF;AD2IA;EACE;ACxIF;AD4IA;;EAEE;ACzIF;AD4IA;EAKE;EACA;AC7IF;ADoJA;EACE;ACjJF;ADyJA;EACE;EACA;ACtJF;AD6JA;EACE;AC1JF;AD6JA;EACE;EACA;AC1JF;AD6JA;EACE;AC1JF;AD+JA;EACE;AC5JF;AKtUA;;;;;EAAA;AAOA;EACE;EACA;ALwUF;AKrUA;;;EAGE;ALwUF;AMjVE;;;;;;ECDA;EACA;EACA;EACA;EACA;AP2VF;AQxSI;EFzCE;IACE,gBL8Le;EDuJrB;AACF;AQ9SI;EFzCE;IACE,gBL8Le;ED4JrB;AACF;AQnTI;EFzCE;IACE,gBL8Le;EDiKrB;AACF;AQxTI;EFzCE;IACE,iBL8Le;EDsKrB;AACF;AMzUE;ECnCA;EACA;EACA;EACA;AP+WF;AMzUE;EACE;EACA;AN4UJ;AM1UI;;EAEE;EACA;AN4UN;ASlYE;;;;;;EACE;EACA;EACA;EACA;AT0YJ;ASpXM;EACE;EACA;EACA;ATuXR;AO3VE;EACE;EACA;AP8VJ;AOhWE;EACE;EACA;APmWJ;AOrWE;EACE;EACA;APwWJ;AO1WE;EACE;EACA;AP6WJ;AO/WE;EACE;EACA;APkXJ;AOpXE;EACE;EACA;APuXJ;AS1YM;EFCJ;EACA;EACA;AP6YF;AS1YU;EFbR;EAIA;APwZF;AS/YU;EFbR;EAIA;AP6ZF;ASpZU;EFbR;EAIA;APkaF;ASzZU;EFbR;EAIA;APuaF;AS9ZU;EFbR;EAIA;AP4aF;ASnaU;EFbR;EAIA;APibF;ASxaU;EFbR;EAIA;APsbF;AS7aU;EFbR;EAIA;AP2bF;ASlbU;EFbR;EAIA;APgcF;ASvbU;EFbR;EAIA;APqcF;AS5bU;EFbR;EAIA;AP0cF;ASjcU;EFbR;EAIA;AP+cF;AShcM;EAAwB;AToc9B;ASlcM;EAAuB;ATsc7B;ASncQ;EAAwB,QADb;ATwcnB;ASvcQ;EAAwB,QADb;AT4cnB;AS3cQ;EAAwB,QADb;ATgdnB;AS/cQ;EAAwB,QADb;ATodnB;ASndQ;EAAwB,QADb;ATwdnB;ASvdQ;EAAwB,QADb;AT4dnB;AS3dQ;EAAwB,QADb;ATgenB;AS/dQ;EAAwB,QADb;AToenB;ASneQ;EAAwB,QADb;ATwenB;ASveQ;EAAwB,QADb;AT4enB;AS3eQ;EAAwB,SADb;ATgfnB;AS/eQ;EAAwB,SADb;ATofnB;ASnfQ;EAAwB,SADb;ATwfnB;AShfY;EFhBV;APogBF;ASpfY;EFhBV;APwgBF;ASxfY;EFhBV;AP4gBF;AS5fY;EFhBV;APghBF;AShgBY;EFhBV;APohBF;ASpgBY;EFhBV;APwhBF;ASxgBY;EFhBV;AP4hBF;AS5gBY;EFhBV;APgiBF;AShhBY;EFhBV;APoiBF;ASphBY;EFhBV;APwiBF;ASxhBY;EFhBV;AP4iBF;AQviBI;EC3BE;IACE;IACA;IACA;ETskBN;;EO1iBA;IACE;IACA;EP6iBF;;EO/iBA;IACE;IACA;EPkjBF;;EOpjBA;IACE;IACA;EPujBF;;EOzjBA;IACE;IACA;EP4jBF;;EO9jBA;IACE;IACA;EPikBF;;EOnkBA;IACE;IACA;EPskBF;;ESzlBI;IFCJ;IACA;IACA;EP4lBA;;ESzlBQ;IFbR;IAIA;EPumBA;;ES9lBQ;IFbR;IAIA;EP4mBA;;ESnmBQ;IFbR;IAIA;EPinBA;;ESxmBQ;IFbR;IAIA;EPsnBA;;ES7mBQ;IFbR;IAIA;EP2nBA;;ESlnBQ;IFbR;IAIA;EPgoBA;;ESvnBQ;IFbR;IAIA;EPqoBA;;ES5nBQ;IFbR;IAIA;EP0oBA;;ESjoBQ;IFbR;IAIA;EP+oBA;;EStoBQ;IFbR;IAIA;EPopBA;;ES3oBQ;IFbR;IAIA;EPypBA;;EShpBQ;IFbR;IAIA;EP8pBA;;ES/oBI;IAAwB;ETmpB5B;;ESjpBI;IAAuB;ETqpB3B;;ESlpBM;IAAwB,QADb;ETupBjB;;EStpBM;IAAwB,QADb;ET2pBjB;;ES1pBM;IAAwB,QADb;ET+pBjB;;ES9pBM;IAAwB,QADb;ETmqBjB;;ESlqBM;IAAwB,QADb;ETuqBjB;;EStqBM;IAAwB,QADb;ET2qBjB;;ES1qBM;IAAwB,QADb;ET+qBjB;;ES9qBM;IAAwB,QADb;ETmrBjB;;ESlrBM;IAAwB,QADb;ETurBjB;;EStrBM;IAAwB,QADb;ET2rBjB;;ES1rBM;IAAwB,SADb;ET+rBjB;;ES9rBM;IAAwB,SADb;ETmsBjB;;ESlsBM;IAAwB,SADb;ETusBjB;;ES/rBU;IFhBV;EPmtBA;;ESnsBU;IFhBV;EPutBA;;ESvsBU;IFhBV;EP2tBA;;ES3sBU;IFhBV;EP+tBA;;ES/sBU;IFhBV;EPmuBA;;ESntBU;IFhBV;EPuuBA;;ESvtBU;IFhBV;EP2uBA;;ES3tBU;IFhBV;EP+uBA;;ES/tBU;IFhBV;EPmvBA;;ESnuBU;IFhBV;EPuvBA;;ESvuBU;IFhBV;EP2vBA;;ES3uBU;IFhBV;EP+vBA;AACF;AQ3vBI;EC3BE;IACE;IACA;IACA;ETyxBN;;EO7vBA;IACE;IACA;EPgwBF;;EOlwBA;IACE;IACA;EPqwBF;;EOvwBA;IACE;IACA;EP0wBF;;EO5wBA;IACE;IACA;EP+wBF;;EOjxBA;IACE;IACA;EPoxBF;;EOtxBA;IACE;IACA;EPyxBF;;ES5yBI;IFCJ;IACA;IACA;EP+yBA;;ES5yBQ;IFbR;IAIA;EP0zBA;;ESjzBQ;IFbR;IAIA;EP+zBA;;EStzBQ;IFbR;IAIA;EPo0BA;;ES3zBQ;IFbR;IAIA;EPy0BA;;ESh0BQ;IFbR;IAIA;EP80BA;;ESr0BQ;IFbR;IAIA;EPm1BA;;ES10BQ;IFbR;IAIA;EPw1BA;;ES/0BQ;IFbR;IAIA;EP61BA;;ESp1BQ;IFbR;IAIA;EPk2BA;;ESz1BQ;IFbR;IAIA;EPu2BA;;ES91BQ;IFbR;IAIA;EP42BA;;ESn2BQ;IFbR;IAIA;EPi3BA;;ESl2BI;IAAwB;ETs2B5B;;ESp2BI;IAAuB;ETw2B3B;;ESr2BM;IAAwB,QADb;ET02BjB;;ESz2BM;IAAwB,QADb;ET82BjB;;ES72BM;IAAwB,QADb;ETk3BjB;;ESj3BM;IAAwB,QADb;ETs3BjB;;ESr3BM;IAAwB,QADb;ET03BjB;;ESz3BM;IAAwB,QADb;ET83BjB;;ES73BM;IAAwB,QADb;ETk4BjB;;ESj4BM;IAAwB,QADb;ETs4BjB;;ESr4BM;IAAwB,QADb;ET04BjB;;ESz4BM;IAAwB,QADb;ET84BjB;;ES74BM;IAAwB,SADb;ETk5BjB;;ESj5BM;IAAwB,SADb;ETs5BjB;;ESr5BM;IAAwB,SADb;ET05BjB;;ESl5BU;IFhBV;EPs6BA;;ESt5BU;IFhBV;EP06BA;;ES15BU;IFhBV;EP86BA;;ES95BU;IFhBV;EPk7BA;;ESl6BU;IFhBV;EPs7BA;;ESt6BU;IFhBV;EP07BA;;ES16BU;IFhBV;EP87BA;;ES96BU;IFhBV;EPk8BA;;ESl7BU;IFhBV;EPs8BA;;ESt7BU;IFhBV;EP08BA;;ES17BU;IFhBV;EP88BA;;ES97BU;IFhBV;EPk9BA;AACF;AQ98BI;EC3BE;IACE;IACA;IACA;ET4+BN;;EOh9BA;IACE;IACA;EPm9BF;;EOr9BA;IACE;IACA;EPw9BF;;EO19BA;IACE;IACA;EP69BF;;EO/9BA;IACE;IACA;EPk+BF;;EOp+BA;IACE;IACA;EPu+BF;;EOz+BA;IACE;IACA;EP4+BF;;ES//BI;IFCJ;IACA;IACA;EPkgCA;;ES//BQ;IFbR;IAIA;EP6gCA;;ESpgCQ;IFbR;IAIA;EPkhCA;;ESzgCQ;IFbR;IAIA;EPuhCA;;ES9gCQ;IFbR;IAIA;EP4hCA;;ESnhCQ;IFbR;IAIA;EPiiCA;;ESxhCQ;IFbR;IAIA;EPsiCA;;ES7hCQ;IFbR;IAIA;EP2iCA;;ESliCQ;IFbR;IAIA;EPgjCA;;ESviCQ;IFbR;IAIA;EPqjCA;;ES5iCQ;IFbR;IAIA;EP0jCA;;ESjjCQ;IFbR;IAIA;EP+jCA;;EStjCQ;IFbR;IAIA;EPokCA;;ESrjCI;IAAwB;ETyjC5B;;ESvjCI;IAAuB;ET2jC3B;;ESxjCM;IAAwB,QADb;ET6jCjB;;ES5jCM;IAAwB,QADb;ETikCjB;;EShkCM;IAAwB,QADb;ETqkCjB;;ESpkCM;IAAwB,QADb;ETykCjB;;ESxkCM;IAAwB,QADb;ET6kCjB;;ES5kCM;IAAwB,QADb;ETilCjB;;EShlCM;IAAwB,QADb;ETqlCjB;;ESplCM;IAAwB,QADb;ETylCjB;;ESxlCM;IAAwB,QADb;ET6lCjB;;ES5lCM;IAAwB,QADb;ETimCjB;;EShmCM;IAAwB,SADb;ETqmCjB;;ESpmCM;IAAwB,SADb;ETymCjB;;ESxmCM;IAAwB,SADb;ET6mCjB;;ESrmCU;IFhBV;EPynCA;;ESzmCU;IFhBV;EP6nCA;;ES7mCU;IFhBV;EPioCA;;ESjnCU;IFhBV;EPqoCA;;ESrnCU;IFhBV;EPyoCA;;ESznCU;IFhBV;EP6oCA;;ES7nCU;IFhBV;EPipCA;;ESjoCU;IFhBV;EPqpCA;;ESroCU;IFhBV;EPypCA;;ESzoCU;IFhBV;EP6pCA;;ES7oCU;IFhBV;EPiqCA;;ESjpCU;IFhBV;EPqqCA;AACF;AQjqCI;EC3BE;IACE;IACA;IACA;ET+rCN;;EOnqCA;IACE;IACA;EPsqCF;;EOxqCA;IACE;IACA;EP2qCF;;EO7qCA;IACE;IACA;EPgrCF;;EOlrCA;IACE;IACA;EPqrCF;;EOvrCA;IACE;IACA;EP0rCF;;EO5rCA;IACE;IACA;EP+rCF;;ESltCI;IFCJ;IACA;IACA;EPqtCA;;ESltCQ;IFbR;IAIA;EPguCA;;ESvtCQ;IFbR;IAIA;EPquCA;;ES5tCQ;IFbR;IAIA;EP0uCA;;ESjuCQ;IFbR;IAIA;EP+uCA;;EStuCQ;IFbR;IAIA;EPovCA;;ES3uCQ;IFbR;IAIA;EPyvCA;;EShvCQ;IFbR;IAIA;EP8vCA;;ESrvCQ;IFbR;IAIA;EPmwCA;;ES1vCQ;IFbR;IAIA;EPwwCA;;ES/vCQ;IFbR;IAIA;EP6wCA;;ESpwCQ;IFbR;IAIA;EPkxCA;;ESzwCQ;IFbR;IAIA;EPuxCA;;ESxwCI;IAAwB;ET4wC5B;;ES1wCI;IAAuB;ET8wC3B;;ES3wCM;IAAwB,QADb;ETgxCjB;;ES/wCM;IAAwB,QADb;EToxCjB;;ESnxCM;IAAwB,QADb;ETwxCjB;;ESvxCM;IAAwB,QADb;ET4xCjB;;ES3xCM;IAAwB,QADb;ETgyCjB;;ES/xCM;IAAwB,QADb;EToyCjB;;ESnyCM;IAAwB,QADb;ETwyCjB;;ESvyCM;IAAwB,QADb;ET4yCjB;;ES3yCM;IAAwB,QADb;ETgzCjB;;ES/yCM;IAAwB,QADb;ETozCjB;;ESnzCM;IAAwB,SADb;ETwzCjB;;ESvzCM;IAAwB,SADb;ET4zCjB;;ES3zCM;IAAwB,SADb;ETg0CjB;;ESxzCU;IFhBV;EP40CA;;ES5zCU;IFhBV;EPg1CA;;ESh0CU;IFhBV;EPo1CA;;ESp0CU;IFhBV;EPw1CA;;ESx0CU;IFhBV;EP41CA;;ES50CU;IFhBV;EPg2CA;;ESh1CU;IFhBV;EPo2CA;;ESp1CU;IFhBV;EPw2CA;;ESx1CU;IFhBV;EP42CA;;ES51CU;IFhBV;EPg3CA;;ESh2CU;IFhBV;EPo3CA;;ESp2CU;IFhBV;EPw3CA;AACF;AUr6CM;EAAwB;AVw6C9B;AUx6CM;EAAwB;AV46C9B;AU56CM;EAAwB;AVg7C9B;AUh7CM;EAAwB;AVo7C9B;AUp7CM;EAAwB;AVw7C9B;AUx7CM;EAAwB;AV47C9B;AU57CM;EAAwB;AVg8C9B;AUh8CM;EAAwB;AVo8C9B;AUp8CM;EAAwB;AVw8C9B;AQv5CI;EEjDE;IAAwB;EV68C5B;;EU78CI;IAAwB;EVi9C5B;;EUj9CI;IAAwB;EVq9C5B;;EUr9CI;IAAwB;EVy9C5B;;EUz9CI;IAAwB;EV69C5B;;EU79CI;IAAwB;EVi+C5B;;EUj+CI;IAAwB;EVq+C5B;;EUr+CI;IAAwB;EVy+C5B;;EUz+CI;IAAwB;EV6+C5B;AACF;AQ77CI;EEjDE;IAAwB;EVk/C5B;;EUl/CI;IAAwB;EVs/C5B;;EUt/CI;IAAwB;EV0/C5B;;EU1/CI;IAAwB;EV8/C5B;;EU9/CI;IAAwB;EVkgD5B;;EUlgDI;IAAwB;EVsgD5B;;EUtgDI;IAAwB;EV0gD5B;;EU1gDI;IAAwB;EV8gD5B;;EU9gDI;IAAwB;EVkhD5B;AACF;AQl+CI;EEjDE;IAAwB;EVuhD5B;;EUvhDI;IAAwB;EV2hD5B;;EU3hDI;IAAwB;EV+hD5B;;EU/hDI;IAAwB;EVmiD5B;;EUniDI;IAAwB;EVuiD5B;;EUviDI;IAAwB;EV2iD5B;;EU3iDI;IAAwB;EV+iD5B;;EU/iDI;IAAwB;EVmjD5B;;EUnjDI;IAAwB;EVujD5B;AACF;AQvgDI;EEjDE;IAAwB;EV4jD5B;;EU5jDI;IAAwB;EVgkD5B;;EUhkDI;IAAwB;EVokD5B;;EUpkDI;IAAwB;EVwkD5B;;EUxkDI;IAAwB;EV4kD5B;;EU5kDI;IAAwB;EVglD5B;;EUhlDI;IAAwB;EVolD5B;;EUplDI;IAAwB;EVwlD5B;;EUxlDI;IAAwB;EV4lD5B;AACF;AUnlDA;EAEI;IAAqB;EVqlDvB;;EUrlDE;IAAqB;EVylDvB;;EUzlDE;IAAqB;EV6lDvB;;EU7lDE;IAAqB;EVimDvB;;EUjmDE;IAAqB;EVqmDvB;;EUrmDE;IAAqB;EVymDvB;;EUzmDE;IAAqB;EV6mDvB;;EU7mDE;IAAqB;EVinDvB;;EUjnDE;IAAqB;EVqnDvB;AACF;AWnoDI;EAAgC;AXsoDpC;AWroDI;EAAgC;AXyoDpC;AWxoDI;EAAgC;AX4oDpC;AW3oDI;EAAgC;AX+oDpC;AW7oDI;EAA8B;AXipDlC;AWhpDI;EAA8B;AXopDlC;AWnpDI;EAA8B;AXupDlC;AWtpDI;EAA8B;AX0pDlC;AWzpDI;EAA8B;AX6pDlC;AW5pDI;EAA8B;AXgqDlC;AW/pDI;EAA8B;AXmqDlC;AWlqDI;EAA8B;AXsqDlC;AWpqDI;EAAoC;AXwqDxC;AWvqDI;EAAoC;AX2qDxC;AW1qDI;EAAoC;AX8qDxC;AW7qDI;EAAoC;AXirDxC;AWhrDI;EAAoC;AXorDxC;AWlrDI;EAAiC;AXsrDrC;AWrrDI;EAAiC;AXyrDrC;AWxrDI;EAAiC;AX4rDrC;AW3rDI;EAAiC;AX+rDrC;AW9rDI;EAAiC;AXksDrC;AWhsDI;EAAkC;AXosDtC;AWnsDI;EAAkC;AXusDtC;AWtsDI;EAAkC;AX0sDtC;AWzsDI;EAAkC;AX6sDtC;AW5sDI;EAAkC;AXgtDtC;AW/sDI;EAAkC;AXmtDtC;AWjtDI;EAAgC;AXqtDpC;AWptDI;EAAgC;AXwtDpC;AWvtDI;EAAgC;AX2tDpC;AW1tDI;EAAgC;AX8tDpC;AW7tDI;EAAgC;AXiuDpC;AWhuDI;EAAgC;AXouDpC;AQxtDI;EGlDA;IAAgC;EX+wDlC;;EW9wDE;IAAgC;EXkxDlC;;EWjxDE;IAAgC;EXqxDlC;;EWpxDE;IAAgC;EXwxDlC;;EWtxDE;IAA8B;EX0xDhC;;EWzxDE;IAA8B;EX6xDhC;;EW5xDE;IAA8B;EXgyDhC;;EW/xDE;IAA8B;EXmyDhC;;EWlyDE;IAA8B;EXsyDhC;;EWryDE;IAA8B;EXyyDhC;;EWxyDE;IAA8B;EX4yDhC;;EW3yDE;IAA8B;EX+yDhC;;EW7yDE;IAAoC;EXizDtC;;EWhzDE;IAAoC;EXozDtC;;EWnzDE;IAAoC;EXuzDtC;;EWtzDE;IAAoC;EX0zDtC;;EWzzDE;IAAoC;EX6zDtC;;EW3zDE;IAAiC;EX+zDnC;;EW9zDE;IAAiC;EXk0DnC;;EWj0DE;IAAiC;EXq0DnC;;EWp0DE;IAAiC;EXw0DnC;;EWv0DE;IAAiC;EX20DnC;;EWz0DE;IAAkC;EX60DpC;;EW50DE;IAAkC;EXg1DpC;;EW/0DE;IAAkC;EXm1DpC;;EWl1DE;IAAkC;EXs1DpC;;EWr1DE;IAAkC;EXy1DpC;;EWx1DE;IAAkC;EX41DpC;;EW11DE;IAAgC;EX81DlC;;EW71DE;IAAgC;EXi2DlC;;EWh2DE;IAAgC;EXo2DlC;;EWn2DE;IAAgC;EXu2DlC;;EWt2DE;IAAgC;EX02DlC;;EWz2DE;IAAgC;EX62DlC;AACF;AQl2DI;EGlDA;IAAgC;EXw5DlC;;EWv5DE;IAAgC;EX25DlC;;EW15DE;IAAgC;EX85DlC;;EW75DE;IAAgC;EXi6DlC;;EW/5DE;IAA8B;EXm6DhC;;EWl6DE;IAA8B;EXs6DhC;;EWr6DE;IAA8B;EXy6DhC;;EWx6DE;IAA8B;EX46DhC;;EW36DE;IAA8B;EX+6DhC;;EW96DE;IAA8B;EXk7DhC;;EWj7DE;IAA8B;EXq7DhC;;EWp7DE;IAA8B;EXw7DhC;;EWt7DE;IAAoC;EX07DtC;;EWz7DE;IAAoC;EX67DtC;;EW57DE;IAAoC;EXg8DtC;;EW/7DE;IAAoC;EXm8DtC;;EWl8DE;IAAoC;EXs8DtC;;EWp8DE;IAAiC;EXw8DnC;;EWv8DE;IAAiC;EX28DnC;;EW18DE;IAAiC;EX88DnC;;EW78DE;IAAiC;EXi9DnC;;EWh9DE;IAAiC;EXo9DnC;;EWl9DE;IAAkC;EXs9DpC;;EWr9DE;IAAkC;EXy9DpC;;EWx9DE;IAAkC;EX49DpC;;EW39DE;IAAkC;EX+9DpC;;EW99DE;IAAkC;EXk+DpC;;EWj+DE;IAAkC;EXq+DpC;;EWn+DE;IAAgC;EXu+DlC;;EWt+DE;IAAgC;EX0+DlC;;EWz+DE;IAAgC;EX6+DlC;;EW5+DE;IAAgC;EXg/DlC;;EW/+DE;IAAgC;EXm/DlC;;EWl/DE;IAAgC;EXs/DlC;AACF;AQ3+DI;EGlDA;IAAgC;EXiiElC;;EWhiEE;IAAgC;EXoiElC;;EWniEE;IAAgC;EXuiElC;;EWtiEE;IAAgC;EX0iElC;;EWxiEE;IAA8B;EX4iEhC;;EW3iEE;IAA8B;EX+iEhC;;EW9iEE;IAA8B;EXkjEhC;;EWjjEE;IAA8B;EXqjEhC;;EWpjEE;IAA8B;EXwjEhC;;EWvjEE;IAA8B;EX2jEhC;;EW1jEE;IAA8B;EX8jEhC;;EW7jEE;IAA8B;EXikEhC;;EW/jEE;IAAoC;EXmkEtC;;EWlkEE;IAAoC;EXskEtC;;EWrkEE;IAAoC;EXykEtC;;EWxkEE;IAAoC;EX4kEtC;;EW3kEE;IAAoC;EX+kEtC;;EW7kEE;IAAiC;EXilEnC;;EWhlEE;IAAiC;EXolEnC;;EWnlEE;IAAiC;EXulEnC;;EWtlEE;IAAiC;EX0lEnC;;EWzlEE;IAAiC;EX6lEnC;;EW3lEE;IAAkC;EX+lEpC;;EW9lEE;IAAkC;EXkmEpC;;EWjmEE;IAAkC;EXqmEpC;;EWpmEE;IAAkC;EXwmEpC;;EWvmEE;IAAkC;EX2mEpC;;EW1mEE;IAAkC;EX8mEpC;;EW5mEE;IAAgC;EXgnElC;;EW/mEE;IAAgC;EXmnElC;;EWlnEE;IAAgC;EXsnElC;;EWrnEE;IAAgC;EXynElC;;EWxnEE;IAAgC;EX4nElC;;EW3nEE;IAAgC;EX+nElC;AACF;AQpnEI;EGlDA;IAAgC;EX0qElC;;EWzqEE;IAAgC;EX6qElC;;EW5qEE;IAAgC;EXgrElC;;EW/qEE;IAAgC;EXmrElC;;EWjrEE;IAA8B;EXqrEhC;;EWprEE;IAA8B;EXwrEhC;;EWvrEE;IAA8B;EX2rEhC;;EW1rEE;IAA8B;EX8rEhC;;EW7rEE;IAA8B;EXisEhC;;EWhsEE;IAA8B;EXosEhC;;EWnsEE;IAA8B;EXusEhC;;EWtsEE;IAA8B;EX0sEhC;;EWxsEE;IAAoC;EX4sEtC;;EW3sEE;IAAoC;EX+sEtC;;EW9sEE;IAAoC;EXktEtC;;EWjtEE;IAAoC;EXqtEtC;;EWptEE;IAAoC;EXwtEtC;;EWttEE;IAAiC;EX0tEnC;;EWztEE;IAAiC;EX6tEnC;;EW5tEE;IAAiC;EXguEnC;;EW/tEE;IAAiC;EXmuEnC;;EWluEE;IAAiC;EXsuEnC;;EWpuEE;IAAkC;EXwuEpC;;EWvuEE;IAAkC;EX2uEpC;;EW1uEE;IAAkC;EX8uEpC;;EW7uEE;IAAkC;EXivEpC;;EWhvEE;IAAkC;EXovEpC;;EWnvEE;IAAkC;EXuvEpC;;EWrvEE;IAAgC;EXyvElC;;EWxvEE;IAAgC;EX4vElC;;EW3vEE;IAAgC;EX+vElC;;EW9vEE;IAAgC;EXkwElC;;EWjwEE;IAAgC;EXqwElC;;EWpwEE;IAAgC;EXwwElC;AACF;AY/yEQ;EAAgC;AZkzExC;AYjzEQ;;EAEE;AZozEV;AYlzEQ;;EAEE;AZqzEV;AYnzEQ;;EAEE;AZszEV;AYpzEQ;;EAEE;AZuzEV;AYt0EQ;EAAgC;AZ00ExC;AYz0EQ;;EAEE;AZ40EV;AY10EQ;;EAEE;AZ60EV;AY30EQ;;EAEE;AZ80EV;AY50EQ;;EAEE;AZ+0EV;AY91EQ;EAAgC;AZk2ExC;AYj2EQ;;EAEE;AZo2EV;AYl2EQ;;EAEE;AZq2EV;AYn2EQ;;EAEE;AZs2EV;AYp2EQ;;EAEE;AZu2EV;AYt3EQ;EAAgC;AZ03ExC;AYz3EQ;;EAEE;AZ43EV;AY13EQ;;EAEE;AZ63EV;AY33EQ;;EAEE;AZ83EV;AY53EQ;;EAEE;AZ+3EV;AY94EQ;EAAgC;AZk5ExC;AYj5EQ;;EAEE;AZo5EV;AYl5EQ;;EAEE;AZq5EV;AYn5EQ;;EAEE;AZs5EV;AYp5EQ;;EAEE;AZu5EV;AYt6EQ;EAAgC;AZ06ExC;AYz6EQ;;EAEE;AZ46EV;AY16EQ;;EAEE;AZ66EV;AY36EQ;;EAEE;AZ86EV;AY56EQ;;EAEE;AZ+6EV;AY97EQ;EAAgC;AZk8ExC;AYj8EQ;;EAEE;AZo8EV;AYl8EQ;;EAEE;AZq8EV;AYn8EQ;;EAEE;AZs8EV;AYp8EQ;;EAEE;AZu8EV;AYt9EQ;EAAgC;AZ09ExC;AYz9EQ;;EAEE;AZ49EV;AY19EQ;;EAEE;AZ69EV;AY39EQ;;EAEE;AZ89EV;AY59EQ;;EAEE;AZ+9EV;AY9+EQ;EAAgC;AZk/ExC;AYj/EQ;;EAEE;AZo/EV;AYl/EQ;;EAEE;AZq/EV;AYn/EQ;;EAEE;AZs/EV;AYp/EQ;;EAEE;AZu/EV;AYtgFQ;EAAgC;AZ0gFxC;AYzgFQ;;EAEE;AZ4gFV;AY1gFQ;;EAEE;AZ6gFV;AY3gFQ;;EAEE;AZ8gFV;AY5gFQ;;EAEE;AZ+gFV;AY9hFQ;EAAgC;AZkiFxC;AYjiFQ;;EAEE;AZoiFV;AYliFQ;;EAEE;AZqiFV;AYniFQ;;EAEE;AZsiFV;AYpiFQ;;EAEE;AZuiFV;AYtjFQ;EAAgC;AZ0jFxC;AYzjFQ;;EAEE;AZ4jFV;AY1jFQ;;EAEE;AZ6jFV;AY3jFQ;;EAEE;AZ8jFV;AY5jFQ;;EAEE;AZ+jFV;AYvjFQ;EAAwB;AZ2jFhC;AY1jFQ;;EAEE;AZ6jFV;AY3jFQ;;EAEE;AZ8jFV;AY5jFQ;;EAEE;AZ+jFV;AY7jFQ;;EAEE;AZgkFV;AY/kFQ;EAAwB;AZmlFhC;AYllFQ;;EAEE;AZqlFV;AYnlFQ;;EAEE;AZslFV;AYplFQ;;EAEE;AZulFV;AYrlFQ;;EAEE;AZwlFV;AYvmFQ;EAAwB;AZ2mFhC;AY1mFQ;;EAEE;AZ6mFV;AY3mFQ;;EAEE;AZ8mFV;AY5mFQ;;EAEE;AZ+mFV;AY7mFQ;;EAEE;AZgnFV;AY/nFQ;EAAwB;AZmoFhC;AYloFQ;;EAEE;AZqoFV;AYnoFQ;;EAEE;AZsoFV;AYpoFQ;;EAEE;AZuoFV;AYroFQ;;EAEE;AZwoFV;AYvpFQ;EAAwB;AZ2pFhC;AY1pFQ;;EAEE;AZ6pFV;AY3pFQ;;EAEE;AZ8pFV;AY5pFQ;;EAEE;AZ+pFV;AY7pFQ;;EAEE;AZgqFV;AY1pFI;EAAmB;AZ8pFvB;AY7pFI;;EAEE;AZgqFN;AY9pFI;;EAEE;AZiqFN;AY/pFI;;EAEE;AZkqFN;AYhqFI;;EAEE;AZmqFN;AQ5qFI;EIlDI;IAAgC;EZmuFtC;;EYluFM;;IAEE;EZquFR;;EYnuFM;;IAEE;EZsuFR;;EYpuFM;;IAEE;EZuuFR;;EYruFM;;IAEE;EZwuFR;;EYvvFM;IAAgC;EZ2vFtC;;EY1vFM;;IAEE;EZ6vFR;;EY3vFM;;IAEE;EZ8vFR;;EY5vFM;;IAEE;EZ+vFR;;EY7vFM;;IAEE;EZgwFR;;EY/wFM;IAAgC;EZmxFtC;;EYlxFM;;IAEE;EZqxFR;;EYnxFM;;IAEE;EZsxFR;;EYpxFM;;IAEE;EZuxFR;;EYrxFM;;IAEE;EZwxFR;;EYvyFM;IAAgC;EZ2yFtC;;EY1yFM;;IAEE;EZ6yFR;;EY3yFM;;IAEE;EZ8yFR;;EY5yFM;;IAEE;EZ+yFR;;EY7yFM;;IAEE;EZgzFR;;EY/zFM;IAAgC;EZm0FtC;;EYl0FM;;IAEE;EZq0FR;;EYn0FM;;IAEE;EZs0FR;;EYp0FM;;IAEE;EZu0FR;;EYr0FM;;IAEE;EZw0FR;;EYv1FM;IAAgC;EZ21FtC;;EY11FM;;IAEE;EZ61FR;;EY31FM;;IAEE;EZ81FR;;EY51FM;;IAEE;EZ+1FR;;EY71FM;;IAEE;EZg2FR;;EY/2FM;IAAgC;EZm3FtC;;EYl3FM;;IAEE;EZq3FR;;EYn3FM;;IAEE;EZs3FR;;EYp3FM;;IAEE;EZu3FR;;EYr3FM;;IAEE;EZw3FR;;EYv4FM;IAAgC;EZ24FtC;;EY14FM;;IAEE;EZ64FR;;EY34FM;;IAEE;EZ84FR;;EY54FM;;IAEE;EZ+4FR;;EY74FM;;IAEE;EZg5FR;;EY/5FM;IAAgC;EZm6FtC;;EYl6FM;;IAEE;EZq6FR;;EYn6FM;;IAEE;EZs6FR;;EYp6FM;;IAEE;EZu6FR;;EYr6FM;;IAEE;EZw6FR;;EYv7FM;IAAgC;EZ27FtC;;EY17FM;;IAEE;EZ67FR;;EY37FM;;IAEE;EZ87FR;;EY57FM;;IAEE;EZ+7FR;;EY77FM;;IAEE;EZg8FR;;EY/8FM;IAAgC;EZm9FtC;;EYl9FM;;IAEE;EZq9FR;;EYn9FM;;IAEE;EZs9FR;;EYp9FM;;IAEE;EZu9FR;;EYr9FM;;IAEE;EZw9FR;;EYv+FM;IAAgC;EZ2+FtC;;EY1+FM;;IAEE;EZ6+FR;;EY3+FM;;IAEE;EZ8+FR;;EY5+FM;;IAEE;EZ++FR;;EY7+FM;;IAEE;EZg/FR;;EYx+FM;IAAwB;EZ4+F9B;;EY3+FM;;IAEE;EZ8+FR;;EY5+FM;;IAEE;EZ++FR;;EY7+FM;;IAEE;EZg/FR;;EY9+FM;;IAEE;EZi/FR;;EYhgGM;IAAwB;EZogG9B;;EYngGM;;IAEE;EZsgGR;;EYpgGM;;IAEE;EZugGR;;EYrgGM;;IAEE;EZwgGR;;EYtgGM;;IAEE;EZygGR;;EYxhGM;IAAwB;EZ4hG9B;;EY3hGM;;IAEE;EZ8hGR;;EY5hGM;;IAEE;EZ+hGR;;EY7hGM;;IAEE;EZgiGR;;EY9hGM;;IAEE;EZiiGR;;EYhjGM;IAAwB;EZojG9B;;EYnjGM;;IAEE;EZsjGR;;EYpjGM;;IAEE;EZujGR;;EYrjGM;;IAEE;EZwjGR;;EYtjGM;;IAEE;EZyjGR;;EYxkGM;IAAwB;EZ4kG9B;;EY3kGM;;IAEE;EZ8kGR;;EY5kGM;;IAEE;EZ+kGR;;EY7kGM;;IAEE;EZglGR;;EY9kGM;;IAEE;EZilGR;;EY3kGE;IAAmB;EZ+kGrB;;EY9kGE;;IAEE;EZilGJ;;EY/kGE;;IAEE;EZklGJ;;EYhlGE;;IAEE;EZmlGJ;;EYjlGE;;IAEE;EZolGJ;AACF;AQ9lGI;EIlDI;IAAgC;EZopGtC;;EYnpGM;;IAEE;EZspGR;;EYppGM;;IAEE;EZupGR;;EYrpGM;;IAEE;EZwpGR;;EYtpGM;;IAEE;EZypGR;;EYxqGM;IAAgC;EZ4qGtC;;EY3qGM;;IAEE;EZ8qGR;;EY5qGM;;IAEE;EZ+qGR;;EY7qGM;;IAEE;EZgrGR;;EY9qGM;;IAEE;EZirGR;;EYhsGM;IAAgC;EZosGtC;;EYnsGM;;IAEE;EZssGR;;EYpsGM;;IAEE;EZusGR;;EYrsGM;;IAEE;EZwsGR;;EYtsGM;;IAEE;EZysGR;;EYxtGM;IAAgC;EZ4tGtC;;EY3tGM;;IAEE;EZ8tGR;;EY5tGM;;IAEE;EZ+tGR;;EY7tGM;;IAEE;EZguGR;;EY9tGM;;IAEE;EZiuGR;;EYhvGM;IAAgC;EZovGtC;;EYnvGM;;IAEE;EZsvGR;;EYpvGM;;IAEE;EZuvGR;;EYrvGM;;IAEE;EZwvGR;;EYtvGM;;IAEE;EZyvGR;;EYxwGM;IAAgC;EZ4wGtC;;EY3wGM;;IAEE;EZ8wGR;;EY5wGM;;IAEE;EZ+wGR;;EY7wGM;;IAEE;EZgxGR;;EY9wGM;;IAEE;EZixGR;;EYhyGM;IAAgC;EZoyGtC;;EYnyGM;;IAEE;EZsyGR;;EYpyGM;;IAEE;EZuyGR;;EYryGM;;IAEE;EZwyGR;;EYtyGM;;IAEE;EZyyGR;;EYxzGM;IAAgC;EZ4zGtC;;EY3zGM;;IAEE;EZ8zGR;;EY5zGM;;IAEE;EZ+zGR;;EY7zGM;;IAEE;EZg0GR;;EY9zGM;;IAEE;EZi0GR;;EYh1GM;IAAgC;EZo1GtC;;EYn1GM;;IAEE;EZs1GR;;EYp1GM;;IAEE;EZu1GR;;EYr1GM;;IAEE;EZw1GR;;EYt1GM;;IAEE;EZy1GR;;EYx2GM;IAAgC;EZ42GtC;;EY32GM;;IAEE;EZ82GR;;EY52GM;;IAEE;EZ+2GR;;EY72GM;;IAEE;EZg3GR;;EY92GM;;IAEE;EZi3GR;;EYh4GM;IAAgC;EZo4GtC;;EYn4GM;;IAEE;EZs4GR;;EYp4GM;;IAEE;EZu4GR;;EYr4GM;;IAEE;EZw4GR;;EYt4GM;;IAEE;EZy4GR;;EYx5GM;IAAgC;EZ45GtC;;EY35GM;;IAEE;EZ85GR;;EY55GM;;IAEE;EZ+5GR;;EY75GM;;IAEE;EZg6GR;;EY95GM;;IAEE;EZi6GR;;EYz5GM;IAAwB;EZ65G9B;;EY55GM;;IAEE;EZ+5GR;;EY75GM;;IAEE;EZg6GR;;EY95GM;;IAEE;EZi6GR;;EY/5GM;;IAEE;EZk6GR;;EYj7GM;IAAwB;EZq7G9B;;EYp7GM;;IAEE;EZu7GR;;EYr7GM;;IAEE;EZw7GR;;EYt7GM;;IAEE;EZy7GR;;EYv7GM;;IAEE;EZ07GR;;EYz8GM;IAAwB;EZ68G9B;;EY58GM;;IAEE;EZ+8GR;;EY78GM;;IAEE;EZg9GR;;EY98GM;;IAEE;EZi9GR;;EY/8GM;;IAEE;EZk9GR;;EYj+GM;IAAwB;EZq+G9B;;EYp+GM;;IAEE;EZu+GR;;EYr+GM;;IAEE;EZw+GR;;EYt+GM;;IAEE;EZy+GR;;EYv+GM;;IAEE;EZ0+GR;;EYz/GM;IAAwB;EZ6/G9B;;EY5/GM;;IAEE;EZ+/GR;;EY7/GM;;IAEE;EZggHR;;EY9/GM;;IAEE;EZigHR;;EY//GM;;IAEE;EZkgHR;;EY5/GE;IAAmB;EZggHrB;;EY//GE;;IAEE;EZkgHJ;;EYhgHE;;IAEE;EZmgHJ;;EYjgHE;;IAEE;EZogHJ;;EYlgHE;;IAEE;EZqgHJ;AACF;AQ/gHI;EIlDI;IAAgC;EZqkHtC;;EYpkHM;;IAEE;EZukHR;;EYrkHM;;IAEE;EZwkHR;;EYtkHM;;IAEE;EZykHR;;EYvkHM;;IAEE;EZ0kHR;;EYzlHM;IAAgC;EZ6lHtC;;EY5lHM;;IAEE;EZ+lHR;;EY7lHM;;IAEE;EZgmHR;;EY9lHM;;IAEE;EZimHR;;EY/lHM;;IAEE;EZkmHR;;EYjnHM;IAAgC;EZqnHtC;;EYpnHM;;IAEE;EZunHR;;EYrnHM;;IAEE;EZwnHR;;EYtnHM;;IAEE;EZynHR;;EYvnHM;;IAEE;EZ0nHR;;EYzoHM;IAAgC;EZ6oHtC;;EY5oHM;;IAEE;EZ+oHR;;EY7oHM;;IAEE;EZgpHR;;EY9oHM;;IAEE;EZipHR;;EY/oHM;;IAEE;EZkpHR;;EYjqHM;IAAgC;EZqqHtC;;EYpqHM;;IAEE;EZuqHR;;EYrqHM;;IAEE;EZwqHR;;EYtqHM;;IAEE;EZyqHR;;EYvqHM;;IAEE;EZ0qHR;;EYzrHM;IAAgC;EZ6rHtC;;EY5rHM;;IAEE;EZ+rHR;;EY7rHM;;IAEE;EZgsHR;;EY9rHM;;IAEE;EZisHR;;EY/rHM;;IAEE;EZksHR;;EYjtHM;IAAgC;EZqtHtC;;EYptHM;;IAEE;EZutHR;;EYrtHM;;IAEE;EZwtHR;;EYttHM;;IAEE;EZytHR;;EYvtHM;;IAEE;EZ0tHR;;EYzuHM;IAAgC;EZ6uHtC;;EY5uHM;;IAEE;EZ+uHR;;EY7uHM;;IAEE;EZgvHR;;EY9uHM;;IAEE;EZivHR;;EY/uHM;;IAEE;EZkvHR;;EYjwHM;IAAgC;EZqwHtC;;EYpwHM;;IAEE;EZuwHR;;EYrwHM;;IAEE;EZwwHR;;EYtwHM;;IAEE;EZywHR;;EYvwHM;;IAEE;EZ0wHR;;EYzxHM;IAAgC;EZ6xHtC;;EY5xHM;;IAEE;EZ+xHR;;EY7xHM;;IAEE;EZgyHR;;EY9xHM;;IAEE;EZiyHR;;EY/xHM;;IAEE;EZkyHR;;EYjzHM;IAAgC;EZqzHtC;;EYpzHM;;IAEE;EZuzHR;;EYrzHM;;IAEE;EZwzHR;;EYtzHM;;IAEE;EZyzHR;;EYvzHM;;IAEE;EZ0zHR;;EYz0HM;IAAgC;EZ60HtC;;EY50HM;;IAEE;EZ+0HR;;EY70HM;;IAEE;EZg1HR;;EY90HM;;IAEE;EZi1HR;;EY/0HM;;IAEE;EZk1HR;;EY10HM;IAAwB;EZ80H9B;;EY70HM;;IAEE;EZg1HR;;EY90HM;;IAEE;EZi1HR;;EY/0HM;;IAEE;EZk1HR;;EYh1HM;;IAEE;EZm1HR;;EYl2HM;IAAwB;EZs2H9B;;EYr2HM;;IAEE;EZw2HR;;EYt2HM;;IAEE;EZy2HR;;EYv2HM;;IAEE;EZ02HR;;EYx2HM;;IAEE;EZ22HR;;EY13HM;IAAwB;EZ83H9B;;EY73HM;;IAEE;EZg4HR;;EY93HM;;IAEE;EZi4HR;;EY/3HM;;IAEE;EZk4HR;;EYh4HM;;IAEE;EZm4HR;;EYl5HM;IAAwB;EZs5H9B;;EYr5HM;;IAEE;EZw5HR;;EYt5HM;;IAEE;EZy5HR;;EYv5HM;;IAEE;EZ05HR;;EYx5HM;;IAEE;EZ25HR;;EY16HM;IAAwB;EZ86H9B;;EY76HM;;IAEE;EZg7HR;;EY96HM;;IAEE;EZi7HR;;EY/6HM;;IAEE;EZk7HR;;EYh7HM;;IAEE;EZm7HR;;EY76HE;IAAmB;EZi7HrB;;EYh7HE;;IAEE;EZm7HJ;;EYj7HE;;IAEE;EZo7HJ;;EYl7HE;;IAEE;EZq7HJ;;EYn7HE;;IAEE;EZs7HJ;AACF;AQh8HI;EIlDI;IAAgC;EZs/HtC;;EYr/HM;;IAEE;EZw/HR;;EYt/HM;;IAEE;EZy/HR;;EYv/HM;;IAEE;EZ0/HR;;EYx/HM;;IAEE;EZ2/HR;;EY1gIM;IAAgC;EZ8gItC;;EY7gIM;;IAEE;EZghIR;;EY9gIM;;IAEE;EZihIR;;EY/gIM;;IAEE;EZkhIR;;EYhhIM;;IAEE;EZmhIR;;EYliIM;IAAgC;EZsiItC;;EYriIM;;IAEE;EZwiIR;;EYtiIM;;IAEE;EZyiIR;;EYviIM;;IAEE;EZ0iIR;;EYxiIM;;IAEE;EZ2iIR;;EY1jIM;IAAgC;EZ8jItC;;EY7jIM;;IAEE;EZgkIR;;EY9jIM;;IAEE;EZikIR;;EY/jIM;;IAEE;EZkkIR;;EYhkIM;;IAEE;EZmkIR;;EYllIM;IAAgC;EZslItC;;EYrlIM;;IAEE;EZwlIR;;EYtlIM;;IAEE;EZylIR;;EYvlIM;;IAEE;EZ0lIR;;EYxlIM;;IAEE;EZ2lIR;;EY1mIM;IAAgC;EZ8mItC;;EY7mIM;;IAEE;EZgnIR;;EY9mIM;;IAEE;EZinIR;;EY/mIM;;IAEE;EZknIR;;EYhnIM;;IAEE;EZmnIR;;EYloIM;IAAgC;EZsoItC;;EYroIM;;IAEE;EZwoIR;;EYtoIM;;IAEE;EZyoIR;;EYvoIM;;IAEE;EZ0oIR;;EYxoIM;;IAEE;EZ2oIR;;EY1pIM;IAAgC;EZ8pItC;;EY7pIM;;IAEE;EZgqIR;;EY9pIM;;IAEE;EZiqIR;;EY/pIM;;IAEE;EZkqIR;;EYhqIM;;IAEE;EZmqIR;;EYlrIM;IAAgC;EZsrItC;;EYrrIM;;IAEE;EZwrIR;;EYtrIM;;IAEE;EZyrIR;;EYvrIM;;IAEE;EZ0rIR;;EYxrIM;;IAEE;EZ2rIR;;EY1sIM;IAAgC;EZ8sItC;;EY7sIM;;IAEE;EZgtIR;;EY9sIM;;IAEE;EZitIR;;EY/sIM;;IAEE;EZktIR;;EYhtIM;;IAEE;EZmtIR;;EYluIM;IAAgC;EZsuItC;;EYruIM;;IAEE;EZwuIR;;EYtuIM;;IAEE;EZyuIR;;EYvuIM;;IAEE;EZ0uIR;;EYxuIM;;IAEE;EZ2uIR;;EY1vIM;IAAgC;EZ8vItC;;EY7vIM;;IAEE;EZgwIR;;EY9vIM;;IAEE;EZiwIR;;EY/vIM;;IAEE;EZkwIR;;EYhwIM;;IAEE;EZmwIR;;EY3vIM;IAAwB;EZ+vI9B;;EY9vIM;;IAEE;EZiwIR;;EY/vIM;;IAEE;EZkwIR;;EYhwIM;;IAEE;EZmwIR;;EYjwIM;;IAEE;EZowIR;;EYnxIM;IAAwB;EZuxI9B;;EYtxIM;;IAEE;EZyxIR;;EYvxIM;;IAEE;EZ0xIR;;EYxxIM;;IAEE;EZ2xIR;;EYzxIM;;IAEE;EZ4xIR;;EY3yIM;IAAwB;EZ+yI9B;;EY9yIM;;IAEE;EZizIR;;EY/yIM;;IAEE;EZkzIR;;EYhzIM;;IAEE;EZmzIR;;EYjzIM;;IAEE;EZozIR;;EYn0IM;IAAwB;EZu0I9B;;EYt0IM;;IAEE;EZy0IR;;EYv0IM;;IAEE;EZ00IR;;EYx0IM;;IAEE;EZ20IR;;EYz0IM;;IAEE;EZ40IR;;EY31IM;IAAwB;EZ+1I9B;;EY91IM;;IAEE;EZi2IR;;EY/1IM;;IAEE;EZk2IR;;EYh2IM;;IAEE;EZm2IR;;EYj2IM;;IAEE;EZo2IR;;EY91IE;IAAmB;EZk2IrB;;EYj2IE;;IAEE;EZo2IJ;;EYl2IE;;IAEE;EZq2IJ;;EYn2IE;;IAEE;EZs2IJ;;EYp2IE;;IAEE;EZu2IJ;AACF;Aa56IE;;EAEE;Ab86IJ;Aa16IA;EACE;EACA;EACA;Ab66IF;Aaz6IE;EACE;EACA;EACA;Ab46IJ;Aav6IE;EACE;Ab06IJ;AH9nFA;AA+IA;AAobA;AAmwDA;AA6CA;AAx+CE;EACE,gBAvLoB;EAwLpB,eAzLkB;EA0LlB;AG2vDJ;AHxvDE;EAEE;AG0vDJ;AHvvDE;EACE;AG0vDJ;AH5kEE;EA/VE;EAYF;EAqVE;AGglEJ;AH7kEE;EApWE;EAYF;EA0VE;AGilEJ;AH9kEE;EAzWE;EAYF;EA+VE;AGklEJ;AH/kEE;EA9WE;EAYF;EAoWE;AGmlEJ;AH7kEE;EAtXE;EA+XA;AGykEJ;AHtkEE;EAlYE;EA2YA;AGkkEJ;AH/jEE;EA9YE;EAYF;AGs8EF;AHhkEE;EAlZE;EAYF;AG28EF;AHlkEI;EACE;AGokEN;AHhkEE;EA1ZE;EAYF;AGm9EF;AHjkEE;EA9ZE;EAYF;EAoZE;AGqkEJ;AHlkEE;EAnaE;EAYF;EAyZE;AGskEJ;AHnkEE;EAxaE;EAYF;EA8ZE;AGukEJ;AHpkEE;EA7aE;EAYF;EAmaE;AGwkEJ;AH1xDE;EA7tBE;EAYF;AGg/EF;AHjmDE;;EAGI;EACA;EACA;AGmmDN;AHn+CE;EACE;AGs+CJ;AHt6CE;EACE;AGy6CJ;AHt6CE;EAEI;EACA;AGw6CN;AHp6CE;EACE;AGu6CJ;AHp6CE;;EAEE;AGu6CJ;AH3yCE;EACE;AG8yCJ;AH1yCE;EACE;AG6yCJ;AH1rCE;EACE;EACA;AG6rCJ;AH3rCI;;EAEE,eA3FsB;AGwxC5B;AHtlCE;EACE;AGylCJ;AHtlCE;EACE;EACA;AGylCJ;AHtlCE;EACE;AGylCJ;AH14BE;EACE;AG64BJ;AH14BE;EACE,eAjL0B;AG8jC9B;AH14BE;;EAGI;EACA;AG44BN;AHx4BE;EAEI,eA7LiC;EA8LjC;AG04BN;AHxzBE;EAlxDE;EAYF;AGmkFF;AHjsBE;EAEI;EACA;EACA;AGmsBN;AH/rBE;EAt5DE;EAYF;AG8kFF;AHk/DE;EArlJE,kBAeU;EAdV,gBAeY;EAdZ,kBAeY;EAdZ,iDAeY;EAGd;AGslFF;AH8+DE;EACE,yBAPuB;AGp+D3B;AHi/DI;;EACE,eAvB2B;EAwB3B,kBAjlJU;AGomFhB;AHi/DI;;EACE;EACA;AG9+DN;AHg/DM;;EACE;EACA,kBA3lJQ;AG8mFhB;AHk/DE;EACE;EAEA;AGh/DJ;AHo/DI;;EAtEF;EAEA;AG16DF;AHs/DI;EA9EF;EAEA;AGt6DF;AHy/DE;EACE;EACA,sBAnEiB;AGn7DrB;AHy/DE;EACE;AGt/DJ;AHy/DE;EAGE,iBAhEuB;AGx7D3B;AH2/DE;EACE,cA/EoB;EAgFpB,0BAzEqB;EA6ErB;AG3/DJ;AH6+CI;EACE,sBAJqB;AGt+C3B;AH6+CI;EACE;AG3+CN;AH++CM;;EA1DJ;EAIA;EAGA;AGt7CF;AHg/CM;EAjEJ;EAIA;EAGA;AGj7CF;AHm/CM;EAzEJ;EAIA;EAGA;AG56CF;AHq/CI;EACE;AGn/CN;AHs/CI;EAGE,cAzCqB;AG78C3B;AHy/CI;EACE,0BAjDmB;EAqDnB;AG1/CN;AHggDE;EAGM;;IAxFN;EGr6CA;EHogDM;IA/FN;EGl6CA;EHygDM;IAvGN;EG/5CA;AACF;AH6yCI;EACE;AG3yCN;AH8yCI;EACE;EACA,kBAT2B;AGnyCjC;AHgzCM;;EAjCJ;EAEA;AG5wCF;AHozCM;EA1CJ;EAEA;AGxwCF;AH4nDI;EACE;AGznDN;AH4nDI;EACE;EACA,mBAT8B;AGjnDpC;AH8nDM;;EAxCJ;EAEA;AGnlDF;AHkoDM;EAjDJ;EAEA;AG/kDF;AH3uBE;;EAGE;AG6uBJ;AH9xBE;;EARA;EACA;EACA;EAQE;EACA;AGmyBJ;AHhyBI;;EACE,eAyCqB;AG0vB3B;AHviBE;EACE;AG0iBJ;AH/WE;EAEI;EACA;EACA;AGiXN;AH9RE;;EAGI;EACA;AGgSN;AH7DE;EACE;AGgEJ;AH+BE;EACE;AG5BJ;AH+BE;EACE;AG5BJ;AHmOE;EACE;AGhOJ;AHiaE;EAEI;EACA;EACA;AG/ZN;AHkkBE;EACE;AG/jBJ;AHkkBE;EAEI;EACA;AGhkBN;AHokBE;EACE;AGjkBJ;AHokBE;EACE;AGjkBJ;AHokBE;EAEI;EACA;AGlkBN;AH0zBE;EACE;AGvzBJ;AH0zBE;EAEI;EACA;EACA;AGxzBN;AHq7BE;;;;;;;EAnvHE;EAYF;EA+uHE;AGj7BJ;AHo/BE;EACE;EACA,eArBoB;EAsBpB,gBArB2B;EAsB3B,mBAtB2B;AG39B/B;AHo/BE;EACE,eAvB4B;EAwB5B,gBAtBA;EAuBA,mBAvBA;AG19BJ;AH5jBE;EACE,iDAHY;AGkkBhB;AH5jBE;EACE,iDAPY;AGskBhB;AH1jBI;EACE;AG6jBN;AHr5BE;EARA;EACA;EACA;EAQE;EACA;AGy5BJ;AHt5BI;EACE,eAkVuB;AGskB7B;AHnkBI;EACE;AGqkBN;AHl6BE;EARA;EACA;EACA;EAQE;EACA;AGs6BJ;AHn6BI;EACE,eAuVuB;AG8kB7B;AH3kBI;EACE;EACA;EACA;AG6kBN;AHvkBI;EACE;AG0kBN;AHr7BE;EARA;EACA;EACA;EAQE;EACA;AGy7BJ;AHt7BI;EACE,eAqWuB;AGmlB7B;AHhlBI;EACE;AGklBN;AHl8BE;EARA;EACA;EACA;EAQE;EACA;AGs8BJ;AHn8BI;EACE,eA0WuB;AG2lB7B;AHxlBI;EACE,iDAj2EY;EAk2EZ;EACA;AG0lBN;AHj2FE;EAEI;EACA;AGm2FN;AHtzFE;EA9GE;EAYF;AG65FF;AHm9BE;EAEI;EACA;AGj9BN;AHq9BE;EACE;EAEE;EACA;EACA;AGn9BN;AHuyDE;EACE;AGpyDJ;AHuyDE;;EAEE;EACA;AGpyDJ;AHzsGE;EACE;EAIA;AGysGJ;AHlsGI;EACE;AGosGN;AHhsGE;EACE;AGmsGJ;AHhsGE;EACE;EACA;EACA;EAEA;EACA;AGksGJ;AH70JI;EA+oDE;AGisGN;AH32JE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAGA;EAGA;EACA;AG02JJ;AHz/JE;EAEE;EAGA;EACA;EACA;EACA;AGy/JJ;AHr/JE;EACE;EACA,aA3B4B;AGmhKhC;AHt/JI;EAGE;AGs/JN;AH9+JE;EACE;EACA;EACA,aA1CkB;AG2hKtB;AH7+JE;EAGE;EACA;EACA;EACA,aApDkB;EAwDlB;EACA;EACA;AG2+JJ;AHx+JE;EAEE;EACA;EACA;EACA;EACA;EAEA,aApE2B;EAqE3B;EACA;EACA;EACA;AGy+JJ;AHv+JI;EACE;AGy+JN;AHp+JM;EAGE;AGo+JR;AH/9JE;EACE,+BAtFmC;AGwjKvC;AH19JI;EACE;AG69JN;AHv9JE;EACE;EACA,aA3GkB;EAgHlB;EAIA;EAGA;EACA;AGi9JJ;AH78JE;EACE;EAKA;EAKA;AGw8JJ;AH72JE;EAA0C;AGi3J5C;AHj3JE;EAA0C;AGi3J5C;AHh3JE;EAAwC;AGm3J1C;AHn3JE;EAAwC;AGm3J1C;AHj3JE;EAEE;UAAA;AGk3JJ;AH/2JE;EAEE;UAAA;AGi3JJ;AH52JE;EACE;AG+2JJ;AHz2JE;EAqBA;EACA;EApBE;EACA;AG62JJ;AHp2JE;EASA;EACA;EARE;AGw2JJ;AHhpGE;EACE;AGmpGJ;AHqzDE;EACE;AGlzDJ;AH3zGA;AA+IA;AAobA;AAmwDA;AA6CA;AAn3EA;AA+IA;AAobA;AAmwDA;AA6CA;AAn3EA;AA+IA;AAobA;AAmwDA;AA6CA;AAn3EA;AA+IA;AAobA;AAmwDA;AA6CA;AA72EE;EAII;AGy0GN;AHrlGE;EACE;AGulGJ;AHrlGI;EAEE;AGslGN;AHllGI;EACE;AGolGN;AHjlGI;EACE;EACA;AGmlGN;AHhlGI;EACE;AGklGN;AH9kGE;EACE;AGglGJ;AH7kGE;EACE;AG+kGJ;AH5kGE;EACE;AG8kGJ;AHniGE;EACE;AGqiGJ;AHliGE;EACE;AGoiGJ;AHl/FE;EACE;AGo/FJ;AHl/FI;EACE;AGo/FN;AHh/FE;EACE,cAZe;AG8/FnB;AH/+FE;;EAEE;AGi/FJ;AHz+FE;;;;EAIE;AG2+FJ;AHx+FE;;EAEE;AG0+FJ;AHr+FI;;EACE,mBAxCa;AGghGnB;AH0qDE;EAIE;EACA;AG3qDJ;AHkrDI;EAx4MF;AGytJF;AH+qDI;EAx4MF;AG4tJF;AH4qDI;EAx4MF;AG+tJF;AHyqDI;EAx4MF;AGkuJF;AHsqDI;EAx4MF;AGquJF;AHmqDI;EAx4MF;AGwuJF;AHgqDI;EAx4MF;AG2uJF;AH6pDI;EAx4MF;AG8uJF;AH0pDI;EAx4MF;AGivJF;AHupDI;EAx4MF;AGovJF;AHopDI;EAx4MF;AGuvJF;AHipDI;EAx4MF;AG0vJF;AH8oDI;EAx4MF;AG6vJF;AH2oDI;EAx4MF;AGgwJF;AHwoDI;EAx4MF;AGmwJF;AHqoDI;EAx4MF;AGswJF;AHkoDI;EAx4MF;AGywJF;AH+nDI;EAx4MF;AG4wJF;AH4nDI;EAx4MF;AG+wJF;AHynDI;EAx4MF;AGkxJF;AHsnDI;EAx4MF;AGqxJF;AHmnDI;EAx4MF;AGwxJF;AHgnDI;EAx4MF;AG2xJF;AH6mDI;EAx4MF;AG8xJF;AH0mDI;EAx4MF;AGiyJF;AH8mDI;EACE;AG5mDN;AH9zFE;EAEE;EACA;AGg0FJ;AH9xJE;EAXA;AG4yJF;AH5zFI;EACE;AG8zFN;AH5zFM;EACE;AG8zFR;AHhsFE;EACE;EACA;AGksFJ;AHroKI;EAs8EE;EACA;AGksFN;AH7rFI;EACE;EACA;AGgsFN;AH3rFI;EACE;EACA;AG6rFN;AHzrFE;EACE;AG2rFJ;AHvrFI;EACE;AGyrFN;AHprFI;EAWI;EAMF;AGuqFN;AHnqFE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AGqqFJ;AHlqFE;;EAEE;AGoqFJ;AH/pFE;EAEE;AGgqFJ;AH/zFE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AGy0FvB;AH7zFI;EACE;AG+zFN;AH1zFI;EACE;AG4zFN;AHvzFI;EACE;AGyzFN;AHpzFI;EACE;EACA;AGszFN;AHjzFI;EACE;AGmzFN;AH9yFI;EACE;EACA;AGgzFN;AH1yFM;EACE;AG4yFR;AHvyFM;EACE;EACA;AGyyFR;AHpyFM;EACE;AGsyFR;AHjyFM;EACE;EACA;AGmyFR;AHt2FE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AGi3FzB;AHp2FI;EACE;AGs2FN;AHj2FI;EACE;AGm2FN;AH91FI;EACE;AGg2FN;AH31FI;EACE;EACA;AG61FN;AHx1FI;EACE;AG01FN;AHr1FI;EACE;EACA;AGu1FN;AHj1FM;EACE;AGm1FR;AH90FM;EACE;EACA;AGg1FR;AH30FM;EACE;AG60FR;AHx0FM;EACE;EACA;AG00FR;AH74FE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AGs5FvB;AH34FI;EACE;AG64FN;AHx4FI;EACE;AG04FN;AHr4FI;EACE;AGu4FN;AHl4FI;EACE;EACA;AGo4FN;AH/3FI;EACE;AGi4FN;AH53FI;EACE;EACA;AG83FN;AHx3FM;EACE;AG03FR;AHr3FM;EACE;EACA;AGu3FR;AHl3FM;EACE;AGo3FR;AH/2FM;EACE;EACA;AGi3FR;AHttFE;EA/vEA;EAiwEE;EACA;AGwtFJ;AH3lFE;EAKE;EACA;AGylFJ;AHznFE;EACE;AG2nFJ;AHznFE;EACE;AG2nFJ;AHznFE;EACE;AG2nFJ;AHvnFI;EAEE;AGwnFN;AH3rFE;EACE;AG6rFJ;AH1rFE;EACE;AG4rFJ;AHzrFE;EACE;AG2rFJ;AHxrFE;EACE;AG0rFJ;AHzmFI;EACE,YAxGuB;EAyGvB;AG2mFN;AHvmFE;EACE;AGymFJ;AHpmFE;EACE;AGsmFJ;AHnmFE;EAEE;EACA;AGomFJ;AH/pFE;EACE;AGiqFJ;AH/pFE;EACE;AGiqFJ;AH/pFE;EACE;AGiqFJ;AH7pFI;EAEE;AG8pFN;AH3qFE;EACE;AG6qFJ;AH3qFE;EACE;AG6qFJ;AH3qFE;EACE;AG6qFJ;AHzqFI;EAEE;AG0qFN;AH5sFE;EAXA,0CADmB;AG2tFrB;AH3sFE;EAfA,0CADmB;AG8tFrB;AH1sFE;EAnBA,0CADmB;AGiuFrB;AH1hKE;EAXA;AGwiKF;AH7hKE;EAXA;AG2iKF;AHhiKE;EAXA;AG8iKF;AHniKE;EAXA;AGijKF;AHtiKE;EAXA;AGojKF;AHziKE;EAXA;AGujKF;AH5iKE;EAXA;AG0jKF;AHzjFE;;EAjgFA;AG8jKF;AHxjFE;;EAEE;AG0jFJ;AHvjFE;EACE;AGyjFJ;AHvjFI;EACE;AGyjFN;AHrjFE;EACE;EACA;AGujFJ;AHrjFI;EACE;AGujFN;AHnjFE;EACE;AGqjFJ;AHljFE;EACE;EACA;AGojFJ;AHhjFI;EACE;EACA;EACA;AGkjFN;AH9iFE;EACE;EACA;AGgjFJ;AH9iFI;EACE;AGgjFN;AH5iFE;EACE;EACA;AG8iFJ;AH5iFI;EACE;AG8iFN;AH3iFI;EACE;AG6iFN;AHziFE;;EAEE;AG2iFJ;AH1hFI;EACE,iBALc;AGiiFpB;AHz/EE;EAEE;EACA;AG2/EJ;AH7mKE;EAXA;AG2nKF;AHhnKE;EAXA;AG8nKF;AHz/EE;EACE;AG2/EJ;AHn7EE;EACE;AGq7EJ;AHl7EE;EACE,aAdoB;AGk8ExB;AHj7EE;EAGE;AGi7EJ;AH96EE;EACE,yBAxBoB;AGw8ExB;AH56EI;EACE;AG86EN;AH36EI;EACE;AG66EN;AH16EI;EACE;AG46EN;AHr6EM;EACE,yBAtCW;AG68EnB;AHl6EM;EACE,qBA5CW;AGg9EnB;AHh6EI;EACE;AGk6EN;AH55EE;EACE;AG85EJ;AHz5EI;;EACE;AG45EN;AHz5EI;;EACE;AG45EN;AHz5EI;;EACE;AG45EN;AHn0EE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;AGy0E1B;AH/2EE;EACE,0BAqCsB;EApCtB;AGi3EJ;AHv0EM;EA/2FJ;AGyrKF;AHt0EM;EACE;AGw0ER;AHp0EI;EACE;AGs0EN;AHn0EI;EACE;AGq0EN;AHh0EI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;AG82EnC;AHn4EE;EACE,YAoB+B;EAnB/B;AGq4EJ;AHh3EE;EATA,0CADmB;AG63ErB;AHv0EI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AGy3EnC;AH94EE;EACE,YAoB+B;EAnB/B;AGg5EJ;AH33EE;EATA,0CADmB;AGw4ErB;AH90EI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AGo4EnC;AHz5EE;EACE,YAoB+B;EAnB/B;AG25EJ;AHt4EE;EATA,0CADmB;AGm5ErB;AH/vEE;EACE;AGiwEJ;AH9vEE;;;;EAIE;AGgwEJ;AH7vEE;;EAEE;AG+vEJ;AH5vEE;EACE;AG8vEJ;AH3vEE;EACE;AG6vEJ;AHppEE;EACE;AGspEJ;AHjpEE;;;EAGE;AGmpEJ;AHhpEE;EACE;AGkpEJ;AH/oEE;EACE;AGipEJ;AH9oEE;EACE;AGgpEJ;AH7oEE;;EAEE;EACA;AG+oEJ;AHrrEE;EA2CI,0BAlCa;AG+qEnB;AHzoEE;EACE,0BAvCe;AGkrEnB;AHxoEE;EAOI;AGooEN;AH9rEE;EAqEI;AG4nEN;AHjsEE;EA8EM;AGsnER;AHriEE;EACE,kCAtMA;AG6uEJ;AHpiEE;;EAEE,kCAViB;AGgjErB;AHniEE;;EAEE;AGqiEJ;AHliEE;;EAEE;AGoiEJ;AHjiEE;;EAEE,mBAxBc;AG2jElB;AHhiEE;;EAEE,mBA5BuB;AG8jE3B;AH/vEE;EACE;EACA;AGiwEJ;AH9vEE;EAII;AG6vEN;AHpvEE;EACE;AGsvEJ;AHruEE;;;EARM;AGkvER;AH9oEE;EAnrGA;EAqrGE;EACA;AGgpEJ;AHhlEE;EACE,kCAtMA;AGwxEJ;AH/kEE;;EAEE,kCAViB;AG2lErB;AH9kEE;;EAEE;AGglEJ;AH7kEE;;EAEE;AG+kEJ;AH5kEE;;EAEE,mBAxBc;AGsmElB;AH3kEE;;EAEE,mBA5BuB;AGymE3B;AH1yEE;EACE;EACA;AG4yEJ;AHzyEE;EAII;AGwyEN;AH/xEE;EACE;AGiyEJ;AHhxEE;;;EARM;AG6xER;AHtnEE;EACE,kCAtMA;AG8zEJ;AHrnEE;;EAEE,kCAViB;AGioErB;AHpnEE;;EAEE;AGsnEJ;AHnnEE;;EAEE;AGqnEJ;AHlnEE;;EAEE,mBAxBc;AG4oElB;AHjnEE;;EAEE,mBA5BuB;AG+oE3B;AHh1EE;EACE;EACA;AGk1EJ;AH/0EE;EAII;AG80EN;AHr0EE;EACE;AGu0EJ;AHtzEE;;;EARM;AGm0ER;AHjtEE;EAjsGA;AGq5KF;AHhtEE;EACE;AGktEJ;AHhtEI;EACE;AGktEN;AH/sEI;EACE;AGitEN;AH7sEE;EACE;AG+sEJ;AH7mEE;EApzGA;EAszGE;EACA;AG+mEJ;AH3+EE;EACE;AG6+EJ;AH1+EE;EACE;AG4+EJ;AH/hEE;EAEE;EACA;AGgiEJ;AHr6KE;EAXA;AGm7KF;AHhiEE;EACE;AGkiEJ;AHtjEM;EAwBF;AGiiEJ;AH5hEE;EACE;IAEE;EG6hEJ;AACF;AH1hEE;EACE;AG4hEJ;AHzhEE;;EAEE;AG2hEJ;AHxhEE;EACE;AG0hEJ;AHxhEI;;EAEE;AG0hEN;AH9/DI;EACE,YALe;AGqgErB;AH9/DM;EACE,YAVY;AG0gEpB;AHqiBE;EACE,yBAXY;AGvhBhB;AHqiBE;EACE,yBAfY;AGphBhB;AHsiBE;EACE,cAlBoB;AGlhBxB;AHsiBI;EACE,cAhBqB;AGphB3B;AHuiBI;EACE,cAnBmB;AGlhBzB;AHyiBE;EACE,cA7BqB;AG1gBzB;AH0iBE;EACE,qCA9BqB;AG1gBzB;AH4iBI;EACE,yBAhCsB;AG1gB5B;AH4iBM;EACE,yBArCmB;AGrgB3B;AH6iBM;EACE,yBAxCiB;AGngBzB;AHijBI;EACE,cA9CsB;AGjgB5B;AHkjBI;EACE,cApDqB;AG5f3B;AHmjBI;EACE,cAvDmB;AG1fzB;AHyjBI;EACE,cAhEmB;AGvfzB;AHyjBM;;EAEE,cApEiB;AGnfzB;AH2jBI;;EAEE,yBA1EmB;AG/ezB;AH6jBE;EACE,cA/EqB;AG5ezB;AHyFI;EACE,0BALU;AGlFhB;AH0FI;EACE,0BATU;AG/EhB;AH2FI;EACE,qCAZc;AG7EpB;AH4FI;EAj/DF;EACA;EACA;AGw5DF;AH0aI;EACE,qCAJc;AGpapB;AH2aI;EAx0EF;EACA;EACA;AGg6DF;AHvDI;EACE,qCAPc;AGgEpB;AHtDI;EACE,qCAVuB;AGkE7B;AHrDI;EACE,qCAbc;AGoEpB;AHnDM;EACE,0BAjBiB;AGsEzB;AHlDM;EACE;AGoDR;AHiQI;EACE,0BATY;AGtPlB;AHkQI;EACE,0BAZkB;AGpPxB;AHoQM;EACE,cAhBkB;AGlP1B;AHqQM;EACE,cAnBiB;AGhPzB;AHsQM;EACE,cAtBe;AG9OvB;AH0QM;EACE,cA7Be;AG3OvB;AH6QM;EACE,0BAxCiB;AGnOzB;AH8QM;EACE,0BAtCmB;AGtO3B;AHv/DI;EACE;AGy/DN;AHt/DI;EACE;AGw/DN;AHr/DI;EACE;AGu/DN;AH34DE;EACE;AG64DJ;AH14DE;;EAEE;AG44DJ;AHz4DE;EACE;AG24DJ;AHp8DE;EA4DI;AG24DN;AHv8DE;EA4DI;AG24DN;AHn8DE;EAwDI;AG84DN;AHl8DE;EAoDI;AGi5DN;AHj8DE;EAgDI;AGo5DN;AHj4DE;EACE;AGm4DJ;AHh4DE;;EAEE;AGk4DJ;AH/3DE;EACE;AGi4DJ;AH50DI;EACE;AG80DN;AH30DI;EACE;AG60DN;AH10DI;EACE;AG40DN;AHx0DE;EACE;AG00DJ;AHp0DI;;;;;EACE;AG00DN;AHr0DI;EACE;AGu0DN;AH/uDE;EAEE;AGgvDJ;AH5nLE;EAXA;AG0oLF;AHhvDE;EACE;EACA;AGkvDJ;AH/uDM;;EAGE;AGgvDR;AH3uDE;;EAEE;AG6uDJ;AHtuDI;;;;EACE;AG2uDN;AH7qDE;EACE;AG+qDJ;AH5qDE;;EAEE;AG8qDJ;AH3qDE;;EAEE;EACA;AG6qDJ;AH1qDE;;EAEE;AG4qDJ;AHxqDI;;;;EAIE;AG0qDN;AHrpDI;EACE,gBAJK;AG2pDX;AHtnDE;EACE;AGynDJ;AHtnDE;EACE;AGwnDJ;AHrnDE;EACE;AGunDJ;AHnnDI;EACE;AGqnDN;AHlnDI;EACE;AGonDN;AHjnDI;EACE;AGmnDN;AH9mDI;EACE;AGgnDN;AH7mDI;EACE;AG+mDN;AH5mDI;EACE;AG8mDN;AHvkDI;EACE;AGykDN;AHtkDI;EACE;AGwkDN;AHrkDI;EACE;AGukDN;AHlhDE;EACE;AGohDJ;AHziDE;EACE;AG2iDJ;AHxiDE;;EAIE;AGwiDJ;AHhjDE;EACE;AGkjDJ;AH/iDE;;EAIE;AG+iDJ;AHvjDE;EACE;AGyjDJ;AHtjDE;;EAIE;AGsjDJ;AHrhDM;;EAEE;AGuhDR;AHphDM;;EAEE;AGshDR;AHnhDM;EACE;AGqhDR;AH/gDI;EACE;AGihDN;AHj+CE;EACE;AGm+CJ;AHh+CE;EACE;AGk+CJ;AH/9CE;EACE;AGi+CJ;AH99CE;EACE;AGg+CJ;AH79CE;EACE;AG+9CJ;AHpwLE;EAXA;AGkxLF;AH/9CI;EACE;AGi+CN;AH39CM;EACE;AG69CR;AH19CM;EACE;AG49CR;AHz9CM;EACE;AG29CR;AHv9CI;EACE;AGy9CN;AHt9CI;EACE;AGw9CN;AH/5CE;EACE,yBALmC;EAMnC;AGi6CJ;AH95CE;EACE,uBAXwB;EAYxB;AGg6CJ;AH95CI;EACE,uBAb2B;AG66CjC;AH75CI;EAl5IF;AGkzLF;AHz5CE;EACE,2CAvBmB;AGk7CvB;AHz5CI;EACE,0CA1BiB;EA2BjB;AG25CN;AHv5CE;EACE,0CAhCmB;EAiCnB;AGy5CJ;AHv5CI;EACE;EACA,2CArCiB;AG87CvB;AHr5CE;EAQI;AGg5CN;AHv2CI;EACE;AGy2CN;AHt2CI;EAGE;AGs2CN;AHn2CI;EAGE;AGm2CN;AHh3CI;EACE;AGk3CN;AH/2CI;EAGE;AG+2CN;AH52CI;EAGE;AG42CN;AHz3CI;EACE;AG23CN;AHx3CI;EAGE;AGw3CN;AHr3CI;EAGE;AGq3CN;AHh1CI;EAGE,uBAhBqB;AGg2C3B;AH50CE;EAthJA;EAwhJE;AG80CJ;AH30CE;EACE,qCA3BoB;AGw2CxB;AH/vCE;EACE,qCAVqB;AG2wCzB;AH1yCE;;;EAGE;AG4yCJ;AHzyCE;EACE;AG2yCJ;AHxyCE;EAGE,wCADQ;AGyyCZ;AHrzCE;;;EAGE;AGuzCJ;AHpzCE;EACE;AGszCJ;AHnzCE;EAGE,wCADQ;AGozCZ;AHh0CE;;;EAGE;AGk0CJ;AH/zCE;EACE;AGi0CJ;AH9zCE;EAGE,wCADQ;AG+zCZ;AHjxCI;;EACE,qCA3B2B;AG+yCjC;AH/wCI;;;EAGE,qCAlCwB;AGmzC9B;AH7wCM;EACE,qCAvCsB;AGszC9B;AHzwCI;EAGE,qCADQ;AG0wCd;AH/vCM;;EAEE,qCA3DqC;AG4zC7C;AH7vCQ;;EAEE,qCAhEyC;AG+zCnD;AHzvCM;EACE,iCA3EiB;EA4EjB;AG2vCR;AHtvCQ;EACE,iCAjFuB;AGy0CjC;AHrvCQ;EACE,iCApFoB;AG20C9B;AHjvCE;EACE,gCAvFsB;AG00C1B;AH1uCE;EACE;EAIA;AGyuCJ;AH/tCE;EACE;AGiuCJ;AH1oCI;EAGE;AG0oCN;AHpoCI;EACE;IACE;EGsoCN;AACF;AHnoCI;;EAIE;AGmoCN;AHhoCI;EAGE;EACA;AGgoCN;AH7nCI;;;EAGE;EACA;AG+nCN;AH3nCM;EACE;AG6nCR;AH1nCM;;;EAGE;EACA;AG4nCR;AHvnCM;EACE;AGynCR;AHtnCM;;;EAGE;EACA;AGwnCR;AHpnCI;EACE;EACA;AGsnCN;AHnnCI;EACE;AGqnCN;AHlnCI;EACE;AGonCN;AHhnCE;EACE;AGknCJ;AH/mCE;EACE;AGinCJ;AH9mCE;;;EAGE;AGgnCJ;AHzkCI;EACE,YALK;AGglCX;AHxkCI;;EAEE;AG2kCN;AHtkCI;EACE;EACA;AGykCN;AHpkCM;EACE;AGukCR;AHlkCI;EACE;AGqkCN;AHtiCE;EAYI;AG8hCN;AHl/BE;;EAEE,4CAJc;AGw/BlB;AHh/BI;;EAEE,yCAVY;EAWZ;AGk/BN;AH9+BE;EACE;AGg/BJ;AH9+BI;EACE;AGg/BN;AH5+BE;EACE;AG8+BJ;AH3+BE;EACE;AG6+BJ;AHz+BE;;EAEE;EACA;AG2+BJ;AH77BM;;;;;EACE;AGm8BR;AH98BE;EACE;AGg9BJ;AHj9BE;EACE;AGm9BJ;AH18BM;;;;;EACE;AGg9BR;AH39BE;EACE;AG69BJ;AH99BE;EACE;AGg+BJ;AHv9BM;;;;;EACE;AG69BR;AHx+BE;EACE;AG0+BJ;AH3+BE;EACE;AG6+BJ;AHp+BM;;;;;EACE;AG0+BR;AH/9BE;EACE;AGi+BJ;AH79BE;EACE;AG+9BJ;AH79BI;EACE;AG+9BN;AH19BE;;;;;EAGE;AG89BJ;AH39BE;EACE;AG69BJ;AHx9BE;;;EAEE;AG29BJ;AHngCM;;;;;EACE;AGygCR;AH9/BE;EACE;AGggCJ;AH5/BE;EACE;AG8/BJ;AH5/BI;EACE;AG8/BN;AHz/BE;;;;;EAGE;AG6/BJ;AH1/BE;EACE;AG4/BJ;AHv/BE;;;EAEE;AG0/BJ;AHliCM;;;;;EACE;AGwiCR;AH7hCE;EACE;AG+hCJ;AH3hCE;EACE;AG6hCJ;AH3hCI;EACE;AG6hCN;AHxhCE;;;;;EAGE;AG4hCJ;AHzhCE;EACE;AG2hCJ;AHthCE;;;EAEE;AGyhCJ;AHp6BE;EACE;EACA;AGs6BJ;AHp6BI;EApCF;EACA;AG28BF;AHp6BI;EAxCF;EACA;AG+8BF;AHp6BI;EA5CF;EACA;AGm9BF;AH/8BE;;;EAGE;AGi9BJ;AH98BE;;;;;EAKE;AGg9BJ;AH78BE;EACE;AG+8BJ;AH5+BE;EACE,gBA4Ee;AGk6BnB;AH5+BE;EACE,YAyEe;AGs6BnB;AH15BI;EAzFF;IACE,gBA8Ec;EGy6BhB;;EHr/BA;IACE,YA2Ec;EG66BhB;AACF;AH13BE;EACE;AG43BJ;AH4BE;EACE;AG1BJ;AH6BE;;EAEE;AG3BJ;AHiDI;EACE,gBAJK;AG3CX;AHl1BE;EAGE;EACA;EA35KF;AG+uMF;AH/0BE;EACE;AGi1BJ;AczuNE;EACE;Ad2uNJ;AczuNI;EACE;Ad2uNN;AcvuNE;EACE;EACA;AdyuNJ;AcruNI;EACE;AduuNN;AcruNM;EACE;AduuNR;AetvNQ;EACE;EACA;AfwvNV;AepvNM;EACE;AfsvNR;AehvNQ;EACE;EACA;AfkvNV;AehvNU;EACE;AfkvNZ;Ae5uNI;EACE;EACA;Af8uNN;Ae1uNQ;;EACE;Af6uNV;Ae5uNU;;EACE;Af+uNZ;AexuNE;EACE;EACA;Af0uNJ;AevuNE;EACE;EACA;AfyuNJ;AetuNE;EACE;EACA;AfwuNJ;AeruNE;EACE;EACA;AfuuNJ;AgBjyNI;EACE;EACA;AhBmyNN;AgBhyNQ;EACE;AhBkyNV;AgBvxNM;;EACE;AhB0xNR;AgBxxNQ;;EACE;AhB2xNV;AgBzxNU;;EACE;AhB4xNZ;AgBrxNM;EACE;AhBuxNR;AiBtzNM;EACE;EACA;AjBwzNR;AiBrzNM;EACE;AjBuzNR;AH9/JE;EAII;AG8/JN;AH1wJE;EACE;AG4wJJ;AH1wJI;EAEE;AG2wJN;AHvwJI;EACE;AGywJN;AHtwJI;EACE;EACA;AGwwJN;AHrwJI;EACE;AGuwJN;AHnwJE;EACE;AGqwJJ;AHlwJE;EACE;AGowJJ;AHjwJE;EACE;AGmwJJ;AHxtJE;EACE;AG0tJJ;AHvtJE;EACE;AGytJJ;AHvqJE;EACE;AGyqJJ;AHvqJI;EACE;AGyqJN;AHrqJE;EACE,cAZe;AGmrJnB;AHpqJE;;EAEE;AGsqJJ;AH9pJE;;;;EAIE;AGgqJJ;AH7pJE;;EAEE;AG+pJJ;AH1pJI;;EACE,mBAxCa;AGqsJnB;AHXE;EAIE;EACA;AGUJ;AHHI;EAx4MF;AG84MF;AHNI;EAx4MF;AGi5MF;AHTI;EAx4MF;AGo5MF;AHZI;EAx4MF;AGu5MF;AHfI;EAx4MF;AG05MF;AHlBI;EAx4MF;AG65MF;AHrBI;EAx4MF;AGg6MF;AHxBI;EAx4MF;AGm6MF;AH3BI;EAx4MF;AGs6MF;AH9BI;EAx4MF;AGy6MF;AHjCI;EAx4MF;AG46MF;AHpCI;EAx4MF;AG+6MF;AHvCI;EAx4MF;AGk7MF;AH1CI;EAx4MF;AGq7MF;AH7CI;EAx4MF;AGw7MF;AHhDI;EAx4MF;AG27MF;AHnDI;EAx4MF;AG87MF;AHtDI;EAx4MF;AGi8MF;AHzDI;EAx4MF;AGo8MF;AH5DI;EAx4MF;AGu8MF;AH/DI;EAx4MF;AG08MF;AHlEI;EAx4MF;AG68MF;AHrEI;EAx4MF;AGg9MF;AHxEI;EAx4MF;AGm9MF;AH3EI;EAx4MF;AGs9MF;AHvEI;EACE;AGyEN;AHn/IE;EAEE;EACA;AGq/IJ;AHn9ME;EAXA;AGi+MF;AHj/II;EACE;AGm/IN;AHj/IM;EACE;AGm/IR;AHr3IE;EACE;EACA;AGu3IJ;AH1zNI;EAs8EE;EACA;AGu3IN;AHl3II;EACE;EACA;AGq3IN;AHh3II;EACE;EACA;AGk3IN;AH92IE;EACE;AGg3IJ;AH52II;EACE;AG82IN;AHz2II;EAWI;EAMF;AG41IN;AHx1IE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AG01IJ;AHv1IE;;EAEE;AGy1IJ;AHp1IE;EAEE;AGq1IJ;AHp/IE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AG8/IvB;AHl/II;EACE;AGo/IN;AH/+II;EACE;AGi/IN;AH5+II;EACE;AG8+IN;AHz+II;EACE;EACA;AG2+IN;AHt+II;EACE;AGw+IN;AHn+II;EACE;EACA;AGq+IN;AH/9IM;EACE;AGi+IR;AH59IM;EACE;EACA;AG89IR;AHz9IM;EACE;AG29IR;AHt9IM;EACE;EACA;AGw9IR;AH3hJE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AGsiJzB;AHzhJI;EACE;AG2hJN;AHthJI;EACE;AGwhJN;AHnhJI;EACE;AGqhJN;AHhhJI;EACE;EACA;AGkhJN;AH7gJI;EACE;AG+gJN;AH1gJI;EACE;EACA;AG4gJN;AHtgJM;EACE;AGwgJR;AHngJM;EACE;EACA;AGqgJR;AHhgJM;EACE;AGkgJR;AH7/IM;EACE;EACA;AG+/IR;AHlkJE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AG2kJvB;AHhkJI;EACE;AGkkJN;AH7jJI;EACE;AG+jJN;AH1jJI;EACE;AG4jJN;AHvjJI;EACE;EACA;AGyjJN;AHpjJI;EACE;AGsjJN;AHjjJI;EACE;EACA;AGmjJN;AH7iJM;EACE;AG+iJR;AH1iJM;EACE;EACA;AG4iJR;AHviJM;EACE;AGyiJR;AHpiJM;EACE;EACA;AGsiJR;AH34IE;EA/vEA;EAiwEE;EACA;AG64IJ;AHhxIE;EAKE;EACA;AG8wIJ;AH9yIE;EACE;AGgzIJ;AH9yIE;EACE;AGgzIJ;AH9yIE;EACE;AGgzIJ;AH5yII;EAEE;AG6yIN;AHh3IE;EACE;AGk3IJ;AH/2IE;EACE;AGi3IJ;AH92IE;EACE;AGg3IJ;AH72IE;EACE;AG+2IJ;AH9xII;EACE,YAxGuB;EAyGvB;AGgyIN;AH5xIE;EACE;AG8xIJ;AHzxIE;EACE;AG2xIJ;AHxxIE;EAEE;EACA;AGyxIJ;AHp1IE;EACE;AGs1IJ;AHp1IE;EACE;AGs1IJ;AHp1IE;EACE;AGs1IJ;AHl1II;EAEE;AGm1IN;AHh2IE;EACE;AGk2IJ;AHh2IE;EACE;AGk2IJ;AHh2IE;EACE;AGk2IJ;AH91II;EAEE;AG+1IN;AHj4IE;EAXA,oCADmB;AGg5IrB;AHh4IE;EAfA,oCADmB;AGm5IrB;AH/3IE;EAnBA,oCADmB;AGs5IrB;AH/sNE;EAXA;AG6tNF;AHltNE;EAXA;AGguNF;AHrtNE;EAXA;AGmuNF;AHxtNE;EAXA;AGsuNF;AH3tNE;EAXA;AGyuNF;AH9tNE;EAXA;AG4uNF;AHjuNE;EAXA;AG+uNF;AH9uIE;;EAjgFA;AGmvNF;AH7uIE;;EAEE;AG+uIJ;AH5uIE;EACE;AG8uIJ;AH5uII;EACE;AG8uIN;AH1uIE;EACE;EACA;AG4uIJ;AH1uII;EACE;AG4uIN;AHxuIE;EACE;AG0uIJ;AHvuIE;EACE;EACA;AGyuIJ;AHruII;EACE;EACA;EACA;AGuuIN;AHnuIE;EACE;EACA;AGquIJ;AHnuII;EACE;AGquIN;AHjuIE;EACE;EACA;AGmuIJ;AHjuII;EACE;AGmuIN;AHhuII;EACE;AGkuIN;AH9tIE;;EAEE;AGguIJ;AH3qIE;EAEE;EACA;AG4qIJ;AH9xNE;EAXA;AG4yNF;AHjyNE;EAXA;AG+yNF;AH1qIE;EACE;AG4qIJ;AHpmIE;EACE;AGsmIJ;AHnmIE;EACE,aAdoB;AGmnIxB;AHlmIE;EAGE;AGkmIJ;AH/lIE;EACE,yBAxBoB;AGynIxB;AH7lII;EACE;AG+lIN;AH5lII;EACE;AG8lIN;AH3lII;EACE;AG6lIN;AHtlIM;EACE,yBAtCW;AG8nInB;AHnlIM;EACE,qBA5CW;AGioInB;AHjlII;EACE;AGmlIN;AH7kIE;EACE;AG+kIJ;AH1kII;;EACE;AG6kIN;AH1kII;;EACE;AG6kIN;AH1kII;;EACE;AG6kIN;AHp/HE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;AG0/H1B;AHhiIE;EACE,0BAqCsB;EApCtB;AGkiIJ;AHx/HM;EA/2FJ;AG02NF;AHv/HM;EACE;AGy/HR;AHr/HI;EACE;AGu/HN;AHp/HI;EACE;AGs/HN;AHj/HI;EAlEF,yBAwBwE;EAvBxE,0BAuBiC;AG+hInC;AHpjIE;EACE,0BAoB+B;EAnB/B;AGsjIJ;AHjiIE;EATA,oCADmB;AG8iIrB;AHx/HI;EAtEF,yBAwBwE;EAvBxE,0BAuBiC;AG0iInC;AH/jIE;EACE,0BAoB+B;EAnB/B;AGikIJ;AH5iIE;EATA,oCADmB;AGyjIrB;AH//HI;EA1EF,yBAwBwE;EAvBxE,0BAuBiC;AGqjInC;AH1kIE;EACE,0BAoB+B;EAnB/B;AG4kIJ;AHvjIE;EATA,oCADmB;AGokIrB;AHh7HE;EACE;AGk7HJ;AH/6HE;;;;EAIE;AGi7HJ;AH96HE;;EAEE;AGg7HJ;AH76HE;EACE;AG+6HJ;AH56HE;EACE;AG86HJ;AHr0HE;EACE;AGu0HJ;AHl0HE;;;EAGE;AGo0HJ;AHj0HE;EACE;AGm0HJ;AHh0HE;EACE;AGk0HJ;AH/zHE;EACE;AGi0HJ;AH9zHE;;EAEE;EACA;AGg0HJ;AHt2HE;EA2CI,0BAlCa;AGg2HnB;AH1zHE;EACE,0BAvCe;AGm2HnB;AHzzHE;EAOI;AGqzHN;AH/2HE;EAqEI;AG6yHN;AHl3HE;EA8EM;AGuyHR;AHttHE;EACE,oCAtMA;AG85HJ;AHrtHE;;EAEE,kCAViB;AGiuHrB;AHptHE;;EAEE;AGstHJ;AHntHE;;EAEE;AGqtHJ;AHltHE;;EAEE,mBAxBc;AG4uHlB;AHjtHE;;EAEE,mBA5BuB;AG+uH3B;AHh7HE;EACE;EACA;AGk7HJ;AH/6HE;EAII;AG86HN;AHr6HE;EACE;AGu6HJ;AHt5HE;;;EARM;AGm6HR;AH/zHE;EAnrGA;EAqrGE;EACA;AGi0HJ;AHjwHE;EACE,oCAtMA;AGy8HJ;AHhwHE;;EAEE,kCAViB;AG4wHrB;AH/vHE;;EAEE;AGiwHJ;AH9vHE;;EAEE;AGgwHJ;AH7vHE;;EAEE,mBAxBc;AGuxHlB;AH5vHE;;EAEE,mBA5BuB;AG0xH3B;AH39HE;EACE;EACA;AG69HJ;AH19HE;EAII;AGy9HN;AHh9HE;EACE;AGk9HJ;AHj8HE;;;EARM;AG88HR;AHvyHE;EACE,oCAtMA;AG++HJ;AHtyHE;;EAEE,kCAViB;AGkzHrB;AHryHE;;EAEE;AGuyHJ;AHpyHE;;EAEE;AGsyHJ;AHnyHE;;EAEE,mBAxBc;AG6zHlB;AHlyHE;;EAEE,mBA5BuB;AGg0H3B;AHjgIE;EACE;EACA;AGmgIJ;AHhgIE;EAII;AG+/HN;AHt/HE;EACE;AGw/HJ;AHv+HE;;;EARM;AGo/HR;AHl4HE;EAjsGA;AGskOF;AHj4HE;EACE;AGm4HJ;AHj4HI;EACE;AGm4HN;AHh4HI;EACE;AGk4HN;AH93HE;EACE;AGg4HJ;AH9xHE;EApzGA;EAszGE;EACA;AGgyHJ;AH5pIE;EACE;AG8pIJ;AH3pIE;EACE;AG6pIJ;AHhtHE;EAEE;EACA;AGitHJ;AHtlOE;EAXA;AGomOF;AHjtHE;EACE;AGmtHJ;AHvuHM;EAwBF;AGktHJ;AH7sHE;EACE;IAEE;EG8sHJ;AACF;AH3sHE;EACE;AG6sHJ;AH1sHE;;EAEE;AG4sHJ;AHzsHE;EACE;AG2sHJ;AHzsHI;;EAEE;AG2sHN;AHtoCE;EACE,yBAXY;AGmpChB;AHroCE;EACE,yBAfY;AGspChB;AHpoCE;EACE,cAlBoB;AGwpCxB;AHpoCI;EACE,cAhBqB;AGspC3B;AHnoCI;EACE,cAnBmB;AGwpCzB;AHjoCE;EACE,cA7BqB;AGgqCzB;AHhoCE;EACE,qCA9BqB;AGgqCzB;AH9nCI;EACE,yBAhCsB;AGgqC5B;AH9nCM;EACE,yBArCmB;AGqqC3B;AH7nCM;EACE,yBAxCiB;AGuqCzB;AHznCI;EACE,cA9CsB;AGyqC5B;AHxnCI;EACE,cApDqB;AG8qC3B;AHvnCI;EACE,cAvDmB;AGgrCzB;AHjnCI;EACE,cAhEmB;AGmrCzB;AHjnCM;;EAEE,cApEiB;AGurCzB;AH/mCI;;EAEE,yBA1EmB;AG2rCzB;AH7mCE;EACE,cA/EqB;AG8rCzB;AHjlDI;EACE,0BALU;AGwlDhB;AHhlDI;EACE,0BATU;AG2lDhB;AH/kDI;EACE,qCAZc;AG6lDpB;AH9kDI;EAj/DF;EACA;EACA;AGkkHF;AHhwCI;EACE,qCAJc;AGswCpB;AH/vCI;EAx0EF;EACA;EACA;AG0kHF;AHjuDI;EACE,qCAPc;AG0uDpB;AHhuDI;EACE,qCAVuB;AG4uD7B;AH/tDI;EACE,qCAbc;AG8uDpB;AH7tDM;EACE,0BAjBiB;AGgvDzB;AH5tDM;EACE;AG8tDR;AHz6CI;EACE,0BATY;AGo7ClB;AHx6CI;EACE,0BAZkB;AGs7CxB;AHt6CM;EACE,cAhBkB;AGw7C1B;AHr6CM;EACE,cAnBiB;AG07CzB;AHp6CM;EACE,cAtBe;AG47CvB;AHh6CM;EACE,cA7Be;AG+7CvB;AH75CM;EACE,0BAxCiB;AGu8CzB;AH55CM;EACE,0BAtCmB;AGo8C3B;AHjqHI;EACE;AGmqHN;AHhqHI;EACE;AGkqHN;AH/pHI;EACE;AGiqHN;AHrjHE;EACE;AGujHJ;AHpjHE;;EAEE;AGsjHJ;AHnjHE;EACE;AGqjHJ;AH9mHE;EA4DI;AGqjHN;AHjnHE;EA4DI;AGqjHN;AH7mHE;EAwDI;AGwjHN;AH5mHE;EAoDI;AG2jHN;AH3mHE;EAgDI;AG8jHN;AH3iHE;EACE;AG6iHJ;AH1iHE;;EAEE;AG4iHJ;AHziHE;EACE;AG2iHJ;AHt/GI;EACE;AGw/GN;AHr/GI;EACE;AGu/GN;AHp/GI;EACE;AGs/GN;AHl/GE;EACE;AGo/GJ;AH9+GI;;;;;EACE;AGo/GN;AH/+GI;EACE;AGi/GN;AHz5GE;EAEE;AG05GJ;AHtyOE;EAXA;AGozOF;AH15GE;EACE;EACA;AG45GJ;AHz5GM;;EAGE;AG05GR;AHr5GE;;EAEE;AGu5GJ;AHh5GI;;;;EACE;AGq5GN;AHv1GE;EACE;AGy1GJ;AHt1GE;;EAEE;AGw1GJ;AHr1GE;;EAEE;EACA;AGu1GJ;AHp1GE;;EAEE;AGs1GJ;AHl1GI;;;;EAIE;AGo1GN;AH7xGE;EACE;AG+xGJ;AH5xGE;EACE;AG8xGJ;AH3xGE;EACE;AG6xGJ;AHzxGI;EACE;AG2xGN;AHxxGI;EACE;AG0xGN;AHvxGI;EACE;AGyxGN;AHpxGI;EACE;AGsxGN;AHnxGI;EACE;AGqxGN;AHlxGI;EACE;AGoxGN;AH7uGI;EACE;AG+uGN;AH5uGI;EACE;AG8uGN;AH3uGI;EACE;AG6uGN;AHxrGE;EACE;AG0rGJ;AH/sGE;EACE;AGitGJ;AH9sGE;;EAIE;AG8sGJ;AHttGE;EACE;AGwtGJ;AHrtGE;;EAIE;AGqtGJ;AH7tGE;EACE;AG+tGJ;AH5tGE;;EAIE;AG4tGJ;AH3rGM;;EAEE;AG6rGR;AH1rGM;;EAEE;AG4rGR;AHzrGM;EACE;AG2rGR;AHrrGI;EACE;AGurGN;AHvoGE;EACE;AGyoGJ;AHtoGE;EACE;AGwoGJ;AHroGE;EACE;AGuoGJ;AHpoGE;EACE;AGsoGJ;AHnoGE;EACE;AGqoGJ;AH16OE;EAXA;AGw7OF;AHroGI;EACE;AGuoGN;AHjoGM;EACE;AGmoGR;AHhoGM;EACE;AGkoGR;AH/nGM;EACE;AGioGR;AH7nGI;EACE;AG+nGN;AH5nGI;EACE;AG8nGN;AHrkGE;EACE,yBALmC;EAMnC;AGukGJ;AHpkGE;EACE,uBAXwB;EAYxB;AGskGJ;AHpkGI;EACE,uBAb2B;AGmlGjC;AHnkGI;EAl5IF;AGw9OF;AH/jGE;EACE,2CAvBmB;AGwlGvB;AH/jGI;EACE,0CA1BiB;EA2BjB;AGikGN;AH7jGE;EACE,0CAhCmB;EAiCnB;AG+jGJ;AH7jGI;EACE;EACA,2CArCiB;AGomGvB;AH3jGE;EAQI;AGsjGN;AH7gGI;EACE;AG+gGN;AH5gGI;EAGE;AG4gGN;AHzgGI;EAGE;AGygGN;AHthGI;EACE;AGwhGN;AHrhGI;EAGE;AGqhGN;AHlhGI;EAGE;AGkhGN;AH/hGI;EACE;AGiiGN;AH9hGI;EAGE;AG8hGN;AH3hGI;EAGE;AG2hGN;AHt/FI;EAGE,uBAhBqB;AGsgG3B;AHl/FE;EAthJA;EAwhJE;AGo/FJ;AHj/FE;EACE,qCA3BoB;AG8gGxB;AHr6FE;EACE,qCAVqB;AGi7FzB;AHh9FE;;;EAGE;AGk9FJ;AH/8FE;EACE;AGi9FJ;AH98FE;EAGE,0CADQ;AG+8FZ;AH39FE;;;EAGE;AG69FJ;AH19FE;EACE;AG49FJ;AHz9FE;EAGE,0CADQ;AG09FZ;AHt+FE;;;EAGE;AGw+FJ;AHr+FE;EACE;AGu+FJ;AHp+FE;EAGE,0CADQ;AGq+FZ;AHv7FI;;EACE,qCA3B2B;AGq9FjC;AHr7FI;;;EAGE,qCAlCwB;AGy9F9B;AHn7FM;EACE,qCAvCsB;AG49F9B;AH/6FI;EAGE,qCADQ;AGg7Fd;AHr6FM;;EAEE,qCA3DqC;AGk+F7C;AHn6FQ;;EAEE,qCAhEyC;AGq+FnD;AH/5FM;EACE,iCA3EiB;EA4EjB;AGi6FR;AH55FQ;EACE,iCAjFuB;AG++FjC;AH35FQ;EACE,iCApFoB;AGi/F9B;AHv5FE;EACE,gCAvFsB;AGg/F1B;AHh5FE;EACE;EAIA;AG+4FJ;AHr4FE;EACE;AGu4FJ;AHhzFI;EAGE;AGgzFN;AH1yFI;EACE;IACE;EG4yFN;AACF;AHzyFI;;EAIE;AGyyFN;AHtyFI;EAGE;EACA;AGsyFN;AHnyFI;;;EAGE;EACA;AGqyFN;AHjyFM;EACE;AGmyFR;AHhyFM;;;EAGE;EACA;AGkyFR;AH7xFM;EACE;AG+xFR;AH5xFM;;;EAGE;EACA;AG8xFR;AH1xFI;EACE;EACA;AG4xFN;AHzxFI;EACE;AG2xFN;AHxxFI;EACE;AG0xFN;AHtxFE;EACE;AGwxFJ;AHrxFE;EACE;AGuxFJ;AHpxFE;;;EAGE;AGsxFJ;AHvrFE;EAYI;AG8qFN;AHloFE;;EAEE,4CAJc;AGwoFlB;AHhoFI;;EAEE,yCAVY;EAWZ;AGkoFN;AH9nFE;EACE;AGgoFJ;AH9nFI;EACE;AGgoFN;AH5nFE;EACE;AG8nFJ;AH3nFE;EACE;AG6nFJ;AHznFE;;EAEE;EACA;AG2nFJ;AH7kFM;;;;;EACE;AGmlFR;AH9lFE;EACE;AGgmFJ;AHjmFE;EACE;AGmmFJ;AH1lFM;;;;;EACE;AGgmFR;AH3mFE;EACE;AG6mFJ;AH9mFE;EACE;AGgnFJ;AHvmFM;;;;;EACE;AG6mFR;AHxnFE;EACE;AG0nFJ;AH3nFE;EACE;AG6nFJ;AHpnFM;;;;;EACE;AG0nFR;AH/mFE;EACE;AGinFJ;AH7mFE;EACE;AG+mFJ;AH7mFI;EACE;AG+mFN;AH1mFE;;;;;EAGE;AG8mFJ;AH3mFE;EACE;AG6mFJ;AHxmFE;;;EAEE;AG2mFJ;AHnpFM;;;;;EACE;AGypFR;AH9oFE;EACE;AGgpFJ;AH5oFE;EACE;AG8oFJ;AH5oFI;EACE;AG8oFN;AHzoFE;;;;;EAGE;AG6oFJ;AH1oFE;EACE;AG4oFJ;AHvoFE;;;EAEE;AG0oFJ;AHlrFM;;;;;EACE;AGwrFR;AH7qFE;EACE;AG+qFJ;AH3qFE;EACE;AG6qFJ;AH3qFI;EACE;AG6qFN;AHxqFE;;;;;EAGE;AG4qFJ;AHzqFE;EACE;AG2qFJ;AHtqFE;;;EAEE;AGyqFJ;AHpjFE;EACE;EACA;AGsjFJ;AHpjFI;EApCF;EACA;AG2lFF;AHpjFI;EAxCF;EACA;AG+lFF;AHpjFI;EA5CF;EACA;AGmmFF;AH/lFE;;;EAGE;AGimFJ;AH9lFE;;;;;EAKE;AGgmFJ;AH7lFE;EACE;AG+lFJ;AHz/EE;EACE;AG2/EJ;AHnmDE;EACE;AGqmDJ;AHlmDE;;EAEE;AGomDJ;AH98EE;EAGE;EACA;EA35KF;AG02PF;AH18EE;EACE;AG48EJ;Acp2QE;EACE;Ads2QJ;Acp2QI;EACE;Ads2QN;Acl2QE;EACE;EACA;Ado2QJ;Ach2QI;EACE;Adk2QN;Ach2QM;EACE;Adk2QR;Aej3QQ;EACE;EACA;Afm3QV;Ae/2QM;EACE;Afi3QR;Ae32QQ;EACE;EACA;Af62QV;Ae32QU;EACE;Af62QZ;Aev2QI;EACE;EACA;Afy2QN;Aer2QQ;;EACE;Afw2QV;Aev2QU;;EACE;Af02QZ;Aen2QE;EACE;EACA;Afq2QJ;Ael2QE;EACE;EACA;Afo2QJ;Aej2QE;EACE;EACA;Afm2QJ;Aeh2QE;EACE;EACA;Afk2QJ;AgB55QI;EACE;EACA;AhB85QN;AgB35QQ;EACE;AhB65QV;AgBl5QM;;EACE;AhBq5QR;AgBn5QQ;;EACE;AhBs5QV;AgBp5QU;;EACE;AhBu5QZ;AgBh5QM;EACE;AhBk5QR;AiBj7QM;EACE;EACA;AjBm7QR;AiBh7QM;EACE;AjBk7QR;AHznNE;EAII;AGynNN;AHr4ME;EACE;AGu4MJ;AHr4MI;EAEE;AGs4MN;AHl4MI;EACE;AGo4MN;AHj4MI;EACE;EACA;AGm4MN;AHh4MI;EACE;AGk4MN;AH93ME;EACE;AGg4MJ;AH73ME;EACE;AG+3MJ;AH53ME;EACE;AG83MJ;AHn1ME;EACE;AGq1MJ;AHl1ME;EACE;AGo1MJ;AHlyME;EACE;AGoyMJ;AHlyMI;EACE;AGoyMN;AHhyME;EACE,cAZe;AG8yMnB;AH/xME;;EAEE;AGiyMJ;AHzxME;;;;EAIE;AG2xMJ;AHxxME;;EAEE;AG0xMJ;AHrxMI;;EACE,mBAxCa;AGg0MnB;AHtoDE;EAIE;EACA;AGqoDJ;AH9nDI;EAx4MF;AGygQF;AHjoDI;EAx4MF;AG4gQF;AHpoDI;EAx4MF;AG+gQF;AHvoDI;EAx4MF;AGkhQF;AH1oDI;EAx4MF;AGqhQF;AH7oDI;EAx4MF;AGwhQF;AHhpDI;EAx4MF;AG2hQF;AHnpDI;EAx4MF;AG8hQF;AHtpDI;EAx4MF;AGiiQF;AHzpDI;EAx4MF;AGoiQF;AH5pDI;EAx4MF;AGuiQF;AH/pDI;EAx4MF;AG0iQF;AHlqDI;EAx4MF;AG6iQF;AHrqDI;EAx4MF;AGgjQF;AHxqDI;EAx4MF;AGmjQF;AH3qDI;EAx4MF;AGsjQF;AH9qDI;EAx4MF;AGyjQF;AHjrDI;EAx4MF;AG4jQF;AHprDI;EAx4MF;AG+jQF;AHvrDI;EAx4MF;AGkkQF;AH1rDI;EAx4MF;AGqkQF;AH7rDI;EAx4MF;AGwkQF;AHhsDI;EAx4MF;AG2kQF;AHnsDI;EAx4MF;AG8kQF;AHtsDI;EAx4MF;AGilQF;AHlsDI;EACE;AGosDN;AH9mME;EAEE;EACA;AGgnMJ;AH9kQE;EAXA;AG4lQF;AH5mMI;EACE;AG8mMN;AH5mMM;EACE;AG8mMR;AHh/LE;EACE;EACA;AGk/LJ;AHr7QI;EAs8EE;EACA;AGk/LN;AH7+LI;EACE;EACA;AGg/LN;AH3+LI;EACE;EACA;AG6+LN;AHz+LE;EACE;AG2+LJ;AHv+LI;EACE;AGy+LN;AHp+LI;EAWI;EAMF;AGu9LN;AHn9LE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AGq9LJ;AHl9LE;;EAEE;AGo9LJ;AH/8LE;EAEE;AGg9LJ;AH/mME;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AGynMvB;AH7mMI;EACE;AG+mMN;AH1mMI;EACE;AG4mMN;AHvmMI;EACE;AGymMN;AHpmMI;EACE;EACA;AGsmMN;AHjmMI;EACE;AGmmMN;AH9lMI;EACE;EACA;AGgmMN;AH1lMM;EACE;AG4lMR;AHvlMM;EACE;EACA;AGylMR;AHplMM;EACE;AGslMR;AHjlMM;EACE;EACA;AGmlMR;AHtpME;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AGiqMzB;AHppMI;EACE;AGspMN;AHjpMI;EACE;AGmpMN;AH9oMI;EACE;AGgpMN;AH3oMI;EACE;EACA;AG6oMN;AHxoMI;EACE;AG0oMN;AHroMI;EACE;EACA;AGuoMN;AHjoMM;EACE;AGmoMR;AH9nMM;EACE;EACA;AGgoMR;AH3nMM;EACE;AG6nMR;AHxnMM;EACE;EACA;AG0nMR;AH7rME;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AGssMvB;AH3rMI;EACE;AG6rMN;AHxrMI;EACE;AG0rMN;AHrrMI;EACE;AGurMN;AHlrMI;EACE;EACA;AGorMN;AH/qMI;EACE;AGirMN;AH5qMI;EACE;EACA;AG8qMN;AHxqMM;EACE;AG0qMR;AHrqMM;EACE;EACA;AGuqMR;AHlqMM;EACE;AGoqMR;AH/pMM;EACE;EACA;AGiqMR;AHtgME;EA/vEA;EAiwEE;EACA;AGwgMJ;AH34LE;EAKE;EACA;AGy4LJ;AHz6LE;EACE;AG26LJ;AHz6LE;EACE;AG26LJ;AHz6LE;EACE;AG26LJ;AHv6LI;EAEE;AGw6LN;AH3+LE;EACE;AG6+LJ;AH1+LE;EACE;AG4+LJ;AHz+LE;EACE;AG2+LJ;AHx+LE;EACE;AG0+LJ;AHz5LI;EACE,YAxGuB;EAyGvB;AG25LN;AHv5LE;EACE;AGy5LJ;AHp5LE;EACE;AGs5LJ;AHn5LE;EAEE;EACA;AGo5LJ;AH/8LE;EACE;AGi9LJ;AH/8LE;EACE;AGi9LJ;AH/8LE;EACE;AGi9LJ;AH78LI;EAEE;AG88LN;AH39LE;EACE;AG69LJ;AH39LE;EACE;AG69LJ;AH39LE;EACE;AG69LJ;AHz9LI;EAEE;AG09LN;AH5/LE;EAXA,0CADmB;AG2gMrB;AH3/LE;EAfA,0CADmB;AG8gMrB;AH1/LE;EAnBA,0CADmB;AGihMrB;AH10QE;EAXA;AGw1QF;AH70QE;EAXA;AG21QF;AHh1QE;EAXA;AG81QF;AHn1QE;EAXA;AGi2QF;AHt1QE;EAXA;AGo2QF;AHz1QE;EAXA;AGu2QF;AH51QE;EAXA;AG02QF;AHz2LE;;EAjgFA;AG82QF;AHx2LE;;EAEE;AG02LJ;AHv2LE;EACE;AGy2LJ;AHv2LI;EACE;AGy2LN;AHr2LE;EACE;EACA;AGu2LJ;AHr2LI;EACE;AGu2LN;AHn2LE;EACE;AGq2LJ;AHl2LE;EACE;EACA;AGo2LJ;AHh2LI;EACE;EACA;EACA;AGk2LN;AH91LE;EACE;EACA;AGg2LJ;AH91LI;EACE;AGg2LN;AH51LE;EACE;EACA;AG81LJ;AH51LI;EACE;AG81LN;AH31LI;EACE;AG61LN;AHz1LE;;EAEE;AG21LJ;AHtyLE;EAEE;EACA;AGuyLJ;AHz5QE;EAXA;AGu6QF;AH55QE;EAXA;AG06QF;AHryLE;EACE;AGuyLJ;AH/tLE;EACE;AGiuLJ;AH9tLE;EACE,aAdoB;AG8uLxB;AH7tLE;EAGE;AG6tLJ;AH1tLE;EACE,yBAxBoB;AGovLxB;AHxtLI;EACE;AG0tLN;AHvtLI;EACE;AGytLN;AHttLI;EACE;AGwtLN;AHjtLM;EACE,yBAtCW;AGyvLnB;AH9sLM;EACE,qBA5CW;AG4vLnB;AH5sLI;EACE;AG8sLN;AHxsLE;EACE;AG0sLJ;AHrsLI;;EACE;AGwsLN;AHrsLI;;EACE;AGwsLN;AHrsLI;;EACE;AGwsLN;AH/mLE;EA3CA,yBAwCwB;EAvCxB,YAwCwB;AGqnL1B;AH3pLE;EACE,YAqCsB;EApCtB;AG6pLJ;AHnnLM;EA/2FJ;AGq+QF;AHlnLM;EACE;AGonLR;AHhnLI;EACE;AGknLN;AH/mLI;EACE;AGinLN;AH5mLI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;AG0pLnC;AH/qLE;EACE,YAoB+B;EAnB/B;AGirLJ;AH5pLE;EATA,0CADmB;AGyqLrB;AHnnLI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AGqqLnC;AH1rLE;EACE,YAoB+B;EAnB/B;AG4rLJ;AHvqLE;EATA,0CADmB;AGorLrB;AH1nLI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AGgrLnC;AHrsLE;EACE,YAoB+B;EAnB/B;AGusLJ;AHlrLE;EATA,0CADmB;AG+rLrB;AH3iLE;EACE;AG6iLJ;AH1iLE;;;;EAIE;AG4iLJ;AHziLE;;EAEE;AG2iLJ;AHxiLE;EACE;AG0iLJ;AHviLE;EACE;AGyiLJ;AHh8KE;EACE;AGk8KJ;AH77KE;;;EAGE;AG+7KJ;AH57KE;EACE;AG87KJ;AH37KE;EACE;AG67KJ;AH17KE;EACE;AG47KJ;AHz7KE;;EAEE;EACA;AG27KJ;AHj+KE;EA2CI,+BAlCa;AG29KnB;AHr7KE;EACE,+BAvCe;AG89KnB;AHp7KE;EAOI;AGg7KN;AH1+KE;EAqEI;AGw6KN;AH7+KE;EA8EM;AGk6KR;AHj1KE;EACE,iCAtMA;AGyhLJ;AHh1KE;;EAEE,kCAViB;AG41KrB;AH/0KE;;EAEE;AGi1KJ;AH90KE;;EAEE;AGg1KJ;AH70KE;;EAEE,mBAxBc;AGu2KlB;AH50KE;;EAEE,mBA5BuB;AG02K3B;AH3iLE;EACE;EACA;AG6iLJ;AH1iLE;EAII;AGyiLN;AHhiLE;EACE;AGkiLJ;AHjhLE;;;EARM;AG8hLR;AH17KE;EAnrGA;EAqrGE;EACA;AG47KJ;AH53KE;EACE,oCAtMA;AGokLJ;AH33KE;;EAEE,kCAViB;AGu4KrB;AH13KE;;EAEE;AG43KJ;AHz3KE;;EAEE;AG23KJ;AHx3KE;;EAEE,mBAxBc;AGk5KlB;AHv3KE;;EAEE,mBA5BuB;AGq5K3B;AHtlLE;EACE;EACA;AGwlLJ;AHrlLE;EAII;AGolLN;AH3kLE;EACE;AG6kLJ;AH5jLE;;;EARM;AGykLR;AHl6KE;EACE,kCAtMA;AG0mLJ;AHj6KE;;EAEE,kCAViB;AG66KrB;AHh6KE;;EAEE;AGk6KJ;AH/5KE;;EAEE;AGi6KJ;AH95KE;;EAEE,mBAxBc;AGw7KlB;AH75KE;;EAEE,mBA5BuB;AG27K3B;AH5nLE;EACE;EACA;AG8nLJ;AH3nLE;EAII;AG0nLN;AHjnLE;EACE;AGmnLJ;AHlmLE;;;EARM;AG+mLR;AH7/KE;EAjsGA;AGisRF;AH5/KE;EACE;AG8/KJ;AH5/KI;EACE;AG8/KN;AH3/KI;EACE;AG6/KN;AHz/KE;EACE;AG2/KJ;AHz5KE;EApzGA;EAszGE;EACA;AG25KJ;AHvxLE;EACE;AGyxLJ;AHtxLE;EACE;AGwxLJ;AH30KE;EAEE;EACA;AG40KJ;AHjtRE;EAXA;AG+tRF;AH50KE;EACE;AG80KJ;AHl2KM;EAwBF;AG60KJ;AHx0KE;EACE;IAEE;EGy0KJ;AACF;AHt0KE;EACE;AGw0KJ;AHr0KE;;EAEE;AGu0KJ;AHp0KE;EACE;AGs0KJ;AHp0KI;;EAEE;AGs0KN;AHjwFE;EACE,+BAXY;AG8wFhB;AHhwFE;EACE,+BAfY;AGixFhB;AH/vFE;EACE,cAlBoB;AGmxFxB;AH/vFI;EACE,cAhBqB;AGixF3B;AH9vFI;EACE,cAnBmB;AGmxFzB;AH5vFE;EACE,cA7BqB;AG2xFzB;AH3vFE;EACE,uBA9BqB;AG2xFzB;AHzvFI;EACE,yBAhCsB;AG2xF5B;AHzvFM;EACE,yBArCmB;AGgyF3B;AHxvFM;EACE,yBAxCiB;AGkyFzB;AHpvFI;EACE,cA9CsB;AGoyF5B;AHnvFI;EACE,cApDqB;AGyyF3B;AHlvFI;EACE,cAvDmB;AG2yFzB;AH5uFI;EACE,cAhEmB;AG8yFzB;AH5uFM;;EAEE,cApEiB;AGkzFzB;AH1uFI;;EAEE,yBA1EmB;AGszFzB;AHxuFE;EACE,cA/EqB;AGyzFzB;AH5sGI;EACE,+BALU;AGmtGhB;AH3sGI;EACE,+BATU;AGstGhB;AH1sGI;EACE,0CAZc;AGwtGpB;AHzsGI;EAj/DF;EACA;EACA;AG6rKF;AH33FI;EACE,0CAJc;AGi4FpB;AH13FI;EAx0EF;EACA;EACA;AGqsKF;AH51GI;EACE,0CAPc;AGq2GpB;AH31GI;EACE,2CAVuB;AGu2G7B;AH11GI;EACE,0CAbc;AGy2GpB;AHx1GM;EACE,+BAjBiB;AG22GzB;AHv1GM;EACE;AGy1GR;AHpiGI;EACE,+BATY;AG+iGlB;AHniGI;EACE,YAZkB;AGijGxB;AHjiGM;EACE,cAhBkB;AGmjG1B;AHhiGM;EACE,cAnBiB;AGqjGzB;AH/hGM;EACE,cAtBe;AGujGvB;AH3hGM;EACE,cA7Be;AG0jGvB;AHxhGM;EACE,+BAxCiB;AGkkGzB;AHvhGM;EACE,gCAtCmB;AG+jG3B;AH5xKI;EACE;AG8xKN;AH3xKI;EACE;AG6xKN;AH1xKI;EACE;AG4xKN;AHhrKE;EACE;AGkrKJ;AH/qKE;;EAEE;AGirKJ;AH9qKE;EACE;AGgrKJ;AHzuKE;EA4DI;AGgrKN;AH5uKE;EA4DI;AGgrKN;AHxuKE;EAwDI;AGmrKN;AHvuKE;EAoDI;AGsrKN;AHtuKE;EAgDI;AGyrKN;AHhrKM;EACE,0BA9mHY;AGgyRpB;AH/qKM;EACE,0BAhnHa;AGiyRrB;AH5qKE;EACE;AG8qKJ;AH3qKE;;EAEE;AG6qKJ;AH1qKE;EACE;AG4qKJ;AHvnKI;EACE;AGynKN;AHtnKI;EACE;AGwnKN;AHrnKI;EACE;AGunKN;AHnnKE;EACE;AGqnKJ;AH/mKI;;;;;EACE;AGqnKN;AHhnKI;EACE;AGknKN;AH1hKE;EAEE;AG2hKJ;AHv6RE;EAXA;AGq7RF;AH3hKE;EACE;EACA;AG6hKJ;AH1hKM;;EAGE;AG2hKR;AHthKE;;EAEE;AGwhKJ;AHjhKI;;;;EACE;AGshKN;AHx9JE;EACE;AG09JJ;AHv9JE;;EAEE;AGy9JJ;AHt9JE;;EAEE;EACA;AGw9JJ;AHr9JE;;EAEE;AGu9JJ;AHn9JI;;;;EAIE;AGq9JN;AH95JE;EACE;AGg6JJ;AH75JE;EACE;AG+5JJ;AH55JE;EACE;AG85JJ;AH15JI;EACE;AG45JN;AHz5JI;EACE;AG25JN;AHx5JI;EACE;AG05JN;AHr5JI;EACE;AGu5JN;AHp5JI;EACE;AGs5JN;AHn5JI;EACE;AGq5JN;AH92JI;EACE;AGg3JN;AH72JI;EACE;AG+2JN;AH52JI;EACE;AG82JN;AHzzJE;EACE;AG2zJJ;AHh1JE;EACE;AGk1JJ;AH/0JE;;EAIE;AG+0JJ;AHv1JE;EACE;AGy1JJ;AHt1JE;;EAIE;AGs1JJ;AH91JE;EACE;AGg2JJ;AH71JE;;EAIE;AG61JJ;AH5zJM;;EAEE;AG8zJR;AH3zJM;;EAEE;AG6zJR;AH1zJM;EACE;AG4zJR;AHtzJI;EACE;AGwzJN;AHxwJE;EACE;AG0wJJ;AHvwJE;EACE;AGywJJ;AHtwJE;EACE;AGwwJJ;AHrwJE;EACE;AGuwJJ;AHpwJE;EACE;AGswJJ;AH3iSE;EAXA;AGyjSF;AHtwJI;EACE;AGwwJN;AHlwJM;EACE;AGowJR;AHjwJM;EACE;AGmwJR;AHhwJM;EACE;AGkwJR;AH9vJI;EACE;AGgwJN;AH7vJI;EACE;AG+vJN;AHtsJE;EACE,yBALmC;EAMnC;AGwsJJ;AHrsJE;EACE,yBAXwB;EAYxB;AGusJJ;AHrsJI;EACE,yBAb2B;AGotJjC;AHpsJI;EAl5IF;AGylSF;AHhsJE;EACE,iDAvBmB;AGytJvB;AHhsJI;EACE,gDA1BiB;EA2BjB;AGksJN;AH9rJE;EACE,gDAhCmB;EAiCnB;AGgsJJ;AH9rJI;EACE;EACA,iDArCiB;AGquJvB;AH5rJE;EAQI;AGurJN;AH9oJI;EACE;AGgpJN;AH7oJI;EAGE;AG6oJN;AH1oJI;EAGE;AG0oJN;AHvpJI;EACE;AGypJN;AHtpJI;EAGE;AGspJN;AHnpJI;EAGE;AGmpJN;AHhqJI;EACE;AGkqJN;AH/pJI;EAGE;AG+pJN;AH5pJI;EAGE;AG4pJN;AHvnJI;EAGE,uBAhBqB;AGuoJ3B;AHnnJE;EAthJA;EAwhJE;AGqnJJ;AHlnJE;EACE,0CA3BoB;AG+oJxB;AHtiJE;EACE,0CAVqB;AGkjJzB;AHjlJE;;;EAGE;AGmlJJ;AHhlJE;EACE;AGklJJ;AH/kJE;EAGE,uCADQ;AGglJZ;AH5lJE;;;EAGE;AG8lJJ;AH3lJE;EACE;AG6lJJ;AH1lJE;EAGE,0CADQ;AG2lJZ;AHvmJE;;;EAGE;AGymJJ;AHtmJE;EACE;AGwmJJ;AHrmJE;EAGE,wCADQ;AGsmJZ;AHxjJI;;EACE,0CA3B2B;AGslJjC;AHtjJI;;;EAGE,0CAlCwB;AG0lJ9B;AHpjJM;EACE,0CAvCsB;AG6lJ9B;AHhjJI;EAGE,2CADQ;AGijJd;AHtiJM;;EAEE,uBA3DqC;AGmmJ7C;AHpiJQ;;EAEE,0CAhEyC;AGsmJnD;AHhiJM;EACE,sCA3EiB;EA4EjB;AGkiJR;AH7hJQ;EACE,sCAjFuB;AGgnJjC;AH5hJQ;EACE,sCApFoB;AGknJ9B;AHxhJE;EACE,sCAvFsB;AGinJ1B;AHjhJE;EACE;EAIA;AGghJJ;AHtgJE;EACE;AGwgJJ;AHj7II;EAGE;AGi7IN;AH36II;EACE;IACE;EG66IN;AACF;AH16II;;EAIE;AG06IN;AHv6II;EAGE;EACA;AGu6IN;AHp6II;;;EAGE;EACA;AGs6IN;AHl6IM;EACE;AGo6IR;AHj6IM;;;EAGE;EACA;AGm6IR;AH95IM;EACE;AGg6IR;AH75IM;;;EAGE;EACA;AG+5IR;AH35II;EACE;EACA;AG65IN;AH15II;EACE;AG45IN;AHz5II;EACE;AG25IN;AHv5IE;EACE;AGy5IJ;AHt5IE;EACE;AGw5IJ;AHr5IE;;;EAGE;AGu5IJ;AHxzIE;EAYI;AG+yIN;AHnwIE;;EAEE,kDAJc;AGywIlB;AHjwII;;EAEE,+CAVY;EAWZ;AGmwIN;AH/vIE;EACE;AGiwIJ;AH/vII;EACE;AGiwIN;AH7vIE;EACE;AG+vIJ;AH5vIE;EACE;AG8vIJ;AH1vIE;;EAEE;EACA;AG4vIJ;AH9sIM;;;;;EACE;AGotIR;AH/tIE;EACE;AGiuIJ;AHluIE;EACE;AGouIJ;AH3tIM;;;;;EACE;AGiuIR;AH5uIE;EACE;AG8uIJ;AH/uIE;EACE;AGivIJ;AHxuIM;;;;;EACE;AG8uIR;AHzvIE;EACE;AG2vIJ;AH5vIE;EACE;AG8vIJ;AHrvIM;;;;;EACE;AG2vIR;AHhvIE;EACE;AGkvIJ;AH9uIE;EACE;AGgvIJ;AH9uII;EACE;AGgvIN;AH3uIE;;;;;EAGE;AG+uIJ;AH5uIE;EACE;AG8uIJ;AHzuIE;;;EAEE;AG4uIJ;AHpxIM;;;;;EACE;AG0xIR;AH/wIE;EACE;AGixIJ;AH7wIE;EACE;AG+wIJ;AH7wII;EACE;AG+wIN;AH1wIE;;;;;EAGE;AG8wIJ;AH3wIE;EACE;AG6wIJ;AHxwIE;;;EAEE;AG2wIJ;AHnzIM;;;;;EACE;AGyzIR;AH9yIE;EACE;AGgzIJ;AH5yIE;EACE;AG8yIJ;AH5yII;EACE;AG8yIN;AHzyIE;;;;;EAGE;AG6yIJ;AH1yIE;EACE;AG4yIJ;AHvyIE;;;EAEE;AG0yIJ;AHrrIE;EACE;EACA;AGurIJ;AHrrII;EApCF;EACA;AG4tIF;AHrrII;EAxCF;EACA;AGguIF;AHrrII;EA5CF;EACA;AGouIF;AHhuIE;;;EAGE;AGkuIJ;AH/tIE;;;;;EAKE;AGiuIJ;AH9tIE;EACE;AGguIJ;AH1nIE;EACE;AG4nIJ;AHpuGE;EACE;AGsuGJ;AHnuGE;;EAEE;AGquGJ;AH/kIE;EAGE;EACA;EA35KF;AG2+SF;AH3kIE;EACE;AG6kIJ;Acr+TE;EACE;Adu+TJ;Acr+TI;EACE;Adu+TN;Acn+TE;EACE;EACA;Adq+TJ;Acj+TI;EACE;Adm+TN;Acj+TM;EACE;Adm+TR;Ael/TQ;EACE;EACA;Afo/TV;Aeh/TM;EACE;Afk/TR;Ae5+TQ;EACE;EACA;Af8+TV;Ae5+TU;EACE;Af8+TZ;Aex+TI;EACE;EACA;Af0+TN;Aet+TQ;;EACE;Afy+TV;Aex+TU;;EACE;Af2+TZ;Aep+TE;EACE;EACA;Afs+TJ;Aen+TE;EACE;EACA;Afq+TJ;Ael+TE;EACE;EACA;Afo+TJ;Aej+TE;EACE;EACA;Afm+TJ;AgB7hUI;EACE;EACA;AhB+hUN;AgB5hUQ;EACE;AhB8hUV;AgBnhUM;;EACE;AhBshUR;AgBphUQ;;EACE;AhBuhUV;AgBrhUU;;EACE;AhBwhUZ;AgBjhUM;EACE;AhBmhUR;AiBljUM;EACE;EACA;AjBojUR;AiBjjUM;EACE;AjBmjUR;AH1vQE;EAII;AG0vQN;AHtgQE;EACE;AGwgQJ;AHtgQI;EAEE;AGugQN;AHngQI;EACE;AGqgQN;AHlgQI;EACE;EACA;AGogQN;AHjgQI;EACE;AGmgQN;AH//PE;EACE;AGigQJ;AH9/PE;EACE;AGggQJ;AH7/PE;EACE;AG+/PJ;AHp9PE;EACE;AGs9PJ;AHn9PE;EACE;AGq9PJ;AHn6PE;EACE;AGq6PJ;AHn6PI;EACE;AGq6PN;AHj6PE;EACE,cAZe;AG+6PnB;AHh6PE;;EAEE;AGk6PJ;AH15PE;;;;EAIE;AG45PJ;AHz5PE;;EAEE;AG25PJ;AHt5PI;;EACE,mBAxCa;AGi8PnB;AHvwGE;EAIE;EACA;AGswGJ;AH/vGI;EAx4MF;AG0oTF;AHlwGI;EAx4MF;AG6oTF;AHrwGI;EAx4MF;AGgpTF;AHxwGI;EAx4MF;AGmpTF;AH3wGI;EAx4MF;AGspTF;AH9wGI;EAx4MF;AGypTF;AHjxGI;EAx4MF;AG4pTF;AHpxGI;EAx4MF;AG+pTF;AHvxGI;EAx4MF;AGkqTF;AH1xGI;EAx4MF;AGqqTF;AH7xGI;EAx4MF;AGwqTF;AHhyGI;EAx4MF;AG2qTF;AHnyGI;EAx4MF;AG8qTF;AHtyGI;EAx4MF;AGirTF;AHzyGI;EAx4MF;AGorTF;AH5yGI;EAx4MF;AGurTF;AH/yGI;EAx4MF;AG0rTF;AHlzGI;EAx4MF;AG6rTF;AHrzGI;EAx4MF;AGgsTF;AHxzGI;EAx4MF;AGmsTF;AH3zGI;EAx4MF;AGssTF;AH9zGI;EAx4MF;AGysTF;AHj0GI;EAx4MF;AG4sTF;AHp0GI;EAx4MF;AG+sTF;AHv0GI;EAx4MF;AGktTF;AHn0GI;EACE;AGq0GN;AH/uPE;EAEE;EACA;AGivPJ;AH/sTE;EAXA;AG6tTF;AH7uPI;EACE;AG+uPN;AH7uPM;EACE;AG+uPR;AHjnPE;EACE;EACA;AGmnPJ;AHtjUI;EAs8EE;EACA;AGmnPN;AH9mPI;EACE;EACA;AGinPN;AH5mPI;EACE;EACA;AG8mPN;AH1mPE;EACE;AG4mPJ;AHxmPI;EACE;AG0mPN;AHrmPI;EAWI;EAMF;AGwlPN;AHplPE;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AGslPJ;AHnlPE;;EAEE;AGqlPJ;AHhlPE;EAEE;AGilPJ;AHhvPE;EACE,WANmB;EAOnB,YAPmB;EAQnB,iBARmB;AG0vPvB;AH9uPI;EACE;AGgvPN;AH3uPI;EACE;AG6uPN;AHxuPI;EACE;AG0uPN;AHruPI;EACE;EACA;AGuuPN;AHluPI;EACE;AGouPN;AH/tPI;EACE;EACA;AGiuPN;AH3tPM;EACE;AG6tPR;AHxtPM;EACE;EACA;AG0tPR;AHrtPM;EACE;AGutPR;AHltPM;EACE;EACA;AGotPR;AHvxPE;EACE,WAPqB;EAQrB,YARqB;EASrB,iBATqB;AGkyPzB;AHrxPI;EACE;AGuxPN;AHlxPI;EACE;AGoxPN;AH/wPI;EACE;AGixPN;AH5wPI;EACE;EACA;AG8wPN;AHzwPI;EACE;AG2wPN;AHtwPI;EACE;EACA;AGwwPN;AHlwPM;EACE;AGowPR;AH/vPM;EACE;EACA;AGiwPR;AH5vPM;EACE;AG8vPR;AHzvPM;EACE;EACA;AG2vPR;AH9zPE;EACE,WALmB;EAMnB,YANmB;EAOnB,iBAPmB;AGu0PvB;AH5zPI;EACE;AG8zPN;AHzzPI;EACE;AG2zPN;AHtzPI;EACE;AGwzPN;AHnzPI;EACE;EACA;AGqzPN;AHhzPI;EACE;AGkzPN;AH7yPI;EACE;EACA;AG+yPN;AHzyPM;EACE;AG2yPR;AHtyPM;EACE;EACA;AGwyPR;AHnyPM;EACE;AGqyPR;AHhyPM;EACE;EACA;AGkyPR;AHvoPE;EA/vEA;EAiwEE;EACA;AGyoPJ;AH5gPE;EAKE;EACA;AG0gPJ;AH1iPE;EACE;AG4iPJ;AH1iPE;EACE;AG4iPJ;AH1iPE;EACE;AG4iPJ;AHxiPI;EAEE;AGyiPN;AH5mPE;EACE;AG8mPJ;AH3mPE;EACE;AG6mPJ;AH1mPE;EACE;AG4mPJ;AHzmPE;EACE;AG2mPJ;AH1hPI;EACE,YAxGuB;EAyGvB;AG4hPN;AHxhPE;EACE;AG0hPJ;AHrhPE;EACE;AGuhPJ;AHphPE;EAEE;EACA;AGqhPJ;AHhlPE;EACE;AGklPJ;AHhlPE;EACE;AGklPJ;AHhlPE;EACE;AGklPJ;AH9kPI;EAEE;AG+kPN;AH5lPE;EACE;AG8lPJ;AH5lPE;EACE;AG8lPJ;AH5lPE;EACE;AG8lPJ;AH1lPI;EAEE;AG2lPN;AH7nPE;EAXA,0CADmB;AG4oPrB;AH5nPE;EAfA,0CADmB;AG+oPrB;AH3nPE;EAnBA,0CADmB;AGkpPrB;AH38TE;EAXA;AGy9TF;AH98TE;EAXA;AG49TF;AHj9TE;EAXA;AG+9TF;AHp9TE;EAXA;AGk+TF;AHv9TE;EAXA;AGq+TF;AH19TE;EAXA;AGw+TF;AH79TE;EAXA;AG2+TF;AH1+OE;;EAjgFA;AG++TF;AHz+OE;;EAEE;AG2+OJ;AHx+OE;EACE;AG0+OJ;AHx+OI;EACE;AG0+ON;AHt+OE;EACE;EACA;AGw+OJ;AHt+OI;EACE;AGw+ON;AHp+OE;EACE;AGs+OJ;AHn+OE;EACE;EACA;AGq+OJ;AHj+OI;EACE;EACA;EACA;AGm+ON;AH/9OE;EACE;EACA;AGi+OJ;AH/9OI;EACE;AGi+ON;AH79OE;EACE;EACA;AG+9OJ;AH79OI;EACE;AG+9ON;AH59OI;EACE;AG89ON;AH19OE;;EAEE;AG49OJ;AHv6OE;EAEE;EACA;AGw6OJ;AH1hUE;EAXA;AGwiUF;AH7hUE;EAXA;AG2iUF;AHt6OE;EACE;AGw6OJ;AHh2OE;EACE;AGk2OJ;AH/1OE;EACE,aAdoB;AG+2OxB;AH91OE;EAGE;AG81OJ;AH31OE;EACE,yBAxBoB;AGq3OxB;AHz1OI;EACE;AG21ON;AHx1OI;EACE;AG01ON;AHv1OI;EACE;AGy1ON;AHl1OM;EACE,yBAtCW;AG03OnB;AH/0OM;EACE,qBA5CW;AG63OnB;AH70OI;EACE;AG+0ON;AHz0OE;EACE;AG20OJ;AHt0OI;;EACE;AGy0ON;AHt0OI;;EACE;AGy0ON;AHt0OI;;EACE;AGy0ON;AHhvOE;EA3CA,yBAwCwB;EAvCxB,0BAwCwB;AGsvO1B;AH5xOE;EACE,0BAqCsB;EApCtB;AG8xOJ;AHpvOM;EA/2FJ;AGsmUF;AHnvOM;EACE;AGqvOR;AHjvOI;EACE;AGmvON;AHhvOI;EACE;AGkvON;AH7uOI;EAlEF,yBAwBwE;EAvBxE,YAuBiC;AG2xOnC;AHhzOE;EACE,YAoB+B;EAnB/B;AGkzOJ;AH7xOE;EATA,0CADmB;AG0yOrB;AHpvOI;EAtEF,yBAwBwE;EAvBxE,YAuBiC;AGsyOnC;AH3zOE;EACE,YAoB+B;EAnB/B;AG6zOJ;AHxyOE;EATA,0CADmB;AGqzOrB;AH3vOI;EA1EF,yBAwBwE;EAvBxE,YAuBiC;AGizOnC;AHt0OE;EACE,YAoB+B;EAnB/B;AGw0OJ;AHnzOE;EATA,0CADmB;AGg0OrB;AH5qOE;EACE;AG8qOJ;AH3qOE;;;;EAIE;AG6qOJ;AH1qOE;;EAEE;AG4qOJ;AHzqOE;EACE;AG2qOJ;AHxqOE;EACE;AG0qOJ;AHjkOE;EACE;AGmkOJ;AH9jOE;;;EAGE;AGgkOJ;AH7jOE;EACE;AG+jOJ;AH5jOE;EACE;AG8jOJ;AH3jOE;EACE;AG6jOJ;AH1jOE;;EAEE;EACA;AG4jOJ;AHlmOE;EA2CI,0BAlCa;AG4lOnB;AHtjOE;EACE,0BAvCe;AG+lOnB;AHrjOE;EAOI;AGijON;AH3mOE;EAqEI;AGyiON;AH9mOE;EA8EM;AGmiOR;AHl9NE;EACE,iCAtMA;AG0pOJ;AHj9NE;;EAEE,kCAViB;AG69NrB;AHh9NE;;EAEE;AGk9NJ;AH/8NE;;EAEE;AGi9NJ;AH98NE;;EAEE,mBAxBc;AGw+NlB;AH78NE;;EAEE,mBA5BuB;AG2+N3B;AH5qOE;EACE;EACA;AG8qOJ;AH3qOE;EAII;AG0qON;AHjqOE;EACE;AGmqOJ;AHlpOE;;;EARM;AG+pOR;AH3jOE;EAnrGA;EAqrGE;EACA;AG6jOJ;AH7/NE;EACE,oCAtMA;AGqsOJ;AH5/NE;;EAEE,kCAViB;AGwgOrB;AH3/NE;;EAEE;AG6/NJ;AH1/NE;;EAEE;AG4/NJ;AHz/NE;;EAEE,mBAxBc;AGmhOlB;AHx/NE;;EAEE,mBA5BuB;AGshO3B;AHvtOE;EACE;EACA;AGytOJ;AHttOE;EAII;AGqtON;AH5sOE;EACE;AG8sOJ;AH7rOE;;;EARM;AG0sOR;AHniOE;EACE,kCAtMA;AG2uOJ;AHliOE;;EAEE,kCAViB;AG8iOrB;AHjiOE;;EAEE;AGmiOJ;AHhiOE;;EAEE;AGkiOJ;AH/hOE;;EAEE,mBAxBc;AGyjOlB;AH9hOE;;EAEE,mBA5BuB;AG4jO3B;AH7vOE;EACE;EACA;AG+vOJ;AH5vOE;EAII;AG2vON;AHlvOE;EACE;AGovOJ;AHnuOE;;;EARM;AGgvOR;AH9nOE;EAjsGA;AGk0UF;AH7nOE;EACE;AG+nOJ;AH7nOI;EACE;AG+nON;AH5nOI;EACE;AG8nON;AH1nOE;EACE;AG4nOJ;AH1hOE;EApzGA;EAszGE;EACA;AG4hOJ;AHx5OE;EACE;AG05OJ;AHv5OE;EACE;AGy5OJ;AH58NE;EAEE;EACA;AG68NJ;AHl1UE;EAXA;AGg2UF;AH78NE;EACE;AG+8NJ;AHn+NM;EAwBF;AG88NJ;AHz8NE;EACE;IAEE;EG08NJ;AACF;AHv8NE;EACE;AGy8NJ;AHt8NE;;EAEE;AGw8NJ;AHr8NE;EACE;AGu8NJ;AHr8NI;;EAEE;AGu8NN;AHl4IE;EACE,yBAXY;AG+4IhB;AHj4IE;EACE,yBAfY;AGk5IhB;AHh4IE;EACE,cAlBoB;AGo5IxB;AHh4II;EACE,cAhBqB;AGk5I3B;AH/3II;EACE,cAnBmB;AGo5IzB;AH73IE;EACE,cA7BqB;AG45IzB;AH53IE;EACE,qCA9BqB;AG45IzB;AH13II;EACE,yBAhCsB;AG45I5B;AH13IM;EACE,yBArCmB;AGi6I3B;AHz3IM;EACE,yBAxCiB;AGm6IzB;AHr3II;EACE,cA9CsB;AGq6I5B;AHp3II;EACE,cApDqB;AG06I3B;AHn3II;EACE,cAvDmB;AG46IzB;AH72II;EACE,cAhEmB;AG+6IzB;AH72IM;;EAEE,cApEiB;AGm7IzB;AH32II;;EAEE,yBA1EmB;AGu7IzB;AHz2IE;EACE,cA/EqB;AG07IzB;AH70JI;EACE,0BALU;AGo1JhB;AH50JI;EACE,0BATU;AGu1JhB;AH30JI;EACE,qCAZc;AGy1JpB;AH10JI;EAj/DF;EACA;EACA;AG8zNF;AH5/II;EACE,qCAJc;AGkgJpB;AH3/II;EAx0EF;EACA;EACA;AGs0NF;AH79JI;EACE,qCAPc;AGs+JpB;AH59JI;EACE,qCAVuB;AGw+J7B;AH39JI;EACE,qCAbc;AG0+JpB;AHz9JM;EACE,0BAjBiB;AG4+JzB;AHx9JM;EACE;AG09JR;AHrqJI;EACE,0BATY;AGgrJlB;AHpqJI;EACE,0BAZkB;AGkrJxB;AHlqJM;EACE,cAhBkB;AGorJ1B;AHjqJM;EACE,cAnBiB;AGsrJzB;AHhqJM;EACE,cAtBe;AGwrJvB;AH5pJM;EACE,cA7Be;AG2rJvB;AHzpJM;EACE,0BAxCiB;AGmsJzB;AHxpJM;EACE,0BAtCmB;AGgsJ3B;AH75NI;EACE;AG+5NN;AH55NI;EACE;AG85NN;AH35NI;EACE;AG65NN;AHjzNE;EACE;AGmzNJ;AHhzNE;;EAEE;AGkzNJ;AH/yNE;EACE;AGizNJ;AH12NE;EA4DI;AGizNN;AH72NE;EA4DI;AGizNN;AHz2NE;EAwDI;AGozNN;AHx2NE;EAoDI;AGuzNN;AHv2NE;EAgDI;AG0zNN;AHvyNE;EACE;AGyyNJ;AHtyNE;;EAEE;AGwyNJ;AHryNE;EACE;AGuyNJ;AHlvNI;EACE;AGovNN;AHjvNI;EACE;AGmvNN;AHhvNI;EACE;AGkvNN;AH9uNE;EACE;AGgvNJ;AH1uNI;;;;;EACE;AGgvNN;AH3uNI;EACE;AG6uNN;AHrpNE;EAEE;AGspNJ;AHliVE;EAXA;AGgjVF;AHtpNE;EACE;EACA;AGwpNJ;AHrpNM;;EAGE;AGspNR;AHjpNE;;EAEE;AGmpNJ;AH5oNI;;;;EACE;AGipNN;AHnlNE;EACE;AGqlNJ;AHllNE;;EAEE;AGolNJ;AHjlNE;;EAEE;EACA;AGmlNJ;AHhlNE;;EAEE;AGklNJ;AH9kNI;;;;EAIE;AGglNN;AHzhNE;EACE;AG2hNJ;AHxhNE;EACE;AG0hNJ;AHvhNE;EACE;AGyhNJ;AHrhNI;EACE;AGuhNN;AHphNI;EACE;AGshNN;AHnhNI;EACE;AGqhNN;AHhhNI;EACE;AGkhNN;AH/gNI;EACE;AGihNN;AH9gNI;EACE;AGghNN;AHz+MI;EACE;AG2+MN;AHx+MI;EACE;AG0+MN;AHv+MI;EACE;AGy+MN;AHp7ME;EACE;AGs7MJ;AH38ME;EACE;AG68MJ;AH18ME;;EAIE;AG08MJ;AHl9ME;EACE;AGo9MJ;AHj9ME;;EAIE;AGi9MJ;AHz9ME;EACE;AG29MJ;AHx9ME;;EAIE;AGw9MJ;AHv7MM;;EAEE;AGy7MR;AHt7MM;;EAEE;AGw7MR;AHr7MM;EACE;AGu7MR;AHj7MI;EACE;AGm7MN;AHn4ME;EACE;AGq4MJ;AHl4ME;EACE;AGo4MJ;AHj4ME;EACE;AGm4MJ;AHh4ME;EACE;AGk4MJ;AH/3ME;EACE;AGi4MJ;AHtqVE;EAXA;AGorVF;AHj4MI;EACE;AGm4MN;AH73MM;EACE;AG+3MR;AH53MM;EACE;AG83MR;AH33MM;EACE;AG63MR;AHz3MI;EACE;AG23MN;AHx3MI;EACE;AG03MN;AHj0ME;EACE,yBALmC;EAMnC;AGm0MJ;AHh0ME;EACE,uBAXwB;EAYxB;AGk0MJ;AHh0MI;EACE,uBAb2B;AG+0MjC;AH/zMI;EAl5IF;AGotVF;AH3zME;EACE,2CAvBmB;AGo1MvB;AH3zMI;EACE,0CA1BiB;EA2BjB;AG6zMN;AHzzME;EACE,0CAhCmB;EAiCnB;AG2zMJ;AHzzMI;EACE;EACA,2CArCiB;AGg2MvB;AHvzME;EAQI;AGkzMN;AHzwMI;EACE;AG2wMN;AHxwMI;EAGE;AGwwMN;AHrwMI;EAGE;AGqwMN;AHlxMI;EACE;AGoxMN;AHjxMI;EAGE;AGixMN;AH9wMI;EAGE;AG8wMN;AH3xMI;EACE;AG6xMN;AH1xMI;EAGE;AG0xMN;AHvxMI;EAGE;AGuxMN;AHlvMI;EAGE,uBAhBqB;AGkwM3B;AH9uME;EAthJA;EAwhJE;AGgvMJ;AH7uME;EACE,qCA3BoB;AG0wMxB;AHjqME;EACE,qCAVqB;AG6qMzB;AH5sME;;;EAGE;AG8sMJ;AH3sME;EACE;AG6sMJ;AH1sME;EAGE,uCADQ;AG2sMZ;AHvtME;;;EAGE;AGytMJ;AHttME;EACE;AGwtMJ;AHrtME;EAGE,0CADQ;AGstMZ;AHluME;;;EAGE;AGouMJ;AHjuME;EACE;AGmuMJ;AHhuME;EAGE,wCADQ;AGiuMZ;AHnrMI;;EACE,qCA3B2B;AGitMjC;AHjrMI;;;EAGE,qCAlCwB;AGqtM9B;AH/qMM;EACE,qCAvCsB;AGwtM9B;AH3qMI;EAGE,qCADQ;AG4qMd;AHjqMM;;EAEE,qCA3DqC;AG8tM7C;AH/pMQ;;EAEE,qCAhEyC;AGiuMnD;AH3pMM;EACE,iCA3EiB;EA4EjB;AG6pMR;AHxpMQ;EACE,iCAjFuB;AG2uMjC;AHvpMQ;EACE,iCApFoB;AG6uM9B;AHnpME;EACE,gCAvFsB;AG4uM1B;AH5oME;EACE;EAIA;AG2oMJ;AHjoME;EACE;AGmoMJ;AH5iMI;EAGE;AG4iMN;AHtiMI;EACE;IACE;EGwiMN;AACF;AHriMI;;EAIE;AGqiMN;AHliMI;EAGE;EACA;AGkiMN;AH/hMI;;;EAGE;EACA;AGiiMN;AH7hMM;EACE;AG+hMR;AH5hMM;;;EAGE;EACA;AG8hMR;AHzhMM;EACE;AG2hMR;AHxhMM;;;EAGE;EACA;AG0hMR;AHthMI;EACE;EACA;AGwhMN;AHrhMI;EACE;AGuhMN;AHphMI;EACE;AGshMN;AHlhME;EACE;AGohMJ;AHjhME;EACE;AGmhMJ;AHhhME;;;EAGE;AGkhMJ;AHn7LE;EAYI;AG06LN;AH93LE;;EAEE,4CAJc;AGo4LlB;AH53LI;;EAEE,yCAVY;EAWZ;AG83LN;AH13LE;EACE;AG43LJ;AH13LI;EACE;AG43LN;AHx3LE;EACE;AG03LJ;AHv3LE;EACE;AGy3LJ;AHr3LE;;EAEE;EACA;AGu3LJ;AHz0LM;;;;;EACE;AG+0LR;AH11LE;EACE;AG41LJ;AH71LE;EACE;AG+1LJ;AHt1LM;;;;;EACE;AG41LR;AHv2LE;EACE;AGy2LJ;AH12LE;EACE;AG42LJ;AHn2LM;;;;;EACE;AGy2LR;AHp3LE;EACE;AGs3LJ;AHv3LE;EACE;AGy3LJ;AHh3LM;;;;;EACE;AGs3LR;AH32LE;EACE;AG62LJ;AHz2LE;EACE;AG22LJ;AHz2LI;EACE;AG22LN;AHt2LE;;;;;EAGE;AG02LJ;AHv2LE;EACE;AGy2LJ;AHp2LE;;;EAEE;AGu2LJ;AH/4LM;;;;;EACE;AGq5LR;AH14LE;EACE;AG44LJ;AHx4LE;EACE;AG04LJ;AHx4LI;EACE;AG04LN;AHr4LE;;;;;EAGE;AGy4LJ;AHt4LE;EACE;AGw4LJ;AHn4LE;;;EAEE;AGs4LJ;AH96LM;;;;;EACE;AGo7LR;AHz6LE;EACE;AG26LJ;AHv6LE;EACE;AGy6LJ;AHv6LI;EACE;AGy6LN;AHp6LE;;;;;EAGE;AGw6LJ;AHr6LE;EACE;AGu6LJ;AHl6LE;;;EAEE;AGq6LJ;AHhzLE;EACE;EACA;AGkzLJ;AHhzLI;EApCF;EACA;AGu1LF;AHhzLI;EAxCF;EACA;AG21LF;AHhzLI;EA5CF;EACA;AG+1LF;AH31LE;;;EAGE;AG61LJ;AH11LE;;;;;EAKE;AG41LJ;AHz1LE;EACE;AG21LJ;AHrvLE;EACE;AGuvLJ;AH/1JE;EACE;AGi2JJ;AH91JE;;EAEE;AGg2JJ;AH1sLE;EAGE;EACA;EA35KF;AGsmWF;AHtsLE;EACE;AGwsLJ;AchmXE;EACE;AdkmXJ;AchmXI;EACE;AdkmXN;Ac9lXE;EACE;EACA;AdgmXJ;Ac5lXI;EACE;Ad8lXN;Ac5lXM;EACE;Ad8lXR;Ae7mXQ;EACE;EACA;Af+mXV;Ae3mXM;EACE;Af6mXR;AevmXQ;EACE;EACA;AfymXV;AevmXU;EACE;AfymXZ;AenmXI;EACE;EACA;AfqmXN;AejmXQ;;EACE;AfomXV;AenmXU;;EACE;AfsmXZ;Ae/lXE;EACE;EACA;AfimXJ;Ae9lXE;EACE;EACA;AfgmXJ;Ae7lXE;EACE;EACA;Af+lXJ;Ae5lXE;EACE;EACA;Af8lXJ;AgBxpXI;EACE;EACA;AhB0pXN;AgBvpXQ;EACE;AhBypXV;AgB9oXM;;EACE;AhBipXR;AgB/oXQ;;EACE;AhBkpXV;AgBhpXU;;EACE;AhBmpXZ;AgB5oXM;EACE;AhB8oXR;AiB7qXM;EACE;EACA;AjB+qXR;AiB5qXM;EACE;AjB8qXR,C","file":"styles.css","sourcesContent":[".app-loading {\n  .logo {\n    width: 64px;\n    height: 64px;\n    background: url(./assets/logo.png) center center no-repeat;\n    background-size: cover;\n  }\n}\n","// File for which all imports are resolved and bundled. This is the entry-point for\n// the `@angular/material` theming Sass bundle. See `//src/material:theming_bundle`.\n\n// Import all the theming functionality.\n// We want overlays to always appear over user content, so set a baseline\n// very high z-index for the overlay container, which is where we create the new\n// stacking context for all overlays.\n$cdk-z-index-overlay-container: 1000 !default;\n$cdk-z-index-overlay: 1000 !default;\n$cdk-z-index-overlay-backdrop: 1000 !default;\n\n// Background color for all of the backdrops\n$cdk-overlay-dark-backdrop-background: rgba(0, 0, 0, 0.32) !default;\n\n// Default backdrop animation is based on the Material Design swift-ease-out.\n$backdrop-animation-duration: 400ms !default;\n$backdrop-animation-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n\n\n@mixin cdk-overlay() {\n  .cdk-overlay-container, .cdk-global-overlay-wrapper {\n    // Disable events from being captured on the overlay container.\n    pointer-events: none;\n\n    // The container should be the size of the viewport.\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n  }\n\n  // The overlay-container is an invisible element which contains all individual overlays.\n  .cdk-overlay-container {\n    position: fixed;\n    z-index: $cdk-z-index-overlay-container;\n\n    &:empty {\n      // Hide the element when it doesn't have any child nodes. This doesn't\n      // include overlays that have been detached, rather than disposed.\n      display: none;\n    }\n  }\n\n  // We use an extra wrapper element in order to use make the overlay itself a flex item.\n  // This makes centering the overlay easy without running into the subpixel rendering\n  // problems tied to using `transform` and without interfering with the other position\n  // strategies.\n  .cdk-global-overlay-wrapper {\n    display: flex;\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n  }\n\n  // A single overlay pane.\n  .cdk-overlay-pane {\n    // Note: it's important for this one to start off `absolute`,\n    // in order for us to be able to measure it correctly.\n    position: absolute;\n    pointer-events: auto;\n    box-sizing: border-box;\n    z-index: $cdk-z-index-overlay;\n\n    // For connected-position overlays, we set `display: flex` in\n    // order to force `max-width` and `max-height` to take effect.\n    display: flex;\n    max-width: 100%;\n    max-height: 100%;\n  }\n\n  .cdk-overlay-backdrop {\n    // TODO(jelbourn): reuse sidenav fullscreen mixin.\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n\n    z-index: $cdk-z-index-overlay-backdrop;\n    pointer-events: auto;\n    -webkit-tap-highlight-color: transparent;\n    transition: opacity $backdrop-animation-duration $backdrop-animation-timing-function;\n    opacity: 0;\n\n    &.cdk-overlay-backdrop-showing {\n      opacity: 1;\n\n      // Note that we can't import and use the `high-contrast` mixin from `_a11y.scss`, because\n      // this file will be copied to the top-level `cdk` package when putting together the files\n      // for npm. Any relative import paths we use here will become invalid once the file is copied.\n      .cdk-high-contrast-active & {\n        // In high contrast mode the rgba background will become solid\n        // so we need to fall back to making it opaque using `opacity`.\n        opacity: 0.6;\n      }\n    }\n  }\n\n  .cdk-overlay-dark-backdrop {\n    background: $cdk-overlay-dark-backdrop-background;\n  }\n\n  .cdk-overlay-transparent-backdrop {\n    // Note: as of Firefox 57, having the backdrop be `background: none` will prevent it from\n    // capturing the user's mouse scroll events. Since we also can't use something like\n    // `rgba(0, 0, 0, 0)`, we work around the inconsistency by not setting the background at\n    // all and using `opacity` to make the element transparent.\n    &, &.cdk-overlay-backdrop-showing {\n      opacity: 0;\n    }\n  }\n\n  // Overlay parent element used with the connected position strategy. Used to constrain the\n  // overlay element's size to fit within the viewport.\n  .cdk-overlay-connected-position-bounding-box {\n    position: absolute;\n    z-index: $cdk-z-index-overlay;\n\n    // We use `display: flex` on this element exclusively for centering connected overlays.\n    // When *not* centering, a top/left/bottom/right will be set which overrides the normal\n    // flex layout.\n    display: flex;\n\n    // We use the `column` direction here to avoid some flexbox issues in Edge\n    // when using the \"grow after open\" options.\n    flex-direction: column;\n\n    // Add some dimensions so the element has an `innerText` which some people depend on in tests.\n    min-width: 1px;\n    min-height: 1px;\n  }\n\n  // Used when disabling global scrolling.\n  .cdk-global-scrollblock {\n    position: fixed;\n\n    // Necessary for the content not to lose its width. Note that we're using 100%, instead of\n    // 100vw, because 100vw includes the width plus the scrollbar, whereas 100% is the width\n    // that the element had before we made it `fixed`.\n    width: 100%;\n\n    // Note: this will always add a scrollbar to whatever element it is on, which can\n    // potentially result in double scrollbars. It shouldn't be an issue, because we won't\n    // block scrolling on a page that doesn't have a scrollbar in the first place.\n    overflow-y: scroll;\n  }\n}\n\n@mixin cdk-a11y {\n  .cdk-visually-hidden {\n    border: 0;\n    clip: rect(0 0 0 0);\n    height: 1px;\n    margin: -1px;\n    overflow: hidden;\n    padding: 0;\n    position: absolute;\n    width: 1px;\n\n    // Avoid browsers rendering the focus ring in some cases.\n    outline: 0;\n\n    // Avoid some cases where the browser will still render the native controls (see #9049).\n    -webkit-appearance: none;\n    -moz-appearance: none;\n  }\n}\n\n/// Emits the mixin's content nested under `$selector-context` if `$selector-context`\n/// is non-empty.\n/// @param selector-context The selector under which to nest the mixin's content.\n@mixin _cdk-optionally-nest-content($selector-context) {\n  @if ($selector-context == '') {\n    @content;\n  }\n  @else {\n    #{$selector-context} {\n      @content;\n    }\n  }\n}\n\n/// Applies styles for users in high contrast mode. Note that this only applies\n/// to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\n/// attribute, however Chrome handles high contrast differently.\n///\n/// @param target Which kind of high contrast setting to target. Defaults to `active`, can be\n///    `white-on-black` or `black-on-white`.\n/// @param encapsulation Whether to emit styles for view encapsulation. Values are:\n///     * `on` - works for `Emulated`, `Native`, and `ShadowDom`\n///     * `off` - works for `None`\n///     * `any` - works for all encapsulation modes by emitting the CSS twice (default).\n@mixin cdk-high-contrast($target: active, $encapsulation: 'any') {\n  @if ($target != 'active' and $target != 'black-on-white' and $target != 'white-on-black') {\n    @error 'Unknown cdk-high-contrast value \"#{$target}\" provided. ' +\n           'Allowed values are \"active\", \"black-on-white\", and \"white-on-black\"';\n  }\n\n  @if ($encapsulation != 'on' and $encapsulation != 'off' and $encapsulation != 'any') {\n    @error 'Unknown cdk-high-contrast encapsulation \"#{$encapsulation}\" provided. ' +\n           'Allowed values are \"on\", \"off\", and \"any\"';\n  }\n\n  // If the selector context has multiple parts, such as `.section, .region`, just doing\n  // `.cdk-high-contrast-xxx #{&}` will only apply the parent selector to the first part of the\n  // context. We address this by nesting the selector context under .cdk-high-contrast.\n  @at-root {\n    $selector-context: #{&};\n\n    @if ($encapsulation != 'on') {\n      // Note that if this selector is updated, the same change has to be made inside\n      // `_overlay.scss` which can't depend on this mixin due to some infrastructure limitations.\n      .cdk-high-contrast-#{$target} {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n\n    @if ($encapsulation != 'off') {\n      .cdk-high-contrast-#{$target} :host {\n        @include _cdk-optionally-nest-content($selector-context) {\n          @content;\n        }\n      }\n    }\n  }\n}\n\n// Core styles that enable monitoring autofill state of text fields.\n@mixin cdk-text-field {\n  // Keyframes that apply no styles, but allow us to monitor when an text field becomes autofilled\n  // by watching for the animation events that are fired when they start. Note: the /*!*/ comment is\n  // needed to prevent LibSass from stripping the keyframes out.\n  // Based on: https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n  @keyframes cdk-text-field-autofill-start {/*!*/}\n  @keyframes cdk-text-field-autofill-end {/*!*/}\n\n  .cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms;\n  }\n\n  .cdk-text-field-autofill-monitored:not(:-webkit-autofill) {\n    // Since Chrome 80 we need a 1ms delay, or the animationstart event won't fire.\n    animation: cdk-text-field-autofill-end 0s 1ms;\n  }\n\n  // Remove the resize handle on autosizing textareas, because whatever height\n  // the user resized to will be overwritten once they start typing again.\n  textarea.cdk-textarea-autosize {\n    resize: none;\n  }\n\n  // This class is temporarily applied to the textarea when it is being measured. It is immediately\n  // removed when measuring is complete. We use `!important` rules here to make sure user-specified\n  // rules do not interfere with the measurement.\n  textarea.cdk-textarea-autosize-measuring {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: auto !important;\n    overflow: hidden !important;\n  }\n\n  // Similar to the `cdk-textarea-autosize-measuring` class, but only applied on Firefox. We need\n  // to use this class, because Firefox has a bug where changing the `overflow` breaks the user's\n  // ability to undo/redo what they were typing (see #16629). This class is only scoped to Firefox,\n  // because the measurements there don't seem to be affected by the `height: 0`, whereas on other\n  // browsers they are, e.g. Chrome detects longer text and IE does't resize back to normal.\n  // Identical issue report: https://bugzilla.mozilla.org/show_bug.cgi?id=448784\n  textarea.cdk-textarea-autosize-measuring-firefox {\n    @include _cdk-textarea-autosize-measuring-base;\n    height: 0 !important;\n  }\n}\n\n@mixin _cdk-textarea-autosize-measuring-base {\n  // Having 2px top and bottom padding seems to fix a bug where Chrome gets an incorrect\n  // measurement. We just have to account for it later and subtract it off the final result.\n  padding: 2px 0 !important;\n  box-sizing: content-box !important;\n}\n\n// Used to generate UIDs for keyframes used to change the text field autofill styles.\n$cdk-text-field-autofill-color-frame-count: 0;\n\n// Mixin used to apply custom background and foreground colors to an autofilled text field.\n// Based on: https://stackoverflow.com/questions/2781549/\n// removing-input-background-colour-for-chrome-autocomplete#answer-37432260\n@mixin cdk-text-field-autofill-color($background, $foreground:'') {\n  @keyframes cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} {\n    to {\n      background: $background;\n      @if $foreground != '' { color: $foreground; }\n    }\n  }\n\n  &:-webkit-autofill {\n    animation: cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  &.cdk-text-field-autofill-monitored:-webkit-autofill {\n    // Since Chrome 80 we need a 1ms delay for cdk-text-field-autofill-start, or the animationstart\n    // event won't fire.\n    animation: cdk-text-field-autofill-start 0s 1ms,\n               cdk-text-field-autofill-color-#{$cdk-text-field-autofill-color-frame-count} both;\n  }\n\n  $cdk-text-field-autofill-color-frame-count:\n      $cdk-text-field-autofill-color-frame-count + 1 !global;\n}\n\n\n// Core styles that can be used to apply material design treatments to any element.\n// Media queries\n// TODO(josephperrott): Change $mat-xsmall and $mat-small usages to rely on BreakpointObserver,\n$mat-xsmall: 'max-width: 599px';\n$mat-small: 'max-width: 959px';\n\n// TODO: Revisit all z-indices before beta\n// z-index master list\n\n$z-index-fab: 20 !default;\n$z-index-drawer: 100 !default;\n\n// Global constants\n$pi: 3.14159265;\n\n// Padding between input toggles and their labels\n$mat-toggle-padding: 8px !default;\n// Width and height of input toggles\n$mat-toggle-size: 20px !default;\n\n// Easing Curves\n// TODO(jelbourn): all of these need to be revisited\n\n// The default animation curves used by material design.\n$mat-linear-out-slow-in-timing-function: cubic-bezier(0, 0, 0.2, 0.1) !default;\n$mat-fast-out-slow-in-timing-function: cubic-bezier(0.4, 0, 0.2, 1) !default;\n$mat-fast-out-linear-in-timing-function: cubic-bezier(0.4, 0, 1, 1) !default;\n\n$ease-in-out-curve-function: cubic-bezier(0.35, 0, 0.25, 1) !default;\n\n$swift-ease-out-duration: 400ms !default;\n$swift-ease-out-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1) !default;\n$swift-ease-out: all $swift-ease-out-duration $swift-ease-out-timing-function !default;\n\n$swift-ease-in-duration: 300ms !default;\n$swift-ease-in-timing-function: cubic-bezier(0.55, 0, 0.55, 0.2) !default;\n$swift-ease-in: all $swift-ease-in-duration $swift-ease-in-timing-function !default;\n\n$swift-ease-in-out-duration: 500ms !default;\n$swift-ease-in-out-timing-function: $ease-in-out-curve-function !default;\n$swift-ease-in-out: all $swift-ease-in-out-duration $swift-ease-in-out-timing-function !default;\n\n$swift-linear-duration: 80ms !default;\n$swift-linear-timing-function: linear !default;\n$swift-linear: all $swift-linear-duration $swift-linear-timing-function !default;\n\n\n\n// A collection of mixins and CSS classes that can be used to apply elevation to a material\n// element.\n// See: https://material.io/design/environment/elevation.html\n// Examples:\n//\n//\n// .mat-foo {\n//   @include $mat-elevation(2);\n//\n//   &:active {\n//     @include $mat-elevation(8);\n//   }\n// }\n//\n// <div id=\"external-card\" class=\"mat-elevation-z2\"><p>Some content</p></div>\n//\n// For an explanation of the design behind how elevation is implemented, see the design doc at\n// https://goo.gl/Kq0k9Z.\n\n// Colors for umbra, penumbra, and ambient shadows. As described in the design doc, each elevation\n// level is created using a set of 3 shadow values, one for umbra (the shadow representing the\n// space completely obscured by an object relative to its light source), one for penumbra (the\n// space partially obscured by an object), and one for ambient (the space which contains the object\n// itself). For a further explanation of these terms and their meanings, see\n// https://en.wikipedia.org/wiki/Umbra,_penumbra_and_antumbra.\n\n// Maps for the different shadow sets and their values within each z-space. These values were\n// created by taking a few reference shadow sets created by Google's Designers and interpolating\n// all of the values between them.\n\n@function _get-umbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.2), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 2px 1px -1px #{$shadow-color}',\n    2: '0px 3px 1px -2px #{$shadow-color}',\n    3: '0px 3px 3px -2px #{$shadow-color}',\n    4: '0px 2px 4px -1px #{$shadow-color}',\n    5: '0px 3px 5px -1px #{$shadow-color}',\n    6: '0px 3px 5px -1px #{$shadow-color}',\n    7: '0px 4px 5px -2px #{$shadow-color}',\n    8: '0px 5px 5px -3px #{$shadow-color}',\n    9: '0px 5px 6px -3px #{$shadow-color}',\n    10: '0px 6px 6px -3px #{$shadow-color}',\n    11: '0px 6px 7px -4px #{$shadow-color}',\n    12: '0px 7px 8px -4px #{$shadow-color}',\n    13: '0px 7px 8px -4px #{$shadow-color}',\n    14: '0px 7px 9px -4px #{$shadow-color}',\n    15: '0px 8px 9px -5px #{$shadow-color}',\n    16: '0px 8px 10px -5px #{$shadow-color}',\n    17: '0px 8px 11px -5px #{$shadow-color}',\n    18: '0px 9px 11px -5px #{$shadow-color}',\n    19: '0px 9px 12px -6px #{$shadow-color}',\n    20: '0px 10px 13px -6px #{$shadow-color}',\n    21: '0px 10px 13px -6px #{$shadow-color}',\n    22: '0px 10px 14px -6px #{$shadow-color}',\n    23: '0px 11px 14px -7px #{$shadow-color}',\n    24: '0px 11px 15px -7px #{$shadow-color}'\n  );\n}\n\n@function _get-penumbra-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.14), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 1px 0px #{$shadow-color}',\n    2: '0px 2px 2px 0px #{$shadow-color}',\n    3: '0px 3px 4px 0px #{$shadow-color}',\n    4: '0px 4px 5px 0px #{$shadow-color}',\n    5: '0px 5px 8px 0px #{$shadow-color}',\n    6: '0px 6px 10px 0px #{$shadow-color}',\n    7: '0px 7px 10px 1px #{$shadow-color}',\n    8: '0px 8px 10px 1px #{$shadow-color}',\n    9: '0px 9px 12px 1px #{$shadow-color}',\n    10: '0px 10px 14px 1px #{$shadow-color}',\n    11: '0px 11px 15px 1px #{$shadow-color}',\n    12: '0px 12px 17px 2px #{$shadow-color}',\n    13: '0px 13px 19px 2px #{$shadow-color}',\n    14: '0px 14px 21px 2px #{$shadow-color}',\n    15: '0px 15px 22px 2px #{$shadow-color}',\n    16: '0px 16px 24px 2px #{$shadow-color}',\n    17: '0px 17px 26px 2px #{$shadow-color}',\n    18: '0px 18px 28px 2px #{$shadow-color}',\n    19: '0px 19px 29px 2px #{$shadow-color}',\n    20: '0px 20px 31px 3px #{$shadow-color}',\n    21: '0px 21px 33px 3px #{$shadow-color}',\n    22: '0px 22px 35px 3px #{$shadow-color}',\n    23: '0px 23px 36px 3px #{$shadow-color}',\n    24: '0px 24px 38px 3px #{$shadow-color}'\n  );\n}\n\n@function _get-ambient-map($color, $opacity) {\n  $shadow-color: if(type-of($color) == color, rgba($color, $opacity * 0.12), $color);\n\n  @return (\n    0: '0px 0px 0px 0px #{$shadow-color}',\n    1: '0px 1px 3px 0px #{$shadow-color}',\n    2: '0px 1px 5px 0px #{$shadow-color}',\n    3: '0px 1px 8px 0px #{$shadow-color}',\n    4: '0px 1px 10px 0px #{$shadow-color}',\n    5: '0px 1px 14px 0px #{$shadow-color}',\n    6: '0px 1px 18px 0px #{$shadow-color}',\n    7: '0px 2px 16px 1px #{$shadow-color}',\n    8: '0px 3px 14px 2px #{$shadow-color}',\n    9: '0px 3px 16px 2px #{$shadow-color}',\n    10: '0px 4px 18px 3px #{$shadow-color}',\n    11: '0px 4px 20px 3px #{$shadow-color}',\n    12: '0px 5px 22px 4px #{$shadow-color}',\n    13: '0px 5px 24px 4px #{$shadow-color}',\n    14: '0px 5px 26px 4px #{$shadow-color}',\n    15: '0px 6px 28px 5px #{$shadow-color}',\n    16: '0px 6px 30px 5px #{$shadow-color}',\n    17: '0px 6px 32px 5px #{$shadow-color}',\n    18: '0px 7px 34px 6px #{$shadow-color}',\n    19: '0px 7px 36px 6px #{$shadow-color}',\n    20: '0px 8px 38px 7px #{$shadow-color}',\n    21: '0px 8px 40px 7px #{$shadow-color}',\n    22: '0px 8px 42px 7px #{$shadow-color}',\n    23: '0px 9px 44px 8px #{$shadow-color}',\n    24: '0px 9px 46px 8px #{$shadow-color}'\n  );\n}\n\n// The default duration value for elevation transitions.\n$mat-elevation-transition-duration: 280ms !default;\n\n// The default easing value for elevation transitions.\n$mat-elevation-transition-timing-function: $mat-fast-out-slow-in-timing-function;\n\n// The default color for elevation shadows.\n$mat-elevation-color: black !default;\n\n// The default opacity scaling value for elevation shadows.\n$mat-elevation-opacity: 1 !default;\n\n// Prefix for elevation-related selectors.\n$mat-elevation-prefix: 'mat-elevation-z';\n\n// Applies the correct css rules to an element to give it the elevation specified by $zValue.\n// The $zValue must be between 0 and 24.\n@mixin mat-elevation($zValue, $color: $mat-elevation-color, $opacity: $mat-elevation-opacity) {\n  @if type-of($zValue) != number or not unitless($zValue) {\n    @error '$zValue must be a unitless number';\n  }\n  @if $zValue < 0 or $zValue > 24 {\n    @error '$zValue must be between 0 and 24';\n  }\n\n  box-shadow: #{map-get(_get-umbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-penumbra-map($color, $opacity), $zValue)},\n              #{map-get(_get-ambient-map($color, $opacity), $zValue)};\n}\n\n// Applies the elevation to an element in a manner that allows\n// consumers to override it via the Material elevation classes.\n@mixin mat-overridable-elevation(\n    $zValue,\n    $color: $mat-elevation-color,\n    $opacity: $mat-elevation-opacity) {\n  &:not([class*='#{$mat-elevation-prefix}']) {\n    @include mat-elevation($zValue, $color, $opacity);\n  }\n}\n\n// Returns a string that can be used as the value for a transition property for elevation.\n// Calling this function directly is useful in situations where a component needs to transition\n// more than one property.\n//\n// .foo {\n//   transition: mat-elevation-transition-property-value(), opacity 100ms ease;\n// }\n@function mat-elevation-transition-property-value(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  @return box-shadow #{$duration} #{$easing};\n}\n\n// Applies the correct css rules needed to have an element transition between elevations.\n// This mixin should be applied to elements whose elevation values will change depending on their\n// context (e.g. when active or disabled).\n//\n// NOTE(traviskaufman): Both this mixin and the above function use default parameters so they can\n// be used in the same way by clients.\n@mixin mat-elevation-transition(\n    $duration: $mat-elevation-transition-duration,\n    $easing: $mat-elevation-transition-timing-function) {\n  transition: mat-elevation-transition-property-value($duration, $easing);\n}\n\n\n@mixin mat-private-theme-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n@mixin mat-private-theme-overridable-elevation($zValue, $config, $opacity: $mat-elevation-opacity) {\n  $foreground: map-get($config, foreground);\n  $elevation-color: map-get($foreground, elevation);\n  $elevation-color-or-default: if($elevation-color == null, $mat-elevation-color, $elevation-color);\n\n  @include mat-overridable-elevation($zValue, $elevation-color-or-default, $opacity);\n}\n\n// If the mat-animation-noop class is present on the components root element,\n// prevent non css animations from running.\n// NOTE: Currently this mixin should only be used with components that do not\n// have any projected content.\n@mixin mat-private-animation-noop() {\n  // @at-root is used to steps outside of the hierarchy of the scss rules. This is\n  // done to allow a class to be added to be added to base of the scss nesting\n  // context.\n  // For example:\n  // .my-root {\n  //   .my-subclass {\n  //      @include mat-private-animation-noop();\n  //    }\n  // }\n  // results in:\n  // ._mat-animation-noopable.my-root .my-subclass { ... }\n  @at-root ._mat-animation-noopable#{&} {\n    transition: none;\n    animation: none;\n    @content;\n  }\n}\n\n// Color palettes from the Material Design spec.\n// See https://material.io/design/color/\n//\n// Contrast colors are hard-coded because it is too difficult (probably impossible) to\n// calculate them. These contrast colors are pulled from the public Material Design spec swatches.\n// While the contrast colors in the spec are not prescriptive, we use them for convenience.\n\n\n// @deprecated renamed to $dark-primary-text.\n// @breaking-change 8.0.0\n$black-87-opacity: rgba(black, 0.87);\n// @deprecated renamed to $light-primary-text.\n// @breaking-change 8.0.0\n$white-87-opacity: rgba(white, 0.87);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-12-opacity: rgba(black, 0.12);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-12-opacity: rgba(white, 0.12);\n// @deprecated use $dark-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$black-6-opacity: rgba(black, 0.06);\n// @deprecated use $light-[secondary-text,disabled-text,dividers,focused] instead.\n// @breaking-change 8.0.0\n$white-6-opacity: rgba(white, 0.06);\n\n$dark-primary-text: rgba(black, 0.87);\n$dark-secondary-text: rgba(black, 0.54);\n$dark-disabled-text: rgba(black, 0.38);\n$dark-dividers: rgba(black, 0.12);\n$dark-focused: rgba(black, 0.12);\n$light-primary-text: white;\n$light-secondary-text: rgba(white, 0.7);\n$light-disabled-text: rgba(white, 0.5);\n$light-dividers: rgba(white, 0.12);\n$light-focused: rgba(white, 0.12);\n\n$mat-red: (\n  50: #ffebee,\n  100: #ffcdd2,\n  200: #ef9a9a,\n  300: #e57373,\n  400: #ef5350,\n  500: #f44336,\n  600: #e53935,\n  700: #d32f2f,\n  800: #c62828,\n  900: #b71c1c,\n  A100: #ff8a80,\n  A200: #ff5252,\n  A400: #ff1744,\n  A700: #d50000,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-pink: (\n  50: #fce4ec,\n  100: #f8bbd0,\n  200: #f48fb1,\n  300: #f06292,\n  400: #ec407a,\n  500: #e91e63,\n  600: #d81b60,\n  700: #c2185b,\n  800: #ad1457,\n  900: #880e4f,\n  A100: #ff80ab,\n  A200: #ff4081,\n  A400: #f50057,\n  A700: #c51162,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-purple: (\n  50: #f3e5f5,\n  100: #e1bee7,\n  200: #ce93d8,\n  300: #ba68c8,\n  400: #ab47bc,\n  500: #9c27b0,\n  600: #8e24aa,\n  700: #7b1fa2,\n  800: #6a1b9a,\n  900: #4a148c,\n  A100: #ea80fc,\n  A200: #e040fb,\n  A400: #d500f9,\n  A700: #aa00ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-deep-purple: (\n  50: #ede7f6,\n  100: #d1c4e9,\n  200: #b39ddb,\n  300: #9575cd,\n  400: #7e57c2,\n  500: #673ab7,\n  600: #5e35b1,\n  700: #512da8,\n  800: #4527a0,\n  900: #311b92,\n  A100: #b388ff,\n  A200: #7c4dff,\n  A400: #651fff,\n  A700: #6200ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-indigo: (\n  50: #e8eaf6,\n  100: #c5cae9,\n  200: #9fa8da,\n  300: #7986cb,\n  400: #5c6bc0,\n  500: #3f51b5,\n  600: #3949ab,\n  700: #303f9f,\n  800: #283593,\n  900: #1a237e,\n  A100: #8c9eff,\n  A200: #536dfe,\n  A400: #3d5afe,\n  A700: #304ffe,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-blue: (\n  50: #e3f2fd,\n  100: #bbdefb,\n  200: #90caf9,\n  300: #64b5f6,\n  400: #42a5f5,\n  500: #2196f3,\n  600: #1e88e5,\n  700: #1976d2,\n  800: #1565c0,\n  900: #0d47a1,\n  A100: #82b1ff,\n  A200: #448aff,\n  A400: #2979ff,\n  A700: #2962ff,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $light-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-light-blue: (\n  50: #e1f5fe,\n  100: #b3e5fc,\n  200: #81d4fa,\n  300: #4fc3f7,\n  400: #29b6f6,\n  500: #03a9f4,\n  600: #039be5,\n  700: #0288d1,\n  800: #0277bd,\n  900: #01579b,\n  A100: #80d8ff,\n  A200: #40c4ff,\n  A400: #00b0ff,\n  A700: #0091ea,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-cyan: (\n  50: #e0f7fa,\n  100: #b2ebf2,\n  200: #80deea,\n  300: #4dd0e1,\n  400: #26c6da,\n  500: #00bcd4,\n  600: #00acc1,\n  700: #0097a7,\n  800: #00838f,\n  900: #006064,\n  A100: #84ffff,\n  A200: #18ffff,\n  A400: #00e5ff,\n  A700: #00b8d4,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-teal: (\n  50: #e0f2f1,\n  100: #b2dfdb,\n  200: #80cbc4,\n  300: #4db6ac,\n  400: #26a69a,\n  500: #009688,\n  600: #00897b,\n  700: #00796b,\n  800: #00695c,\n  900: #004d40,\n  A100: #a7ffeb,\n  A200: #64ffda,\n  A400: #1de9b6,\n  A700: #00bfa5,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-green: (\n  50: #e8f5e9,\n  100: #c8e6c9,\n  200: #a5d6a7,\n  300: #81c784,\n  400: #66bb6a,\n  500: #4caf50,\n  600: #43a047,\n  700: #388e3c,\n  800: #2e7d32,\n  900: #1b5e20,\n  A100: #b9f6ca,\n  A200: #69f0ae,\n  A400: #00e676,\n  A700: #00c853,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-light-green: (\n  50: #f1f8e9,\n  100: #dcedc8,\n  200: #c5e1a5,\n  300: #aed581,\n  400: #9ccc65,\n  500: #8bc34a,\n  600: #7cb342,\n  700: #689f38,\n  800: #558b2f,\n  900: #33691e,\n  A100: #ccff90,\n  A200: #b2ff59,\n  A400: #76ff03,\n  A700: #64dd17,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-lime: (\n  50: #f9fbe7,\n  100: #f0f4c3,\n  200: #e6ee9c,\n  300: #dce775,\n  400: #d4e157,\n  500: #cddc39,\n  600: #c0ca33,\n  700: #afb42b,\n  800: #9e9d24,\n  900: #827717,\n  A100: #f4ff81,\n  A200: #eeff41,\n  A400: #c6ff00,\n  A700: #aeea00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-yellow: (\n  50: #fffde7,\n  100: #fff9c4,\n  200: #fff59d,\n  300: #fff176,\n  400: #ffee58,\n  500: #ffeb3b,\n  600: #fdd835,\n  700: #fbc02d,\n  800: #f9a825,\n  900: #f57f17,\n  A100: #ffff8d,\n  A200: #ffff00,\n  A400: #ffea00,\n  A700: #ffd600,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-amber: (\n  50: #fff8e1,\n  100: #ffecb3,\n  200: #ffe082,\n  300: #ffd54f,\n  400: #ffca28,\n  500: #ffc107,\n  600: #ffb300,\n  700: #ffa000,\n  800: #ff8f00,\n  900: #ff6f00,\n  A100: #ffe57f,\n  A200: #ffd740,\n  A400: #ffc400,\n  A700: #ffab00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $dark-primary-text,\n    900: $dark-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $dark-primary-text,\n  )\n);\n\n$mat-orange: (\n  50: #fff3e0,\n  100: #ffe0b2,\n  200: #ffcc80,\n  300: #ffb74d,\n  400: #ffa726,\n  500: #ff9800,\n  600: #fb8c00,\n  700: #f57c00,\n  800: #ef6c00,\n  900: #e65100,\n  A100: #ffd180,\n  A200: #ffab40,\n  A400: #ff9100,\n  A700: #ff6d00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $dark-primary-text,\n    700: $dark-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: black,\n  )\n);\n\n$mat-deep-orange: (\n  50: #fbe9e7,\n  100: #ffccbc,\n  200: #ffab91,\n  300: #ff8a65,\n  400: #ff7043,\n  500: #ff5722,\n  600: #f4511e,\n  700: #e64a19,\n  800: #d84315,\n  900: #bf360c,\n  A100: #ff9e80,\n  A200: #ff6e40,\n  A400: #ff3d00,\n  A700: #dd2c00,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-brown: (\n  50: #efebe9,\n  100: #d7ccc8,\n  200: #bcaaa4,\n  300: #a1887f,\n  400: #8d6e63,\n  500: #795548,\n  600: #6d4c41,\n  700: #5d4037,\n  800: #4e342e,\n  900: #3e2723,\n  A100: #d7ccc8,\n  A200: #bcaaa4,\n  A400: #8d6e63,\n  A700: #5d4037,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $light-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n$mat-grey: (\n  50: #fafafa,\n  100: #f5f5f5,\n  200: #eeeeee,\n  300: #e0e0e0,\n  400: #bdbdbd,\n  500: #9e9e9e,\n  600: #757575,\n  700: #616161,\n  800: #424242,\n  900: #212121,\n  A100: #ffffff,\n  A200: #eeeeee,\n  A400: #bdbdbd,\n  A700: #616161,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $dark-primary-text,\n    500: $dark-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $dark-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-gray: $mat-grey;\n\n$mat-blue-grey: (\n  50: #eceff1,\n  100: #cfd8dc,\n  200: #b0bec5,\n  300: #90a4ae,\n  400: #78909c,\n  500: #607d8b,\n  600: #546e7a,\n  700: #455a64,\n  800: #37474f,\n  900: #263238,\n  A100: #cfd8dc,\n  A200: #b0bec5,\n  A400: #78909c,\n  A700: #455a64,\n  contrast: (\n    50: $dark-primary-text,\n    100: $dark-primary-text,\n    200: $dark-primary-text,\n    300: $dark-primary-text,\n    400: $light-primary-text,\n    500: $light-primary-text,\n    600: $light-primary-text,\n    700: $light-primary-text,\n    800: $light-primary-text,\n    900: $light-primary-text,\n    A100: $dark-primary-text,\n    A200: $dark-primary-text,\n    A400: $light-primary-text,\n    A700: $light-primary-text,\n  )\n);\n\n// Alias for alternate spelling.\n$mat-blue-gray: $mat-blue-grey;\n\n\n// Background palette for light themes.\n$mat-light-theme-background: (\n  status-bar: map-get($mat-grey, 300),\n  app-bar:    map-get($mat-grey, 100),\n  background: map-get($mat-grey, 50),\n  hover:      rgba(black, 0.04), // TODO(kara): check style with Material Design UX\n  card:       white,\n  dialog:     white,\n  disabled-button: rgba(black, 0.12),\n  raised-button: white,\n  focused-button: $dark-focused,\n  selected-button: map-get($mat-grey, 300),\n  selected-disabled-button: map-get($mat-grey, 400),\n  disabled-button-toggle: map-get($mat-grey, 200),\n  unselected-chip: map-get($mat-grey, 300),\n  disabled-list-option: map-get($mat-grey, 200),\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Background palette for dark themes.\n$mat-dark-theme-background: (\n  status-bar: black,\n  app-bar:    map-get($mat-grey, 900),\n  background: #303030,\n  hover:      rgba(white, 0.04), // TODO(kara): check style with Material Design UX\n  card:       map-get($mat-grey, 800),\n  dialog:     map-get($mat-grey, 800),\n  disabled-button: rgba(white, 0.12),\n  raised-button: map-get($mat-grey, 800),\n  focused-button: $light-focused,\n  selected-button: map-get($mat-grey, 900),\n  selected-disabled-button: map-get($mat-grey, 800),\n  disabled-button-toggle: black,\n  unselected-chip: map-get($mat-grey, 700),\n  disabled-list-option: black,\n  tooltip: map-get($mat-grey, 700),\n);\n\n// Foreground palette for light themes.\n$mat-light-theme-foreground: (\n  base:              black,\n  divider:           $dark-dividers,\n  dividers:          $dark-dividers,\n  disabled:          $dark-disabled-text,\n  disabled-button:   rgba(black, 0.26),\n  disabled-text:     $dark-disabled-text,\n  elevation:         black,\n  hint-text:         $dark-disabled-text,\n  secondary-text:    $dark-secondary-text,\n  icon:              rgba(black, 0.54),\n  icons:             rgba(black, 0.54),\n  text:              rgba(black, 0.87),\n  slider-min:        rgba(black, 0.87),\n  slider-off:        rgba(black, 0.26),\n  slider-off-active: rgba(black, 0.38),\n);\n\n// Foreground palette for dark themes.\n$mat-dark-theme-foreground: (\n  base:              white,\n  divider:           $light-dividers,\n  dividers:          $light-dividers,\n  disabled:          $light-disabled-text,\n  disabled-button:   rgba(white, 0.3),\n  disabled-text:     $light-disabled-text,\n  elevation:         black,\n  hint-text:         $light-disabled-text,\n  secondary-text:    $light-secondary-text,\n  icon:              white,\n  icons:             white,\n  text:              white,\n  slider-min:        white,\n  slider-off:        rgba(white, 0.3),\n  slider-off-active: rgba(white, 0.3),\n);\n\n// Note that this file is called `private`, because the APIs in it aren't public yet.\n// Once they're made available, the code should be moved out into an `index.scss`.\n\n// Taken from mat-density with small modifications to not rely on the new Sass module\n// system, and to support arbitrary properties in a density configuration.\n// https://github.com/material-components/material-components-web/blob/master/packages/mdc-density\n\n$_mat-density-interval: 4px !default;\n$_mat-density-minimum-scale: minimum !default;\n$_mat-density-maximum-scale: maximum !default;\n$_mat-density-supported-scales: (default, minimum, maximum) !default;\n$_mat-density-default-scale: 0 !default;\n\n// Whether density should be generated at root. This will be temporarily set to `true`\n// whenever density styles for legacy themes are generated.\n$mat-private-density-generate-at-root: false;\n// Whether density styles should be generated. This will be temporarily set to `false` if\n// duplicate density styles for a legacy theme would be generated. For legacy themes,\n// we always generate the default density **only once** at root.\n$mat-private-density-generate-styles: true;\n\n// Mixin that can be used to wrap density styles of given components. The mixin will\n// move the density styles to root if the `$mat-private-density-generate-at-root` global variable\n// is set. If `$mat-private-density-generate-styles` is set to `false`, generation of density\n// styles wrapped in this mixin is skipped. This mixin exists to improve backwards compatibility\n// of the new theming API where density styles are included as part of themes. Previously,\n// density styles of components were part of their base styles. With the new API, they are\n// part of the theming system. The `<..>-theme` mixins generate density by default unless\n// the density configuration is explicitly specified as per new API. This means, that projects\n// using `<..>-theme` mixins for separate themes (like `.dark-theme`) will cause duplicate\n// density styles. This is breaking as it increases specificity of density styles. This mixin\n// provides an API to control generation of density styles so that we can ensure they are only\n// created *once* and at root.\n@mixin mat-private-density-legacy-compatibility() {\n  @if $mat-private-density-generate-styles and $mat-private-density-generate-at-root {\n    @at-root {\n      @content;\n    }\n  }\n  @else if $mat-private-density-generate-styles {\n    @content;\n  }\n}\n\n@function mat-private-density-prop-value($density-config, $density-scale, $property-name) {\n  @if (type-of($density-scale) == 'string' and\n      index($list: $_mat-density-supported-scales, $value: $density-scale) == null) {\n    @error 'mat-density: Supported density scales #{$_mat-density-supported-scales}, '  +\n      'but received #{$density-scale}.';\n  }\n\n  $value: null;\n  $property-scale-map: map-get($density-config, $property-name);\n\n  @if map-has-key($property-scale-map, $density-scale) {\n    $value: map-get($property-scale-map, $density-scale);\n  }\n  @else {\n    $value: map-get($property-scale-map, default) + $density-scale * $_mat-density-interval;\n  }\n\n  $min-value: map-get($property-scale-map, $_mat-density-minimum-scale);\n  $max-value: map-get($property-scale-map, $_mat-density-maximum-scale);\n\n  @if ($value < $min-value or $value > $max-value) {\n    @error 'mat-density: #{$property-name} must be between #{$min-value} and ' +\n      '#{$max-value} (inclusive), but received #{$value}.';\n  }\n\n  @return $value;\n}\n\n\n// Whether duplication warnings should be disabled. Warnings enabled by default.\n$mat-theme-ignore-duplication-warnings: false !default;\n\n// Whether density should be generated by default.\n$_mat-theme-generate-default-density: true !default;\n\n// Warning that will be printed if duplicated styles are generated by a theme.\n$_mat-theme-duplicate-warning: 'Read more about how style duplication can be avoided in a ' +\n  'dedicated guide. https://github.com/angular/components/blob/master/guides/duplicate-theming-styles.md';\n\n// These variable are not intended to be overridden externally. They use `!default` to\n// avoid being reset every time this file is imported.\n$_mat-theme-emitted-color: () !default;\n$_mat-theme-emitted-typography: () !default;\n$_mat-theme-emitted-density: () !default;\n\n// For a given hue in a palette, return the contrast color from the map of contrast palettes.\n// @param $palette\n// @param $hue\n@function mat-contrast($palette, $hue) {\n  @return map-get(map-get($palette, contrast), $hue);\n}\n\n\n// Creates a map of hues to colors for a theme. This is used to define a theme palette in terms\n// of the Material Design hues.\n// @param $base-palette\n// @param $default\n// @param $lighter\n// @param $darker\n// @param $text\n@function mat-palette($base-palette, $default: 500, $lighter: 100, $darker: 700, $text: $default) {\n  $result: map-merge($base-palette, (\n    default: map-get($base-palette, $default),\n    lighter: map-get($base-palette, $lighter),\n    darker: map-get($base-palette, $darker),\n    text: map-get($base-palette, $text),\n\n    default-contrast: mat-contrast($base-palette, $default),\n    lighter-contrast: mat-contrast($base-palette, $lighter),\n    darker-contrast: mat-contrast($base-palette, $darker)\n  ));\n\n  // For each hue in the palette, add a \"-contrast\" color to the map.\n  @each $hue, $color in $base-palette {\n    $result: map-merge($result, (\n      '#{$hue}-contrast': mat-contrast($base-palette, $hue)\n    ));\n  }\n\n  @return $result;\n}\n\n\n// Gets a color from a theme palette (the output of mat-palette).\n// The hue can be one of the standard values (500, A400, etc.), one of the three preconfigured\n// hues (default, lighter, darker), or any of the aforementioned prefixed with \"-contrast\".\n//\n// @param $palette The theme palette (output of mat-palette).\n// @param $hue The hue from the palette to use. If this is a value between 0 and 1, it will\n//     be treated as opacity.\n// @param $opacity The alpha channel value for the color.\n@function mat-color($palette, $hue: default, $opacity: null) {\n  // If hueKey is a number between zero and one, then it actually contains an\n  // opacity value, so recall this function with the default hue and that given opacity.\n  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {\n    @return mat-color($palette, default, $hue);\n  }\n\n  $color: map-get($palette, $hue);\n\n  @if (type-of($color) != color) {\n    // If the $color resolved to something different from a color (e.g. a CSS variable),\n    // we can't apply the opacity anyway so we return the value as is, otherwise Sass can\n    // throw an error or output something invalid.\n    @return $color;\n  }\n\n  @return rgba($color, if($opacity == null, opacity($color), $opacity));\n}\n\n// Validates the specified theme by ensuring that the optional color config defines\n// a primary, accent and warn palette. Returns the theme if no failures were found.\n@function _mat-validate-theme($theme) {\n  @if map-get($theme, color) {\n    $color: map-get($theme, color);\n    @if not map-get($color, primary) {\n      @error 'Theme does not define a valid \"primary\" palette.';\n    }\n    @else if not map-get($color, accent) {\n      @error 'Theme does not define a valid \"accent\" palette.';\n    }\n    @else if not map-get($color, warn) {\n      @error 'Theme does not define a valid \"warn\" palette.';\n    }\n  }\n  @return $theme;\n}\n\n// Creates a light-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-light-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: false,\n    foreground: $mat-light-theme-foreground,\n    background: $mat-light-theme-background,\n  );\n}\n\n// Creates a dark-themed color configuration from the specified\n// primary, accent and warn palettes.\n@function _mat-create-dark-color-config($primary, $accent, $warn: null) {\n  @return (\n    primary: $primary,\n    accent: $accent,\n    warn: if($warn != null, $warn, mat-palette($mat-red)),\n    is-dark: true,\n    foreground: $mat-dark-theme-foreground,\n    background: $mat-dark-theme-background,\n  );\n}\n\n// Creates a container object for a light theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-light-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a light-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-light-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual light-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-light-color-config($primary, $accent, $warn)));\n  }\n  @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n// Creates a container object for a dark theme to be given to individual component theme mixins.\n// TODO: Remove legacy API and rename `$primary` to `$config`. Currently it cannot be renamed\n// as it would break existing apps that set the parameter by name.\n@function mat-dark-theme($primary, $accent: null, $warn: mat-palette($mat-red)) {\n  // This function creates a container object for the individual component theme mixins. Consumers\n  // can construct such an object by calling this function, or by building the object manually.\n  // There are two possible ways to invoke this function in order to create such an object:\n  //\n  //    (1) Passing in a map that holds optional configurations for individual parts of the\n  //        theming system. For `color` configurations, the function only expects the palettes\n  //        for `primary` and `accent` (and optionally `warn`). The function will expand the\n  //        shorthand into an actual configuration that can be consumed in `-color` mixins.\n  //    (2) Legacy pattern: Passing in the palettes as parameters. This is not as flexible\n  //        as passing in a configuration map because only the `color` system can be configured.\n  //\n  // If the legacy pattern is used, we generate a container object only with a dark-themed\n  // configuration for the `color` theming part.\n  @if $accent != null {\n    @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme((\n      _is-legacy-theme: true,\n      color: _mat-create-dark-color-config($primary, $accent, $warn),\n    )));\n  }\n  // If the map pattern is used (1), we just pass-through the configurations for individual\n  // parts of the theming system, but update the `color` configuration if set. As explained\n  // above, the color shorthand will be expanded to an actual dark-themed color configuration.\n  $result: $primary;\n  @if map-get($primary, color) {\n    $color-settings: map-get($primary, color);\n    $primary: map-get($color-settings, primary);\n    $accent: map-get($color-settings, accent);\n    $warn: map-get($color-settings, warn);\n    $result: map-merge($result, (color: _mat-create-dark-color-config($primary, $accent, $warn)));\n  }\n  @return mat-private-create-backwards-compatibility-theme(_mat-validate-theme($result));\n}\n\n/// Gets the color configuration from the given theme or configuration.\n@function mat-get-color-config($theme, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme) {\n    @return $theme;\n  }\n  // If the theme has been constructed through the legacy theming API, we use the theme object\n  // as color configuration instead of the dedicated `color` property. We do this because for\n  // backwards compatibility, we copied the color configuration from `$theme.color` to `$theme`.\n  // Hence developers could customize the colors at top-level and want to respect these changes\n  // TODO: Remove when legacy theming API is removed.\n  @if mat-private-is-legacy-constructed-theme($theme) {\n    @return $theme;\n  }\n  @if map-has-key($theme, color) {\n    @return map-get($theme, color);\n  }\n  @return $default;\n}\n\n/// Gets the density configuration from the given theme or configuration.\n@function mat-get-density-config($theme-or-config, $default: 0) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default density config.\n  @if map-has-key($theme-or-config, density) {\n    @return map-get($theme-or-config, density);\n  }\n  @return $default;\n}\n\n/// Gets the typography configuration from the given theme or configuration.\n/// For backwards compatibility, typography is not included by default.\n@function mat-get-typography-config($theme-or-config, $default: null) {\n  // If a configuration has been passed, return the config directly.\n  @if not mat-private-is-theme-object($theme-or-config) {\n    @return $theme-or-config;\n  }\n  // In case a theme has been passed, extract the configuration if present,\n  // or fall back to the default typography config.\n  @if (map-has-key($theme-or-config, typography)) {\n    @return map-get($theme-or-config, typography);\n  }\n  @return $default;\n}\n\n\n//\n// Private APIs\n//\n\n// Checks if configurations that have been declared in the given theme have been generated\n// before. If so, warnings will be reported. This should notify developers in case duplicate\n// styles are accidentally generated due to wrong usage of the all-theme mixins.\n//\n// Additionally, this mixin controls the default value for the density configuration. By\n// default, density styles are generated at scale zero. If the same density styles would be\n// generated a second time though, the default value will change to avoid duplicate styles.\n//\n// The mixin keeps track of all configurations in a list that is scoped to the specified\n// id. This is necessary because a given theme can be passed to multiple disjoint theme mixins\n// (e.g. `angular-material-theme` and `angular-material-mdc-theme`) without causing any\n// style duplication.\n@mixin mat-private-check-duplicate-theme-styles($theme-or-color-config, $id) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  $color-config: mat-get-color-config($theme);\n  $density-config: mat-get-density-config($theme);\n  $typography-config: mat-get-typography-config($theme);\n  // Lists of previous `color`, `density` and `typography` configurations.\n  $previous-color: map-get($_mat-theme-emitted-color, $id) or ();\n  $previous-typography: map-get($_mat-theme-emitted-typography, $id) or ();\n  $previous-density: map-get($_mat-theme-emitted-density, $id) or ();\n  // Whether duplicate legacy density styles would be generated.\n  $duplicate-legacy-density: false;\n\n  // Check if the color configuration has been generated before.\n  @if $color-config != null {\n    @if index($previous-color, $color-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same color styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-color: append($previous-color, $color-config);\n  }\n\n  // Check if the typography configuration has been generated before.\n  @if $typography-config != null {\n    @if index($previous-typography, $typography-config) != null and\n        not $mat-theme-ignore-duplication-warnings {\n      @warn 'The same typography styles are generated multiple times. ' +\n          $_mat-theme-duplicate-warning;\n    }\n    $previous-typography: append($previous-typography, $typography-config);\n  }\n\n  // Check if the density configuration has been generated before.\n  @if $density-config != null {\n    @if index($previous-density, $density-config) != null {\n      // Only report a warning if density styles would be duplicated for non-legacy theme\n      // definitions. For legacy themes, we have compatibility logic that avoids duplication\n      // of default density styles. We don't want to report a warning in those cases.\n      @if mat-private-is-legacy-constructed-theme($theme) {\n        $duplicate-legacy-density: true;\n      }\n      @else if not $mat-theme-ignore-duplication-warnings {\n        @warn 'The same density styles are generated multiple times. ' +\n           $_mat-theme-duplicate-warning;\n      }\n    }\n    $previous-density: append($previous-density, $density-config);\n  }\n\n  $_mat-theme-emitted-color: map-merge(\n      $_mat-theme-emitted-color, ($id: $previous-color)) !global;\n  $_mat-theme-emitted-density: map-merge(\n      $_mat-theme-emitted-density, ($id: $previous-density)) !global;\n  $_mat-theme-emitted-typography: map-merge(\n      $_mat-theme-emitted-typography, ($id: $previous-typography)) !global;\n\n  // Optionally, consumers of this mixin can wrap contents inside so that nested\n  // duplicate style checks do not report another warning. e.g. if developers include\n  // the `angular-material-theme` mixin twice, only the top-level duplicate styles check\n  // should report a warning. Not all individual components should report a warning too.\n  $orig-mat-theme-ignore-duplication-warnings: $mat-theme-ignore-duplication-warnings;\n  $mat-theme-ignore-duplication-warnings: true !global;\n\n  // If duplicate default density styles would be generated for a legacy constructed theme,\n  // we adjust the density generation so that no density styles are generated by default.\n  // If no default density styles have been generated yet, we ensure that the styles\n  // are generated at root. For legacy themes our goal is to generate default density\n  // styles **once** and at root. This matches the old behavior where density styles were\n  // part of the base component styles (that did not use view encapsulation).\n  // TODO: Remove this compatibility logic when the legacy theming API is removed.\n  $mat-private-density-generate-at-root: mat-private-is-legacy-constructed-theme($theme) !global;\n  $mat-private-density-generate-styles: not $duplicate-legacy-density !global;\n\n  @content;\n  $mat-theme-ignore-duplication-warnings: $orig-mat-theme-ignore-duplication-warnings !global;\n\n  $mat-private-density-generate-at-root: false !global;\n  $mat-private-density-generate-styles: true !global;\n}\n\n// Checks whether the given value resolves to a theme object. Theme objects are always\n// of type `map` and can optionally only specify `color`, `density` or `typography`.\n@function mat-private-is-theme-object($value) {\n  @return type-of($value) == 'map' and (\n    map-has-key($value, color) or\n    map-has-key($value, density) or\n    map-has-key($value, typography) or\n    length($value) == 0\n  );\n}\n\n// Checks whether a given value corresponds to a legacy constructed theme.\n@function mat-private-is-legacy-constructed-theme($value) {\n  @return type-of($value) == 'map' and map-get($value, '_is-legacy-theme');\n}\n\n// Creates a backwards compatible theme. Previously in Angular Material, theme objects\n// contained the color configuration directly. With the recent refactoring of the theming\n// system to allow for density and typography configurations, this is no longer the case.\n// To ensure that constructed themes which will be passed to custom theme mixins do not break,\n// we copy the color configuration and put its properties at the top-level of the theme object.\n// Here is an example of a pattern that should still work until it's officially marked as a\n// breaking change:\n//\n//    @mixin my-custom-component-theme($theme) {\n//      .my-comp {\n//        background-color: mat-color(map-get($theme, primary));\n//      }\n//    }\n//\n// Note that the `$theme.primary` key does usually not exist since the color configuration\n// is stored in `$theme.color` which contains a property for `primary`. This method copies\n// the map from `$theme.color` to `$theme` for backwards compatibility.\n@function mat-private-create-backwards-compatibility-theme($theme) {\n  @if not map-get($theme, color) {\n    @return $theme;\n  }\n  $color: map-get($theme, color);\n  @return map-merge($theme, $color);\n}\n\n// Gets the theme from the given value that is either already a theme, or a color configuration.\n// This handles the legacy case where developers pass a color configuration directly to the\n// theme mixin. Before we introduced the new pattern for constructing a theme, developers passed\n// the color configuration directly to the theme mixins. This can be still the case if developers\n// construct a theme manually and pass it to a theme. We support this for backwards compatibility.\n// TODO(devversion): remove this in the future. Constructing themes manually is rare,\n// and the code can be easily updated to the new API.\n@function mat-private-legacy-get-theme($theme-or-color-config) {\n  @if mat-private-is-theme-object($theme-or-color-config) {\n    @return $theme-or-color-config;\n  }\n  @return mat-private-create-backwards-compatibility-theme((\n    _is-legacy-theme: true,\n    color: $theme-or-color-config\n  ));\n}\n\n\n\n$mat-ripple-color-opacity: 0.1;\n\n@mixin mat-ripple() {\n\n  // The host element of an mat-ripple directive should always have a position of \"absolute\" or\n  // \"relative\" so that the ripples inside are correctly positioned relatively to the container.\n  .mat-ripple {\n    overflow: hidden;\n\n    // By default, every ripple container should have position: relative in favor of creating an\n    // easy API for developers using the MatRipple directive.\n    position: relative;\n\n    // Promote containers that have ripples to a new layer. We want to target `:not(:empty)`,\n    // because we don't want all ripple containers to have their own layer since they're used in a\n    // lot of places and the layer is only relevant while animating. Note that ideally we'd use\n    // the `contain` property here (see #13175), because `:empty` can be broken by having extra\n    // text inside the element, but it isn't very well supported yet.\n    &:not(:empty) {\n      transform: translateZ(0);\n    }\n  }\n\n  .mat-ripple.mat-ripple-unbounded {\n    overflow: visible;\n  }\n\n  .mat-ripple-element {\n    position: absolute;\n    border-radius: 50%;\n    pointer-events: none;\n\n    transition: opacity, transform 0ms cubic-bezier(0, 0, 0.2, 1);\n    transform: scale(0);\n\n    // In high contrast mode the ripple is opaque, causing it to obstruct the content.\n    @include cdk-high-contrast(active, off) {\n      display: none;\n    }\n  }\n}\n\n/* Colors for the ripple elements.*/\n@mixin mat-ripple-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $foreground-base: map-get($foreground, base);\n\n  .mat-ripple-element {\n    // If the ripple color is resolves to a color *type*, we can use it directly, otherwise\n    // (e.g. it resolves to a CSS variable) we fall back to using the color and setting an opacity.\n    @if (type-of($foreground-base) == color) {\n      background-color: rgba($foreground-base, $mat-ripple-color-opacity);\n    }\n    @else {\n      background-color: $foreground-base;\n      opacity: $mat-ripple-color-opacity;\n    }\n  }\n}\n\n@mixin mat-ripple-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-ripple') {\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-ripple-color($color);\n    }\n  }\n}\n\n\n// This mixin ensures an element spans to fill the nearest ancestor with defined positioning.\n@mixin mat-fill {\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  position: absolute;\n}\n\n\n/// Mixin that turns on strong focus indicators.\n///\n/// @example\n///   .my-app {\n///     @include mat-strong-focus-indicators($config);\n///   }\n@mixin mat-strong-focus-indicators($config: ()) {\n  // Default focus indicator config.\n  $default-config: (\n    border-style: solid,\n    border-width: 3px,\n    border-radius: 4px,\n  );\n\n  // Merge default config with user config.\n  $config: map-merge($default-config, $config);\n  $border-style: map-get($config, border-style);\n  $border-width: map-get($config, border-width);\n  $border-radius: map-get($config, border-radius);\n\n  // Base styles for focus indicators.\n  .mat-focus-indicator::before {\n    @include mat-fill();\n    box-sizing: border-box;\n    pointer-events: none;\n    border: $border-width $border-style transparent;\n    border-radius: $border-radius;\n  }\n\n  // By default, all focus indicators are flush with the bounding box of their\n  // host element. For particular elements (listed below), default inset/offset\n  // values are necessary to ensure that the focus indicator is sufficiently\n  // contrastive and renders appropriately.\n\n  .mat-focus-indicator.mat-flat-button::before,\n  .mat-focus-indicator.mat-raised-button::before,\n  .mat-focus-indicator.mat-fab::before,\n  .mat-focus-indicator.mat-mini-fab::before,\n  .mat-focus-indicator.mat-chip::before,\n  .mat-focus-indicator.mat-sort-header-container::before {\n    margin: -($border-width + 2px);\n  }\n\n  .mat-focus-indicator.mat-stroked-button::before,\n  .mat-focus-indicator.mat-calendar-body-cell-content::before {\n    margin: -($border-width + 3px);\n  }\n\n  .mat-focus-indicator.mat-tab-link::before,\n  .mat-focus-indicator.mat-tab-label::before {\n    margin: 5px;\n  }\n\n  // Render the focus indicator on focus. Defining a pseudo element's\n  // content will cause it to render.\n\n  // Checkboxes, radios, and slide toggles render focus indicators when the\n  // associated visually-hidden input is focused.\n  .mat-checkbox-input:focus ~ .mat-focus-indicator::before,\n  .mat-radio-input:focus ~ .mat-focus-indicator::before,\n  .mat-slide-toggle-input:focus ~ .mat-slide-toggle-thumb-container .mat-focus-indicator::before,\n\n  // For options, render the focus indicator when the class .mat-active\n  // is present.\n  .mat-focus-indicator.mat-option.mat-active::before,\n\n  // For calendar cells, render the focus indicator when the parent cell is\n  // focused.\n  .mat-calendar-body-cell:focus .mat-focus-indicator::before,\n\n  // For all other components, render the focus indicator on focus.\n  .mat-focus-indicator:focus::before {\n    content: '';\n  }\n}\n\n// Mixin that applies the border color for the focus indicators.\n@mixin _mat-strong-focus-indicators-border-color($color) {\n  .mat-focus-indicator::before {\n    border-color: $color;\n  }\n}\n\n@mixin mat-strong-focus-indicators-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  @include _mat-strong-focus-indicators-border-color(mat-color(map-get($config, primary)));\n}\n\n/// Mixin that sets the color of the focus indicators.\n///\n/// @param {color|map} $theme-or-color\n///   If theme, focus indicators are set to the primary color of the theme. If\n///   color, focus indicators are set to that color.\n///\n/// @example\n///   .demo-dark-theme {\n///     @include mat-strong-focus-indicators-theme($dark-theme-map);\n///   }\n///\n/// @example\n///   .demo-red-theme {\n///     @include mat-strong-focus-indicators-theme(#f00);\n///   }\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-strong-focus-indicators-theme($theme-or-color) {\n  @if type-of($theme-or-color) != 'map' {\n    @include _mat-strong-focus-indicators-border-color($theme-or-color);\n  }\n  @else {\n    $theme: mat-private-legacy-get-theme($theme-or-color);\n    @include mat-private-check-duplicate-theme-styles($theme, 'mat-strong-focus-indicators') {\n      $color: mat-get-color-config($theme);\n      @if $color != null {\n        @include mat-strong-focus-indicators-color($color);\n      }\n    }\n  }\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `mat-core`.\n@mixin mat-private-strong-focus-indicators-positioning() {\n  .mat-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n// Utility for fetching a nested value from a typography config.\n@function _mat-get-type-value($config, $level, $name) {\n  @return map-get(map-get($config, $level), $name);\n}\n\n// Gets the font size for a level inside a typography config.\n@function mat-font-size($config, $level) {\n  @return _mat-get-type-value($config, $level, font-size);\n}\n\n// Gets the line height for a level inside a typography config.\n@function mat-line-height($config, $level) {\n  @return _mat-get-type-value($config, $level, line-height);\n}\n\n// Gets the font weight for a level inside a typography config.\n@function mat-font-weight($config, $level) {\n  @return _mat-get-type-value($config, $level, font-weight);\n}\n\n// Gets the letter spacing for a level inside a typography config.\n@function mat-letter-spacing($config, $level) {\n  @return _mat-get-type-value($config, $level, letter-spacing);\n}\n\n// Gets the font-family from a typography config and removes the quotes around it.\n@function mat-font-family($config, $level: null) {\n  $font-family: map-get($config, font-family);\n\n  @if $level != null {\n    $font-family: _mat-get-type-value($config, $level, font-family);\n  }\n\n  // Guard against unquoting non-string values, because it's deprecated.\n  @return if(type-of($font-family) == string, unquote($font-family), $font-family);\n}\n\n// Outputs the shorthand `font` CSS property, based on a set of typography values. Falls back to\n// the individual properties if a value that isn't allowed in the shorthand is passed in.\n@mixin mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family) {\n  // If any of the values are set to `inherit`, we can't use the shorthand\n  // so we fall back to passing in the individual properties.\n  @if ($font-size == inherit or\n       $font-weight == inherit or\n       $line-height == inherit or\n       $font-family == inherit or\n       $font-size == null or\n       $font-weight == null or\n       $line-height == null or\n       $font-family == null) {\n\n    font-size: $font-size;\n    font-weight: $font-weight;\n    line-height: $line-height;\n    font-family: $font-family;\n  }\n  @else {\n    // Otherwise use the shorthand `font`, because it's the least amount of bytes. Note\n    // that we need to use interpolation for `font-size/line-height` in order to prevent\n    // Sass from dividing the two values.\n    font: $font-weight #{$font-size}/#{$line-height} $font-family;\n  }\n}\n\n// Converts a typography level into CSS styles.\n@mixin mat-typography-level-to-styles($config, $level) {\n  $font-size: mat-font-size($config, $level);\n  $font-weight: mat-font-weight($config, $level);\n  $line-height: mat-line-height($config, $level);\n  $font-family: mat-font-family($config, $level);\n\n  @include mat-typography-font-shorthand($font-size, $font-weight, $line-height, $font-family);\n  letter-spacing: mat-letter-spacing($config, $level);\n}\n\n\n@mixin mat-option-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-option {\n    color: mat-color($foreground, text);\n\n    &:hover:not(.mat-option-disabled),\n    &:focus:not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    // In multiple mode there is a checkbox to show that the option is selected.\n    &.mat-selected:not(.mat-option-multiple):not(.mat-option-disabled) {\n      background: mat-color($background, hover);\n    }\n\n    &.mat-active {\n      background: mat-color($background, hover);\n      color: mat-color($foreground, text);\n    }\n\n    &.mat-option-disabled {\n      color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-primary .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($primary, text);\n  }\n\n  .mat-accent .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($accent, text);\n  }\n\n  .mat-warn .mat-option.mat-selected:not(.mat-option-disabled) {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-option-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-option {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, subheading-2);\n    }\n  }\n}\n\n@mixin _mat-option-density($config-or-theme) {}\n\n@mixin mat-option-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-option') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-option-color($color);\n    }\n    @if $density != null {\n      @include _mat-option-density($density);\n    }\n    @if $typography != null {\n      @include mat-option-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-optgroup-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-optgroup-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-optgroup-disabled .mat-optgroup-label {\n    color: mat-color($foreground, hint-text);\n  }\n}\n\n@mixin mat-optgroup-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-optgroup-label {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n}\n\n@mixin _mat-optgroup-density($config-or-theme) {}\n\n@mixin mat-optgroup-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-optgroup') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-optgroup-color($color);\n    }\n    @if $density != null {\n      @include _mat-optgroup-density($density);\n    }\n    @if $typography != null {\n      @include mat-optgroup-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-pseudo-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n  $colored-box-selector: '.mat-pseudo-checkbox-checked, .mat-pseudo-checkbox-indeterminate';\n\n  .mat-pseudo-checkbox {\n    color: mat-color(map-get($config, foreground), secondary-text);\n\n    &::after {\n      color: mat-color($background, background);\n    }\n  }\n\n  .mat-pseudo-checkbox-disabled {\n    color: $disabled-color;\n  }\n\n  .mat-primary .mat-pseudo-checkbox-checked,\n  .mat-primary .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, primary));\n  }\n\n  // Default to the accent color. Note that the pseudo checkboxes are meant to inherit the\n  // theme from their parent, rather than implementing their own theming, which is why we\n  // don't attach to the `mat-*` classes. Also note that this needs to be below `.mat-primary`\n  // in order to allow for the color to be overwritten if the checkbox is inside a parent that\n  // has `mat-accent` and is placed inside another parent that has `mat-primary`.\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate,\n  .mat-accent .mat-pseudo-checkbox-checked,\n  .mat-accent .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, accent));\n  }\n\n  .mat-warn .mat-pseudo-checkbox-checked,\n  .mat-warn .mat-pseudo-checkbox-indeterminate {\n    background: mat-color(map-get($config, warn));\n  }\n\n  .mat-pseudo-checkbox-checked,\n  .mat-pseudo-checkbox-indeterminate {\n    &.mat-pseudo-checkbox-disabled {\n      background: $disabled-color;\n    }\n  }\n}\n\n@mixin mat-pseudo-checkbox-typography($config-or-theme) {}\n\n@mixin _mat-pseudo-checkbox-density($config-or-theme) {}\n\n@mixin mat-pseudo-checkbox-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-pseudo-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-pseudo-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-pseudo-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-pseudo-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n// Represents a typography level from the Material design spec.\n@function mat-typography-level(\n  $font-size,\n  $line-height: $font-size,\n  $font-weight: 400,\n  $font-family: null,\n  $letter-spacing: normal) {\n\n  @return (\n    font-size: $font-size,\n    line-height: $line-height,\n    font-weight: $font-weight,\n    font-family: $font-family,\n    letter-spacing: $letter-spacing\n  );\n}\n\n// Represents a collection of typography levels.\n// Defaults come from https://material.io/guidelines/style/typography.html\n// Note: The spec doesn't mention letter spacing. The values here come from\n// eyeballing it until it looked exactly like the spec examples.\n@function mat-typography-config(\n  $font-family:   'Roboto, \"Helvetica Neue\", sans-serif',\n  $display-4:     mat-typography-level(112px, 112px, 300, $letter-spacing: -0.05em),\n  $display-3:     mat-typography-level(56px, 56px, 400, $letter-spacing: -0.02em),\n  $display-2:     mat-typography-level(45px, 48px, 400, $letter-spacing: -0.005em),\n  $display-1:     mat-typography-level(34px, 40px, 400),\n  $headline:      mat-typography-level(24px, 32px, 400),\n  $title:         mat-typography-level(20px, 32px, 500),\n  $subheading-2:  mat-typography-level(16px, 28px, 400),\n  $subheading-1:  mat-typography-level(15px, 24px, 400),\n  $body-2:        mat-typography-level(14px, 24px, 500),\n  $body-1:        mat-typography-level(14px, 20px, 400),\n  $caption:       mat-typography-level(12px, 20px, 400),\n  $button:        mat-typography-level(14px, 14px, 500),\n  // Line-height must be unit-less fraction of the font-size.\n  $input:         mat-typography-level(inherit, 1.125, 400)\n) {\n\n  // Declare an initial map with all of the levels.\n  $config: (\n    display-4:      $display-4,\n    display-3:      $display-3,\n    display-2:      $display-2,\n    display-1:      $display-1,\n    headline:       $headline,\n    title:          $title,\n    subheading-2:   $subheading-2,\n    subheading-1:   $subheading-1,\n    body-2:         $body-2,\n    body-1:         $body-1,\n    caption:        $caption,\n    button:         $button,\n    input:          $input,\n  );\n\n  // Loop through the levels and set the `font-family` of the ones that don't have one to the base.\n  // Note that Sass can't modify maps in place, which means that we need to merge and re-assign.\n  @each $key, $level in $config {\n    @if map-get($level, font-family) == null {\n      $new-level: map-merge($level, (font-family: $font-family));\n      $config: map-merge($config, ($key: $new-level));\n    }\n  }\n\n  // Add the base font family to the config.\n  @return map-merge($config, (font-family: $font-family));\n}\n\n// Whether a config is for the Material Design 2018 typography system.\n@function mat-private-typography-is-2018-config($config) {\n  @return map-get($config, headline-1) != null;\n}\n\n// Whether a config is for the Material Design 2014 typography system.\n@function mat-private-typography-is-2014-config($config) {\n  @return map-get($config, headline) != null;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2014 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2014-config($config) {\n  @if mat-private-typography-is-2018-config($config) {\n    @return mat-typography-config(\n        $display-4: map-get($config, headline-1),\n        $display-3: map-get($config, headline-2),\n        $display-2: map-get($config, headline-3),\n        $display-1: map-get($config, headline-4),\n        $headline: map-get($config, headline-5),\n        $title: map-get($config, headline-6),\n        $subheading-2: map-get($config, subtitle-1),\n        $subheading-1: map-get($config, subtitle-2),\n        $body-2: map-get($config, body-1),\n        $body-1: map-get($config, body-2),\n        $button: map-get($config, button),\n        $caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Given a config for either the 2014 or 2018 Material Design typography system,\n// produces a normalized typography config for the 2018 Material Design typography system.\n// 2014 - https://material.io/archive/guidelines/style/typography.html#typography-styles\n// 2018 - https://material.io/design/typography/the-type-system.html#type-scale\n@function mat-private-typography-to-2018-config($config) {\n  @if mat-private-typography-is-2014-config($config) {\n    @return (\n        headline-1: map-get($config, display-4),\n        headline-2: map-get($config, display-3),\n        headline-3: map-get($config, display-2),\n        headline-4: map-get($config, display-1),\n        headline-5: map-get($config, headline),\n        headline-6: map-get($config, title),\n        subtitle-1: map-get($config, subheading-2),\n        subtitle-2: map-get($config, subheading-1),\n        body-1: map-get($config, body-2),\n        body-2: map-get($config, body-1),\n        button: map-get($config, button),\n        caption: map-get($config, caption),\n    );\n  }\n  @return $config;\n}\n\n// Adds the base typography styles, based on a config.\n/* stylelint-disable-next-line material/theme-mixin-api */\n@mixin mat-base-typography($config, $selector: '.mat-typography') {\n  .mat-h1, .mat-headline, #{$selector} h1 {\n    @include mat-typography-level-to-styles($config, headline);\n    margin: 0 0 16px;\n  }\n\n  .mat-h2, .mat-title, #{$selector} h2 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0 0 16px;\n  }\n\n  .mat-h3, .mat-subheading-2, #{$selector} h3 {\n    @include mat-typography-level-to-styles($config, subheading-2);\n    margin: 0 0 16px;\n  }\n\n  .mat-h4, .mat-subheading-1, #{$selector} h4 {\n    @include mat-typography-level-to-styles($config, subheading-1);\n    margin: 0 0 16px;\n  }\n\n  // Note: the spec doesn't have anything that would correspond to h5 and h6, but we add these for\n  // consistency. The font sizes come from the Chrome user agent styles which have h5 at 0.83em\n  // and h6 at 0.67em.\n  .mat-h5, #{$selector} h5 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.83),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-h6, #{$selector} h6 {\n    @include mat-typography-font-shorthand(\n       // calc is used here to support css variables\n      calc(#{mat-font-size($config, body-1)} * 0.67),\n      mat-font-weight($config, body-1),\n      mat-line-height($config, body-1),\n      mat-font-family($config, body-1)\n    );\n\n    margin: 0 0 12px;\n  }\n\n  .mat-body-strong, .mat-body-2 {\n    @include mat-typography-level-to-styles($config, body-2);\n  }\n\n  .mat-body, .mat-body-1, #{$selector} {\n    @include mat-typography-level-to-styles($config, body-1);\n\n    p {\n      margin: 0 0 12px;\n    }\n  }\n\n  .mat-small, .mat-caption {\n    @include mat-typography-level-to-styles($config, caption);\n  }\n\n  .mat-display-4, #{$selector} .mat-display-4 {\n    @include mat-typography-level-to-styles($config, display-4);\n    margin: 0 0 56px;\n  }\n\n  .mat-display-3, #{$selector} .mat-display-3 {\n    @include mat-typography-level-to-styles($config, display-3);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-2, #{$selector} .mat-display-2 {\n    @include mat-typography-level-to-styles($config, display-2);\n    margin: 0 0 64px;\n  }\n\n  .mat-display-1, #{$selector} .mat-display-1 {\n    @include mat-typography-level-to-styles($config, display-1);\n    margin: 0 0 64px;\n  }\n}\n\n\n\n\n@mixin mat-autocomplete-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-autocomplete-panel {\n    @include mat-private-theme-overridable-elevation(4, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Selected options in autocompletes should not be gray, but we\n    // only want to override the background for selected options if\n    // they are *not* in hover or focus state. This change has to be\n    // made here because base option styles are shared between the\n    // autocomplete and the select.\n    .mat-option.mat-selected:not(.mat-active):not(:hover) {\n      background: mat-color($background, card);\n\n      &:not(.mat-option-disabled) {\n        color: mat-color($foreground, text);\n      }\n    }\n  }\n}\n\n@mixin mat-autocomplete-typography($config-or-theme) {}\n\n@mixin _mat-autocomplete-density($config-or-theme) {}\n\n@mixin mat-autocomplete-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-autocomplete') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-autocomplete-color($color);\n    }\n    @if $density != null {\n      @include _mat-autocomplete-density($density);\n    }\n    @if $typography != null {\n      @include mat-autocomplete-typography($typography);\n    }\n  }\n}\n\n// This contains all of the styles for the badge\n// rather than just the color/theme because of\n// no style sheet support for directives.\n\n\n\n\n\n$mat-badge-font-size: 12px;\n$mat-badge-font-weight: 600;\n$mat-badge-default-size: 22px !default;\n$mat-badge-small-size: $mat-badge-default-size - 6;\n$mat-badge-large-size: $mat-badge-default-size + 6;\n\n// Mixin for building offset given different sizes\n@mixin _mat-badge-size($size) {\n  .mat-badge-content {\n    width: $size;\n    height: $size;\n    line-height: $size;\n  }\n\n  &.mat-badge-above {\n    .mat-badge-content {\n      top: -$size / 2;\n    }\n  }\n\n  &.mat-badge-below {\n    .mat-badge-content {\n      bottom: -$size / 2;\n    }\n  }\n\n  &.mat-badge-before {\n    .mat-badge-content {\n      left: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-before {\n    .mat-badge-content {\n      left: auto;\n      right: -$size;\n    }\n  }\n\n  &.mat-badge-after {\n    .mat-badge-content {\n      right: -$size;\n    }\n  }\n\n  [dir='rtl'] &.mat-badge-after {\n    .mat-badge-content {\n      right: auto;\n      left: -$size;\n    }\n  }\n\n  &.mat-badge-overlap {\n    &.mat-badge-before {\n      .mat-badge-content {\n        left: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-before {\n      .mat-badge-content {\n        left: auto;\n        right: -$size / 2;\n      }\n    }\n\n    &.mat-badge-after {\n      .mat-badge-content {\n        right: -$size / 2;\n      }\n    }\n\n    [dir='rtl'] &.mat-badge-after {\n      .mat-badge-content {\n        right: auto;\n        left: -$size / 2;\n      }\n    }\n  }\n}\n\n@mixin mat-badge-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $primary: map-get($config, primary);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-badge-content {\n    color: mat-color($primary, default-contrast);\n    background: mat-color($primary);\n\n    @include cdk-high-contrast(active, off) {\n      outline: solid 1px;\n      border-radius: 0;\n    }\n  }\n\n  .mat-badge-accent {\n    .mat-badge-content {\n      background: mat-color($accent);\n      color: mat-color($accent, default-contrast);\n    }\n  }\n\n  .mat-badge-warn {\n    .mat-badge-content {\n      color: mat-color($warn, default-contrast);\n      background: mat-color($warn);\n    }\n  }\n\n  .mat-badge {\n    position: relative;\n  }\n\n  .mat-badge-hidden {\n    .mat-badge-content {\n      display: none;\n    }\n  }\n\n  .mat-badge-disabled {\n    .mat-badge-content {\n      $app-background: mat-color($background, 'background');\n      $badge-color: mat-color($foreground, disabled-button);\n\n      // The disabled color usually has some kind of opacity, but because the badge is overlayed\n      // on top of something else, it won't look good if it's opaque. If it is a color *type*,\n      // we convert it into a solid color by taking the opacity from the rgba value and using\n      // the value to determine the percentage of the background to put into foreground when\n      // mixing the colors together.\n      @if (type-of($badge-color) == color and type-of($app-background) == color) {\n        $badge-opacity: opacity($badge-color);\n        background: mix($app-background, rgba($badge-color, 1), (1 - $badge-opacity) * 100%);\n      }\n      @else {\n        background: $badge-color;\n      }\n\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-badge-content {\n    position: absolute;\n    text-align: center;\n    display: inline-block;\n    border-radius: 50%;\n    transition: transform 200ms ease-in-out;\n    transform: scale(0.6);\n    overflow: hidden;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    pointer-events: none;\n  }\n\n  .ng-animate-disabled .mat-badge-content,\n  .mat-badge-content._mat-animation-noopable {\n    transition: none;\n  }\n\n  // The active class is added after the element is added\n  // so it can animate scale to default\n  .mat-badge-content.mat-badge-active {\n    // Scale to `none` instead of `1` to avoid blurry text in some browsers.\n    transform: none;\n  }\n\n  .mat-badge-small {\n    @include _mat-badge-size($mat-badge-small-size);\n  }\n  .mat-badge-medium {\n    @include _mat-badge-size($mat-badge-default-size);\n  }\n  .mat-badge-large {\n    @include _mat-badge-size($mat-badge-large-size);\n  }\n}\n\n@mixin mat-badge-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-badge-content {\n    font-weight: $mat-badge-font-weight;\n    font-size: $mat-badge-font-size;\n    font-family: mat-font-family($config);\n  }\n\n  .mat-badge-small .mat-badge-content {\n    // Set the font size to 75% of the original.\n    font-size: $mat-badge-font-size * 0.75;\n  }\n\n  .mat-badge-large .mat-badge-content {\n    font-size: $mat-badge-font-size * 2;\n  }\n}\n\n@mixin _mat-badge-density($config-or-theme) {}\n\n@mixin mat-badge-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-badge') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-badge-color($color);\n    }\n    @if $density != null {\n      @include _mat-badge-density($density);\n    }\n    @if $typography != null {\n      @include mat-badge-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-bottom-sheet-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-bottom-sheet-container {\n    @include mat-private-theme-elevation(16, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-bottom-sheet-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-bottom-sheet-container {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin _mat-bottom-sheet-density($config-or-theme) {}\n\n@mixin mat-bottom-sheet-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-bottom-sheet') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-bottom-sheet-color($color);\n    }\n    @if $density != null {\n      @include _mat-bottom-sheet-density($density);\n    }\n    @if $typography != null {\n      @include mat-bottom-sheet-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$_mat-button-ripple-opacity: 0.1;\n\n// Applies a focus style to an mat-button element for each of the supported palettes.\n@mixin _mat-button-focus-overlay-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  &.mat-primary .mat-button-focus-overlay {\n    background-color: mat-color($primary);\n  }\n\n  &.mat-accent .mat-button-focus-overlay {\n    background-color: mat-color($accent);\n  }\n\n  &.mat-warn .mat-button-focus-overlay {\n    background-color: mat-color($warn);\n  }\n\n  &.mat-button-disabled .mat-button-focus-overlay {\n    background-color: transparent;\n  }\n}\n\n// Applies the background color for a ripple. If the value provided is not a Sass color,\n// we assume that we've been given a CSS variable. Since we can't perform alpha-blending\n// on a CSS variable, we instead add the opacity directly to the ripple element.\n@mixin _mat-button-ripple-background($palette, $hue, $opacity) {\n  $background-color: mat-color($palette, $hue, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-button-ripple-color($theme, $hue, $opacity: $_mat-button-ripple-opacity) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  &.mat-primary .mat-ripple-element {\n    @include _mat-button-ripple-background($primary, $hue, $opacity);\n  }\n\n  &.mat-accent .mat-ripple-element {\n    @include _mat-button-ripple-background($accent, $hue, $opacity);\n  }\n\n  &.mat-warn .mat-ripple-element {\n    @include _mat-button-ripple-background($warn, $hue, $opacity);\n  }\n}\n\n// Applies a property to an mat-button element for each of the supported palettes.\n@mixin _mat-button-theme-property($theme, $property, $hue) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n  $background: map-get($theme, background);\n  $foreground: map-get($theme, foreground);\n\n  &.mat-primary {\n    #{$property}: mat-color($primary, $hue);\n  }\n  &.mat-accent {\n    #{$property}: mat-color($accent, $hue);\n  }\n  &.mat-warn {\n    #{$property}: mat-color($warn, $hue);\n  }\n\n  &.mat-primary, &.mat-accent, &.mat-warn, &.mat-button-disabled {\n    &.mat-button-disabled {\n      $palette: if($property == 'color', $foreground, $background);\n      #{$property}: mat-color($palette, disabled-button);\n    }\n  }\n}\n\n@mixin mat-button-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-button, .mat-icon-button, .mat-stroked-button {\n    // Buttons without a background color should inherit the font color. This is necessary to\n    // ensure that the button is readable on custom background colors. It's wrong to always assume\n    // that those buttons are always placed inside of containers with the default background\n    // color of the theme (e.g. themed toolbars).\n    color: inherit;\n    background: transparent;\n\n    @include _mat-button-theme-property($config, 'color', text);\n    @include _mat-button-focus-overlay-color($config);\n\n    // Setup the ripple color to be based on the text color. This ensures that the ripples\n    // are matching with the current theme palette and are in contrast to the background color\n    // (e.g in themed toolbars).\n    .mat-ripple-element {\n      opacity: $_mat-button-ripple-opacity;\n      background-color: currentColor;\n    }\n  }\n\n  .mat-button-focus-overlay {\n    background: map-get($foreground, base);\n  }\n\n  // Note: this needs a bit extra specificity, because we're not guaranteed the inclusion\n  // order of the theme styles and the button reset may end up resetting this as well.\n  .mat-stroked-button:not(.mat-button-disabled) {\n    border-color: mat-color($foreground, divider);\n  }\n\n  .mat-flat-button, .mat-raised-button, .mat-fab, .mat-mini-fab {\n    // Default font and background color when not using any color palette.\n    color: mat-color($foreground, text);\n    background-color: mat-color($background, raised-button);\n\n    @include _mat-button-theme-property($config, 'color', default-contrast);\n    @include _mat-button-theme-property($config, 'background-color', default);\n    @include _mat-button-ripple-color($config, default-contrast);\n  }\n\n  .mat-stroked-button, .mat-flat-button {\n    @include mat-private-theme-overridable-elevation(0, $config);\n  }\n\n  .mat-raised-button {\n    @include mat-private-theme-overridable-elevation(2, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include mat-private-theme-overridable-elevation(8, $config);\n    }\n\n    &.mat-button-disabled {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-fab, .mat-mini-fab {\n    @include mat-private-theme-overridable-elevation(6, $config);\n\n    &:not(.mat-button-disabled):active {\n      @include mat-private-theme-overridable-elevation(12, $config);\n    }\n\n    &.mat-button-disabled {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n}\n\n@mixin mat-button-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button, .mat-raised-button, .mat-icon-button, .mat-stroked-button,\n  .mat-flat-button, .mat-fab, .mat-mini-fab {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-button-density($config-or-theme) {}\n\n@mixin mat-button-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-button') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-color($color);\n    }\n    @if $density != null {\n      @include _mat-button-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-button-toggle-standard-height: 48px !default;\n// Minimum height for highest density can vary based on the content that developers\n// project into button-toggle's. We use a minimum of `24px` though because commonly\n// icons or text are displayed. Icons by default have a size of `24px`.\n$mat-button-toggle-standard-minimum-height: 24px !default;\n$mat-button-toggle-standard-maximum-height: $mat-button-toggle-standard-height !default;\n\n$mat-button-toggle-standard-density-config: (\n  height: (\n    default: $mat-button-toggle-standard-height,\n    maximum: $mat-button-toggle-standard-maximum-height,\n    minimum: $mat-button-toggle-standard-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-button-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $divider-color: mat-color($foreground, divider);\n\n  .mat-button-toggle-standalone,\n  .mat-button-toggle-group {\n    @include mat-private-theme-elevation(2, $config);\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    box-shadow: none;\n  }\n\n  .mat-button-toggle {\n    color: mat-color($foreground, hint-text);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button);\n    }\n  }\n\n  .mat-button-toggle-appearance-standard {\n    color: mat-color($foreground, text);\n    background: mat-color($background, card);\n\n    .mat-button-toggle-focus-overlay {\n      background-color: mat-color($background, focused-button, 1);\n    }\n  }\n\n  .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: solid 1px $divider-color;\n  }\n\n  [dir='rtl'] .mat-button-toggle-group-appearance-standard .mat-button-toggle + .mat-button-toggle {\n    border-left: none;\n    border-right: solid 1px $divider-color;\n  }\n\n  .mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical {\n    .mat-button-toggle + .mat-button-toggle {\n      border-left: none;\n      border-right: none;\n      border-top: solid 1px $divider-color;\n    }\n  }\n\n  .mat-button-toggle-checked {\n    background-color: mat-color($background, selected-button);\n    color: mat-color($foreground, secondary-text);\n\n    &.mat-button-toggle-appearance-standard {\n      color: mat-color($foreground, text);\n    }\n  }\n\n  .mat-button-toggle-disabled {\n    color: mat-color($foreground, disabled-button);\n    background-color: mat-color($background, disabled-button-toggle);\n\n    &.mat-button-toggle-appearance-standard {\n      background: mat-color($background, card);\n    }\n\n    &.mat-button-toggle-checked {\n      background-color: mat-color($background, selected-disabled-button);\n    }\n  }\n\n  .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,\n  .mat-button-toggle-group-appearance-standard {\n    border: solid 1px $divider-color;\n  }\n}\n\n@mixin mat-button-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-button-toggle {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin mat-button-toggle-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $standard-height: mat-private-density-prop-value(\n      $mat-button-toggle-standard-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-button-toggle-appearance-standard .mat-button-toggle-label-content {\n      line-height: $standard-height;\n    }\n  }\n}\n\n@mixin mat-button-toggle-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-button-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-button-toggle-color($color);\n    }\n    @if $density != null {\n      @include mat-button-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-button-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-card-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-card {\n    @include mat-private-theme-overridable-elevation(1, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    // Needs extra specificity to be able to override the elevation selectors.\n    &.mat-card-flat {\n      @include mat-private-theme-overridable-elevation(0, $config);\n    }\n  }\n\n  .mat-card-subtitle {\n    color: mat-color($foreground, secondary-text);\n  }\n}\n\n@mixin mat-card-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-card {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-card-title {\n    font: {\n      size: mat-font-size($config, headline);\n      weight: mat-font-weight($config, title);\n    }\n  }\n\n  .mat-card-header .mat-card-title {\n    font-size: mat-font-size($config, title);\n  }\n\n  .mat-card-subtitle,\n  .mat-card-content {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-card-density($config-or-theme) {}\n\n@mixin mat-card-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-card') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-card-color($color);\n    }\n    @if $density != null {\n      @include _mat-card-density($density);\n    }\n    @if $typography != null {\n      @include mat-card-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-checkbox-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n\n  // The color of the checkbox's checkmark / mixedmark.\n  $checkbox-mark-color: mat-color($background, background);\n\n  // NOTE(traviskaufman): While the spec calls for translucent blacks/whites for disabled colors,\n  // this does not work well with elements layered on top of one another. To get around this we\n  // blend the colors together based on the base color and the theme background.\n  $white-30pct-opacity-on-dark: #686868;\n  $black-26pct-opacity-on-light: #b0b0b0;\n  $disabled-color: if($is-dark-theme, $white-30pct-opacity-on-dark, $black-26pct-opacity-on-light);\n\n  .mat-checkbox-frame {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-checkbox-checkmark {\n    fill: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-checkmark-path {\n    // !important is needed here because a stroke must be set as an\n    // attribute on the SVG in order for line animation to work properly.\n    stroke: $checkbox-mark-color !important;\n  }\n\n  .mat-checkbox-mixedmark {\n    background-color: $checkbox-mark-color;\n  }\n\n  .mat-checkbox-indeterminate, .mat-checkbox-checked {\n    &.mat-primary .mat-checkbox-background {\n      background-color: mat-color($primary);\n    }\n\n    &.mat-accent .mat-checkbox-background {\n      background-color: mat-color($accent);\n    }\n\n    &.mat-warn .mat-checkbox-background {\n      background-color: mat-color($warn);\n    }\n  }\n\n  .mat-checkbox-disabled {\n    &.mat-checkbox-checked,\n    &.mat-checkbox-indeterminate {\n      .mat-checkbox-background {\n        background-color: $disabled-color;\n      }\n    }\n\n    &:not(.mat-checkbox-checked) {\n      .mat-checkbox-frame {\n        border-color: $disabled-color;\n      }\n    }\n\n    .mat-checkbox-label {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  // Switch this to a solid color since we're using `opacity`\n  // to control how opaque the ripple should be.\n  .mat-checkbox .mat-ripple-element {\n    background-color: map-get(map-get($config, foreground), base);\n  }\n\n  .mat-checkbox-checked:not(.mat-checkbox-disabled),\n  .mat-checkbox:active:not(.mat-checkbox-disabled) {\n    &.mat-primary .mat-ripple-element {\n      background: mat-color($primary);\n    }\n\n    &.mat-accent .mat-ripple-element {\n      background: mat-color($accent);\n    }\n\n    &.mat-warn .mat-ripple-element {\n      background: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-checkbox-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-checkbox {\n    font-family: mat-font-family($config);\n  }\n\n  // TODO(kara): Remove this style when fixing vertical baseline\n  .mat-checkbox-layout .mat-checkbox-label {\n    line-height: mat-line-height($config, body-2);\n  }\n}\n\n@mixin _mat-checkbox-density($config-or-theme) {}\n\n@mixin mat-checkbox-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-checkbox') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-checkbox-color($color);\n    }\n    @if $density != null {\n      @include _mat-checkbox-density($density);\n    }\n    @if $typography != null {\n      @include mat-checkbox-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-chip-remove-font-size: 18px;\n\n@mixin _mat-chip-element-color($foreground, $background) {\n  background-color: $background;\n  color: $foreground;\n\n  .mat-chip-remove {\n    color: $foreground;\n    opacity: 0.4;\n  }\n}\n\n\n// Applies the background color for a ripple element.\n// If the color value provided is not a Sass color,\n// we assume that we've been given a CSS variable.\n// Since we can't perform alpha-blending on a CSS variable,\n// we instead add the opacity directly to the ripple element.\n@mixin _mat-chips-ripple-background($palette, $default-contrast, $opacity) {\n  $background-color: mat-color($palette, $default-contrast, $opacity);\n  background-color: $background-color;\n  @if (type-of($background-color) != color) {\n    opacity: $opacity;\n  }\n}\n\n@mixin _mat-chip-theme-color($palette) {\n  @include _mat-chip-element-color(mat-color($palette, default-contrast), mat-color($palette));\n\n  .mat-ripple-element {\n    @include _mat-chips-ripple-background($palette, default-contrast, 0.1);\n  }\n}\n\n@mixin mat-chips-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $unselected-background: mat-color($background, unselected-chip);\n  $unselected-foreground: mat-color($foreground, text);\n\n  .mat-chip.mat-standard-chip {\n    @include _mat-chip-element-color($unselected-foreground, $unselected-background);\n\n    &:not(.mat-chip-disabled) {\n      &:active {\n        @include mat-private-theme-elevation(3, $config);\n      }\n\n      .mat-chip-remove:hover {\n        opacity: 0.54;\n      }\n    }\n\n    &.mat-chip-disabled {\n      opacity: 0.4;\n    }\n\n    &::after {\n      background: map-get($foreground, base);\n    }\n  }\n\n  .mat-chip.mat-standard-chip.mat-chip-selected {\n    &.mat-primary {\n      @include _mat-chip-theme-color($primary);\n    }\n\n    &.mat-warn {\n      @include _mat-chip-theme-color($warn);\n    }\n\n    &.mat-accent {\n      @include _mat-chip-theme-color($accent);\n    }\n  }\n}\n\n@mixin mat-chips-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-chip {\n    font-size: mat-font-size($config, body-2);\n    font-weight: mat-font-weight($config, body-2);\n\n    .mat-chip-trailing-icon.mat-icon,\n    .mat-chip-remove.mat-icon {\n      font-size: $mat-chip-remove-font-size;\n    }\n  }\n}\n\n@mixin _mat-chips-density($config-or-theme) {}\n\n@mixin mat-chips-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-chips') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-chips-color($color);\n    }\n    @if $density != null {\n      @include _mat-chips-density($density);\n    }\n    @if $typography != null {\n      @include mat-chips-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin mat-divider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n\n  .mat-divider {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  .mat-divider-vertical {\n    border-right-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-divider-typography($config-or-theme) {}\n\n@mixin _mat-divider-density($config-or-theme) {}\n\n@mixin mat-divider-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-divider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-divider-color($color);\n    }\n    @if $density != null {\n      @include _mat-divider-density($density);\n    }\n    @if $typography != null {\n      @include mat-divider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-table-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-table {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-table thead, .mat-table tbody, .mat-table tfoot,\n  mat-header-row, mat-row, mat-footer-row,\n  [mat-header-row], [mat-row], [mat-footer-row],\n  .mat-table-sticky {\n    background: inherit;\n  }\n\n  mat-row, mat-header-row, mat-footer-row,\n  th.mat-header-cell, td.mat-cell, td.mat-footer-cell {\n    border-bottom-color: mat-color($foreground, divider);\n  }\n\n  .mat-header-cell {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-table-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-table {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-header-cell {\n    font-size: mat-font-size($config, caption);\n    font-weight: mat-font-weight($config, body-2);\n  }\n\n  .mat-cell, .mat-footer-cell {\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-table-density($config-or-theme) {}\n\n@mixin mat-table-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-table') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-table-color($color);\n    }\n    @if $density != null {\n      @include _mat-table-density($density);\n    }\n    @if $typography != null {\n      @include mat-table-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n$mat-datepicker-selected-today-box-shadow-width: 1px;\n$mat-datepicker-selected-fade-amount: 0.6;\n$mat-datepicker-range-fade-amount: 0.2;\n$mat-datepicker-today-fade-amount: 0.2;\n$mat-calendar-body-font-size: 13px !default;\n$mat-calendar-weekday-table-font-size: 11px !default;\n\n@mixin _mat-datepicker-color($palette) {\n  @include mat-date-range-colors(\n    mat-color($palette, default, $mat-datepicker-range-fade-amount));\n\n  .mat-calendar-body-selected {\n    background-color: mat-color($palette);\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-selected {\n    $background: mat-color($palette);\n\n    @if (type-of($background) == color) {\n      background-color: fade-out($background, $mat-datepicker-selected-fade-amount);\n    }\n    @else {\n      // If we couldn't resolve to background to a color (e.g. it's a CSS variable),\n      // fall back to fading the content out via `opacity`.\n      opacity: $mat-datepicker-today-fade-amount;\n    }\n  }\n\n  .mat-calendar-body-today.mat-calendar-body-selected {\n    box-shadow: inset 0 0 0 $mat-datepicker-selected-today-box-shadow-width\n                mat-color($palette, default-contrast);\n  }\n\n  .mat-calendar-body-cell:not(.mat-calendar-body-disabled):hover,\n  .cdk-keyboard-focused .mat-calendar-body-active,\n  .cdk-program-focused .mat-calendar-body-active {\n    & > .mat-calendar-body-cell-content {\n      @include _mat-datepicker-unselected-cell {\n        background-color: mat-color($palette, 0.3);\n      }\n    }\n  }\n}\n\n// Utility mixin to target cells that aren't selected. Used to make selector easier to follow.\n@mixin _mat-datepicker-unselected-cell {\n  &:not(.mat-calendar-body-selected):not(.mat-calendar-body-comparison-identical) {\n    @content;\n  }\n}\n\n@mixin mat-datepicker-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-calendar-arrow {\n    border-top-color: mat-color($foreground, icon);\n  }\n\n  // The prev/next buttons need a bit more specificity to\n  // avoid being overwritten by the .mat-icon-button.\n  .mat-datepicker-toggle,\n  .mat-datepicker-content .mat-calendar-next-button,\n  .mat-datepicker-content .mat-calendar-previous-button {\n    color: mat-color($foreground, icon);\n  }\n\n  .mat-calendar-table-header {\n    color: mat-color($foreground, hint-text);\n  }\n\n  .mat-calendar-table-header-divider::after {\n    background: mat-color($foreground, divider);\n  }\n\n  .mat-calendar-body-label {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-calendar-body-cell-content,\n  .mat-date-range-input-separator {\n    color: mat-color($foreground, text);\n    border-color: transparent;\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-cell-content {\n    @include _mat-datepicker-unselected-cell {\n      color: $disabled-color;\n    }\n  }\n\n  .mat-form-field-disabled .mat-date-range-input-separator {\n    color: $disabled-color;\n  }\n\n  .mat-calendar-body-in-preview {\n    $divider-color: mat-color($foreground, divider);\n\n    @if type-of($divider-color) == color {\n      // The divider color is set under the assumption that it'll be used\n      // for a solid border, but because we're using a dashed border for the\n      // preview range, we need to bump its opacity to ensure that it's visible.\n      color: rgba($divider-color, min(opacity($divider-color) * 2, 1));\n    }\n    @else {\n      color: $divider-color;\n    }\n  }\n\n  .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      // Note: though it's not text, the border is a hint about the fact that this is today's date,\n      // so we use the hint color.\n      border-color: mat-color($foreground, hint-text);\n    }\n  }\n\n  .mat-calendar-body-disabled > .mat-calendar-body-today {\n    @include _mat-datepicker-unselected-cell {\n      $color: mat-color($foreground, hint-text);\n\n      @if (type-of($color) == color) {\n        border-color: fade-out($color, $mat-datepicker-today-fade-amount);\n      }\n      @else {\n        // If the color didn't resolve to a color value, but something like a CSS variable, we can't\n        // fade it out so we fall back to reducing the element opacity. Note that we don't use the\n        // $mat-datepicker-today-fade-amount, because hint text usually has some opacity applied\n        // to it already and we don't want them to stack on top of each other.\n        opacity: 0.5;\n      }\n    }\n  }\n\n  @include _mat-datepicker-color(map-get($config, primary));\n\n  .mat-datepicker-content {\n    @include mat-private-theme-elevation(4, $config);\n    background-color: mat-color($background, card);\n    color: mat-color($foreground, text);\n\n    &.mat-accent {\n      @include _mat-datepicker-color(map-get($config, accent));\n    }\n\n    &.mat-warn {\n      @include _mat-datepicker-color(map-get($config, warn));\n    }\n  }\n\n  .mat-datepicker-content-touch {\n    @include mat-private-theme-elevation(0, $config);\n  }\n\n  .mat-datepicker-toggle-active {\n    color: mat-color(map-get($config, primary), text);\n\n    &.mat-accent {\n      color: mat-color(map-get($config, accent), text);\n    }\n\n    &.mat-warn {\n      color: mat-color(map-get($config, warn), text);\n    }\n  }\n\n  .mat-date-range-input-inner[disabled] {\n    color: mat-color($foreground, disabled-text);\n  }\n}\n\n@mixin mat-datepicker-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-calendar {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-calendar-body {\n    font-size: $mat-calendar-body-font-size;\n  }\n\n  .mat-calendar-body-label,\n  .mat-calendar-period-button {\n    font: {\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n\n  .mat-calendar-table-header th {\n    font: {\n      size: $mat-calendar-weekday-table-font-size;\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin mat-date-range-colors(\n  $range-color,\n  $comparison-color: rgba(#f9ab00, $mat-datepicker-range-fade-amount),\n  $overlap-color: #a8dab5,\n  $overlap-selected-color: darken($overlap-color, 30%)) {\n\n  .mat-calendar-body-in-range::before {\n    background: $range-color;\n  }\n\n  .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range::before {\n    background: $comparison-color;\n  }\n\n  .mat-calendar-body-comparison-bridge-start::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-end::before {\n    background: linear-gradient(to right, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-comparison-bridge-end::before,\n  [dir='rtl'] .mat-calendar-body-comparison-bridge-start::before {\n    background: linear-gradient(to left, $range-color 50%, $comparison-color 50%);\n  }\n\n  .mat-calendar-body-in-range > .mat-calendar-body-comparison-identical,\n  .mat-calendar-body-in-comparison-range.mat-calendar-body-in-range::after {\n    background: $overlap-color;\n  }\n\n  .mat-calendar-body-comparison-identical.mat-calendar-body-selected,\n  .mat-calendar-body-in-comparison-range > .mat-calendar-body-selected {\n    background: $overlap-selected-color;\n  }\n}\n\n@mixin _mat-datepicker-density($config-or-theme) {}\n\n@mixin mat-datepicker-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-datepicker') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-datepicker-color($color);\n    }\n    @if $density != null {\n      @include _mat-datepicker-density($density);\n    }\n    @if $typography != null {\n      @include mat-datepicker-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-dialog-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-dialog-container {\n    @include mat-private-theme-elevation(24, $config);\n    background: mat-color($background, dialog);\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-dialog-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-dialog-title {\n    @include mat-typography-level-to-styles($config, title);\n  }\n}\n\n@mixin _mat-dialog-density($config-or-theme) {}\n\n@mixin mat-dialog-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-dialog') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-dialog-color($color);\n    }\n    @if $density != null {\n      @include _mat-dialog-density($density);\n    }\n    @if $typography != null {\n      @include mat-dialog-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Default minimum and maximum height for collapsed panel headers.\n$mat-expansion-panel-header-collapsed-height: 48px !default;\n$mat-expansion-panel-header-collapsed-minimum-height: 36px !default;\n$mat-expansion-panel-header-collapsed-maximum-height:\n    $mat-expansion-panel-header-collapsed-height !default;\n\n// Default minimum and maximum height for expanded panel headers.\n$mat-expansion-panel-header-expanded-height: 64px !default;\n$mat-expansion-panel-header-expanded-minimum-height: 48px !default;\n$mat-expansion-panel-header-expanded-maximum-height:\n    $mat-expansion-panel-header-expanded-height !default;\n\n// Density configuration for the expansion panel. Captures the\n// height for both expanded and collapsed panel headers.\n$mat-expansion-panel-header-density-config: (\n  collapsed-height: (\n    default: $mat-expansion-panel-header-collapsed-height,\n    maximum: $mat-expansion-panel-header-collapsed-maximum-height,\n    minimum: $mat-expansion-panel-header-collapsed-minimum-height,\n  ),\n  expanded-height: (\n    default: $mat-expansion-panel-header-expanded-height,\n    maximum: $mat-expansion-panel-header-expanded-maximum-height,\n    minimum: $mat-expansion-panel-header-expanded-minimum-height,\n  )\n) !default;\n\n// Note: Keep this in sync with the animation timing for the toggle indicator\n// and body expansion. These are animated using Angular animations.\n$mat-expansion-panel-header-transition: 225ms cubic-bezier(0.4, 0, 0.2, 1);\n\n@mixin mat-private-expansion-focus {\n  .mat-expansion-panel {\n    & .mat-expansion-panel-header.cdk-keyboard-focused,\n    & .mat-expansion-panel-header.cdk-program-focused,\n    &:not(.mat-expanded) .mat-expansion-panel-header:hover {\n      &:not([aria-disabled='true']) {\n        @content;\n      }\n    }\n  }\n}\n\n\n@mixin mat-expansion-panel-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-expansion-panel {\n    @include mat-private-theme-overridable-elevation(2, $config);\n    background: mat-color($background, card);\n    color: mat-color($foreground, text);\n  }\n\n  .mat-action-row {\n    border-top-color: mat-color($foreground, divider);\n  }\n\n  @include mat-private-expansion-focus {\n    background: mat-color($background, hover);\n  }\n\n  // Disable the hover on touch devices since it can appear like it is stuck. We can't use\n  // `@media (hover)` above, because the desktop support browser support isn't great.\n  @media (hover: none) {\n    .mat-expansion-panel:not(.mat-expanded):not([aria-disabled='true'])\n      .mat-expansion-panel-header:hover {\n      background: mat-color($background, card);\n    }\n  }\n\n  .mat-expansion-panel-header-title {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-expansion-panel-header-description,\n  .mat-expansion-indicator::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-expansion-panel-header[aria-disabled='true'] {\n    color: mat-color($foreground, disabled-button);\n\n    .mat-expansion-panel-header-title,\n    .mat-expansion-panel-header-description {\n      color: inherit;\n    }\n  }\n}\n\n@mixin mat-expansion-panel-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-expansion-panel-header {\n    font: {\n      family: mat-font-family($config, subheading-1);\n      size: mat-font-size($config, subheading-1);\n      weight: mat-font-weight($config, subheading-1);\n    }\n  }\n\n  .mat-expansion-panel-content {\n    @include mat-typography-level-to-styles($config, body-1);\n  }\n}\n\n@mixin mat-expansion-panel-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $expanded-height: mat-private-density-prop-value(\n        $mat-expansion-panel-header-density-config, $density-scale, expanded-height);\n  $collapsed-height: mat-private-density-prop-value(\n      $mat-expansion-panel-header-density-config, $density-scale, collapsed-height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-expansion-panel-header {\n      height: $collapsed-height;\n\n      &.mat-expanded {\n        height: $expanded-height;\n      }\n    }\n  }\n}\n\n@mixin mat-expansion-panel-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-expansion-panel') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-expansion-panel-color($color);\n    }\n    @if $density != null {\n      @include mat-expansion-panel-density($density);\n    }\n    @if $typography != null {\n      @include mat-expansion-panel-typography($typography);\n    }\n  }\n}\n\n\n\n\n// This mixin will ensure that lines that overflow the container will hide the overflow and\n// truncate neatly with an ellipsis.\n@mixin mat-truncate-line() {\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n}\n\n// Mixin to provide all mat-line styles, changing secondary font size based on whether the list\n// is in dense mode.\n@mixin mat-line-base($secondary-font-size) {\n  .mat-line {\n    @include mat-truncate-line();\n    display: block;\n    box-sizing: border-box;\n\n    // all lines but the top line should have smaller text\n    &:nth-child(n+2) {\n      font-size: $secondary-font-size;\n    }\n  }\n}\n\n// This mixin normalizes default element styles, e.g. font weight for heading text.\n@mixin mat-normalize-text() {\n  & > * {\n    margin: 0;\n    padding: 0;\n    font-weight: normal;\n    font-size: inherit;\n  }\n}\n\n// This mixin provides base styles for the wrapper around mat-line elements in a list.\n@mixin mat-line-wrapper-base() {\n  @include mat-normalize-text();\n\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n  box-sizing: border-box;\n  overflow: hidden;\n\n  // Must remove wrapper when lines are empty or it takes up horizontal\n  // space and pushes other elements to the right.\n  &:empty {\n    display: none;\n  }\n}\n\n\n\n// Include this empty mixin for consistency with the other components.\n@mixin mat-grid-list-color($config-or-theme) {}\n\n@mixin mat-grid-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-grid-tile-header,\n  .mat-grid-tile-footer {\n    @include mat-line-base(mat-font-size($config, caption));\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin _mat-grid-list-density($config-or-theme) {}\n\n@mixin mat-grid-list-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-grid-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-grid-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-grid-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-grid-list-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-icon-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-icon {\n    &.mat-primary {\n      color: mat-color($primary, text);\n    }\n\n    &.mat-accent {\n      color: mat-color($accent, text);\n    }\n\n    &.mat-warn {\n      color: mat-color($warn, text);\n    }\n  }\n}\n\n@mixin mat-icon-typography($config-or-theme) {}\n\n@mixin _mat-icon-density($config-or-theme) {}\n\n@mixin mat-icon-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-icon') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-icon-color($color);\n    }\n    @if $density != null {\n      @include _mat-icon-density($density);\n    }\n    @if $typography != null {\n      @include mat-icon-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Renders a gradient for showing the dashed line when the input is disabled.\n// Unlike using a border, a gradient allows us to adjust the spacing of the dotted line\n// to match the Material Design spec.\n@mixin mat-private-control-disabled-underline($color) {\n  background-image: linear-gradient(to right, $color 0%, $color 33%, transparent 0%);\n  background-size: 4px 100%;\n  background-repeat: repeat-x;\n}\n\n// Figures out the color of the placeholder for a form control.\n// Used primarily to prevent the various form controls from\n// becoming out of sync since these colors aren't in a palette.\n@function mat-private-control-placeholder-color($config) {\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n  @return mat-color($foreground, secondary-text, if($is-dark-theme, 0.5, 0.42));\n}\n\n\n/* stylelint-disable material/no-prefixes */\n@mixin user-select($value) {\n  -webkit-user-select: $value;\n  -moz-user-select: $value;\n  -ms-user-select: $value;\n  user-select: $value;\n}\n\n@mixin input-placeholder {\n  &::placeholder {\n    @content;\n  }\n\n  &::-moz-placeholder {\n    @content;\n  }\n\n  &::-webkit-input-placeholder {\n    @content;\n  }\n\n  &:-ms-input-placeholder {\n    @content;\n  }\n}\n\n@mixin cursor-grab {\n  cursor: -webkit-grab;\n  cursor: grab;\n}\n\n@mixin cursor-grabbing {\n  cursor: -webkit-grabbing;\n  cursor: grabbing;\n}\n\n@mixin backface-visibility($value) {\n  -webkit-backface-visibility: $value;\n  backface-visibility: $value;\n}\n\n@mixin position-sticky($important: false) {\n  position: -webkit-sticky #{if($important, '!important', '')};\n  position: sticky #{if($important, '!important', '')};\n}\n/* stylelint-enable */\n\n\n\n@mixin mat-input-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n\n  .mat-form-field-type-mat-native-select .mat-form-field-infix::after {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-input-element:disabled,\n  .mat-form-field-type-mat-native-select.mat-form-field-disabled .mat-form-field-infix::after {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-input-element {\n    caret-color: mat-color($primary, text);\n\n    @include input-placeholder {\n      color: mat-private-control-placeholder-color($config);\n    }\n\n    // On dark themes we set the native `select` color to some shade of white,\n    // however the color propagates to all of the `option` elements, which are\n    // always on a white background inside the dropdown, causing them to blend in.\n    // Since we can't change background of the dropdown, we need to explicitly\n    // reset the color of the options to something dark.\n    @if (map-get($config, is-dark)) {\n      option {\n        color: $dark-primary-text;\n      }\n\n      option:disabled {\n        color: $dark-disabled-text;\n      }\n    }\n  }\n\n  .mat-form-field.mat-accent .mat-input-element {\n    caret-color: mat-color($accent, text);\n  }\n\n  .mat-form-field.mat-warn .mat-input-element,\n  .mat-form-field-invalid .mat-input-element {\n    caret-color: mat-color($warn, text);\n  }\n\n  .mat-form-field-type-mat-native-select.mat-form-field-invalid .mat-form-field-infix::after {\n    color: mat-color($warn, text);\n  }\n}\n\n@mixin mat-input-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n\n  // <input> elements seem to have their height set slightly too large on Safari causing the text to\n  // be misaligned w.r.t. the placeholder. Adding this margin corrects it.\n  input.mat-input-element {\n    margin-top: -$line-spacing * 1em;\n  }\n}\n\n@mixin _mat-input-density($config-or-theme) {}\n\n@mixin mat-input-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-input') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-input-color($color);\n    }\n    @if $density != null {\n      @include _mat-input-density($density);\n    }\n    @if $typography != null {\n      @include mat-input-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-list-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-list-base {\n    .mat-list-item {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-list-option {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-subheader {\n      color: mat-color($foreground, secondary-text);\n    }\n  }\n\n  .mat-list-item-disabled {\n    background-color: mat-color($background, disabled-list-option);\n  }\n\n  .mat-list-option,\n  .mat-nav-list .mat-list-item,\n  .mat-action-list .mat-list-item {\n    &:hover, &:focus {\n      background: mat-color($background, 'hover');\n    }\n  }\n\n  .mat-list-single-selected-option {\n    &, &:hover, &:focus {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n}\n\n@mixin mat-list-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  $font-family: mat-font-family($config);\n\n  .mat-list-item {\n    font-family: $font-family;\n  }\n\n  .mat-list-option {\n    font-family: $font-family;\n  }\n\n  // Default list\n  .mat-list-base {\n    .mat-list-item {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, subheading-2);\n      @include mat-line-base(mat-font-size($config, body-1));\n    }\n\n    .mat-subheader {\n      font-family: mat-font-family($config, body-2);\n      font-size: mat-font-size($config, body-2);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n\n  // Dense list\n  .mat-list-base[dense] {\n    .mat-list-item {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-list-option {\n      font-size: mat-font-size($config, caption);\n      @include mat-line-base(mat-font-size($config, caption));\n    }\n\n    .mat-subheader {\n      font-family: $font-family;\n      font-size: mat-font-size($config, caption);\n      font-weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-list-density($config-or-theme) {}\n\n@mixin mat-list-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-list') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-list-color($color);\n    }\n    @if $density != null {\n      @include _mat-list-density($density);\n    }\n    @if $typography != null {\n      @include mat-list-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-menu-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-menu-panel {\n    @include mat-private-theme-overridable-elevation(4, $config);\n    background: mat-color($background, 'card');\n  }\n\n  .mat-menu-item {\n    background: transparent;\n    color: mat-color($foreground, 'text');\n\n    &[disabled] {\n      &,\n      &::after,\n      .mat-icon-no-color {\n        color: mat-color($foreground, 'disabled');\n      }\n    }\n  }\n\n  .mat-menu-item .mat-icon-no-color,\n  .mat-menu-item-submenu-trigger::after {\n    color: mat-color($foreground, 'icon');\n  }\n\n  .mat-menu-item:hover,\n  .mat-menu-item.cdk-program-focused,\n  .mat-menu-item.cdk-keyboard-focused,\n  .mat-menu-item-highlighted {\n    &:not([disabled]) {\n      background: mat-color($background, 'hover');\n    }\n  }\n}\n\n@mixin mat-menu-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-menu-item {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    }\n  }\n}\n\n@mixin _mat-menu-density($config-or-theme) {}\n\n@mixin mat-menu-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-menu') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-menu-color($color);\n    }\n    @if $density != null {\n      @include _mat-menu-density($density);\n    }\n    @if $typography != null {\n      @include mat-menu-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n$mat-paginator-height: 56px !default;\n// Minimum height for paginator's in the highest density is determined based on how\n// much the paginator can shrink until the content exceeds (i.e. navigation buttons).\n$mat-paginator-minimum-height: 40px !default;\n$mat-paginator-maximum-height: $mat-paginator-height !default;\n\n$mat-paginator-density-config: (\n  height: (\n    default: $mat-paginator-height,\n    maximum: $mat-paginator-maximum-height,\n    minimum: $mat-paginator-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-paginator-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n\n  .mat-paginator {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-paginator-decrement,\n  .mat-paginator-increment {\n    border-top: 2px solid mat-color($foreground, 'icon');\n    border-right: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-paginator-first,\n  .mat-paginator-last {\n    border-top: 2px solid mat-color($foreground, 'icon');\n  }\n\n  .mat-icon-button[disabled] {\n    .mat-paginator-decrement,\n    .mat-paginator-increment,\n    .mat-paginator-first,\n    .mat-paginator-last {\n      border-color: mat-color($foreground, 'disabled');\n    }\n  }\n}\n\n@mixin mat-paginator-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-paginator,\n  .mat-paginator-page-size .mat-select-trigger {\n    font: {\n      family: mat-font-family($config, caption);\n      size: mat-font-size($config, caption);\n    }\n  }\n}\n\n@mixin mat-paginator-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-paginator-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-paginator-container {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-paginator-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-paginator') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-paginator-color($color);\n    }\n    @if $density != null {\n      @include mat-paginator-density($density);\n    }\n    @if $typography != null {\n      @include mat-paginator-typography($typography);\n    }\n  }\n}\n\n\n\n\n@mixin mat-progress-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-bar-background {\n    fill: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-buffer {\n    background-color: mat-color($primary, lighter);\n  }\n\n  .mat-progress-bar-fill::after {\n    background-color: mat-color($primary);\n  }\n\n  .mat-progress-bar.mat-accent {\n    .mat-progress-bar-background {\n      fill: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($accent, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($accent);\n    }\n  }\n\n  .mat-progress-bar.mat-warn {\n    .mat-progress-bar-background {\n      fill: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-buffer {\n      background-color: mat-color($warn, lighter);\n    }\n\n    .mat-progress-bar-fill::after {\n      background-color: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-bar-typography($config-or-theme) {}\n\n@mixin _mat-progress-bar-density($config-or-theme) {}\n\n@mixin mat-progress-bar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-progress-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-progress-spinner-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-progress-spinner, .mat-spinner {\n    circle {\n      stroke: mat-color($primary);\n    }\n\n    &.mat-accent circle {\n      stroke: mat-color($accent);\n    }\n\n    &.mat-warn circle {\n      stroke: mat-color($warn);\n    }\n  }\n}\n\n@mixin mat-progress-spinner-typography($config-or-theme) {}\n\n@mixin _mat-progress-spinner-density($config-or-theme) {}\n\n@mixin mat-progress-spinner-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-progress-spinner') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-progress-spinner-color($color);\n    }\n    @if $density != null {\n      @include _mat-progress-spinner-density($density);\n    }\n    @if $typography != null {\n      @include mat-progress-spinner-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin _mat-radio-color($palette) {\n  &.mat-radio-checked .mat-radio-outer-circle {\n    border-color: mat-color($palette);\n  }\n\n  .mat-radio-inner-circle,\n  .mat-radio-ripple .mat-ripple-element:not(.mat-radio-persistent-ripple),\n  &.mat-radio-checked .mat-radio-persistent-ripple,\n  &:active .mat-radio-persistent-ripple {\n    background-color: mat-color($palette);\n  }\n}\n\n@mixin mat-radio-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-radio-outer-circle {\n    border-color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-radio-button {\n    &.mat-primary {\n      @include _mat-radio-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-radio-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-radio-color($warn);\n    }\n\n    // This needs extra specificity, because the classes above are combined\n    // (e.g. `.mat-radio-button.mat-accent`) which increases their specificity a lot.\n    // TODO: consider making the selectors into descendants (`.mat-primary .mat-radio-button`).\n    &.mat-radio-disabled {\n      &.mat-radio-checked .mat-radio-outer-circle,\n      .mat-radio-outer-circle {\n        border-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-ripple .mat-ripple-element,\n      .mat-radio-inner-circle {\n        background-color: mat-color($foreground, disabled);\n      }\n\n      .mat-radio-label-content {\n        color: mat-color($foreground, disabled);\n      }\n    }\n\n    // Switch this to a solid color since we're using `opacity`\n    // to control how opaque the ripple should be.\n    .mat-ripple-element {\n      background-color: map-get($foreground, base);\n    }\n  }\n}\n\n@mixin mat-radio-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-radio-button {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-radio-density($config-or-theme) {}\n\n@mixin mat-radio-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-radio') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-radio-color($color);\n    }\n    @if $density != null {\n      @include _mat-radio-density($density);\n    }\n    @if $typography != null {\n      @include mat-radio-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n@mixin mat-select-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-select-value {\n    color: mat-color($foreground, text);\n  }\n\n  .mat-select-placeholder {\n    color: mat-private-control-placeholder-color($config);\n  }\n\n  .mat-select-disabled .mat-select-value {\n    color: mat-color($foreground, disabled-text);\n  }\n\n  .mat-select-arrow {\n    color: mat-color($foreground, secondary-text);\n  }\n\n  .mat-select-panel {\n    background: mat-color($background, card);\n    @include mat-private-theme-overridable-elevation(4, $config);\n\n    .mat-option.mat-selected:not(.mat-option-multiple) {\n      background: mat-color($background, hover, 0.12);\n    }\n  }\n\n  .mat-form-field {\n    &.mat-focused {\n      &.mat-primary .mat-select-arrow {\n        color: mat-color($primary, text);\n      }\n\n      &.mat-accent .mat-select-arrow {\n        color: mat-color($accent, text);\n      }\n\n      &.mat-warn .mat-select-arrow {\n        color: mat-color($warn, text);\n      }\n    }\n\n    .mat-select.mat-select-invalid .mat-select-arrow {\n      color: mat-color($warn, text);\n    }\n\n    .mat-select.mat-select-disabled .mat-select-arrow {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n}\n\n@mixin mat-select-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  .mat-select {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-select-trigger {\n    height: $line-height * 1em;\n  }\n}\n\n@mixin _mat-select-density($config-or-theme) {}\n\n@mixin mat-select-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-select') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-select-color($color);\n    }\n    @if $density != null {\n      @include _mat-select-density($density);\n    }\n    @if $typography != null {\n      @include mat-select-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-sidenav-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $drawer-background-color: mat-color($background, dialog);\n  $drawer-container-background-color:  mat-color($background, background);\n  $drawer-push-background-color: mat-color($background, dialog);\n  $drawer-side-border: solid 1px mat-color($foreground, divider);\n\n  .mat-drawer-container {\n    background-color: $drawer-container-background-color;\n    color: mat-color($foreground, text);\n  }\n\n  .mat-drawer {\n    background-color: $drawer-background-color;\n    color: mat-color($foreground, text);\n\n    &.mat-drawer-push {\n      background-color: $drawer-push-background-color;\n    }\n\n    &:not(.mat-drawer-side) {\n      // The elevation of z-16 is noted in the design specifications.\n      // See https://material.io/design/components/navigation-drawer.html\n      @include mat-private-theme-elevation(16, $config);\n    }\n  }\n\n  .mat-drawer-side {\n    border-right: $drawer-side-border;\n\n    &.mat-drawer-end {\n      border-left: $drawer-side-border;\n      border-right: none;\n    }\n  }\n\n  [dir='rtl'] .mat-drawer-side {\n    border-left: $drawer-side-border;\n    border-right: none;\n\n    &.mat-drawer-end {\n      border-left: none;\n      border-right: $drawer-side-border;\n    }\n  }\n\n  .mat-drawer-backdrop.mat-drawer-shown {\n    $opacity: 0.6;\n    $backdrop-color: mat-color($background, card, $opacity);\n\n    @if (type-of($backdrop-color) == color) {\n      // We use invert() here to have the darken the background color expected to be used. If the\n      // background is light, we use a dark backdrop. If the background is dark,\n      // we use a light backdrop.\n      background-color: invert($backdrop-color);\n    }\n    @else {\n      // If we couldn't resolve the backdrop color to a color value, fall back to using\n      // `opacity` to make it opaque since its end value could be a solid color.\n      background-color: $backdrop-color;\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-sidenav-typography($config-or-theme) {}\n\n@mixin _mat-sidenav-density($config-or-theme) {}\n\n@mixin mat-sidenav-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-sidenav') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sidenav-color($color);\n    }\n    @if $density != null {\n      @include _mat-sidenav-density($density);\n    }\n    @if $typography != null {\n      @include mat-sidenav-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-slide-toggle-checked($palette, $thumb-checked-hue) {\n  &.mat-checked {\n    .mat-slide-toggle-thumb {\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n\n    .mat-slide-toggle-bar {\n      // Opacity is determined from the specs for the selection controls.\n      // See: https://material.io/design/components/selection-controls.html#specs\n      background-color: mat-color($palette, $thumb-checked-hue, 0.54);\n    }\n\n    .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: mat-color($palette, $thumb-checked-hue);\n    }\n  }\n}\n\n@mixin mat-slide-toggle-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark: map-get($config, is-dark);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  // Color hues are based on the specs which briefly show the hues that are applied to a switch.\n  // The 2018 specs no longer describe how dark switches should look like. Due to the lack of\n  // information for dark themed switches, we partially keep the old behavior that is based on\n  // the previous specifications. For the checked color we always use the `default` hue because\n  // that follows MDC and also makes it easier for people to create a custom theme without needing\n  // to specify each hue individually.\n  $thumb-unchecked-hue: if($is-dark, 400, 50);\n  $thumb-checked-hue: default;\n\n  $bar-unchecked-color: mat-color($foreground, disabled);\n  $ripple-unchecked-color: mat-color($foreground, base);\n\n  .mat-slide-toggle {\n    @include _mat-slide-toggle-checked($accent, $thumb-checked-hue);\n\n    &.mat-primary {\n      @include _mat-slide-toggle-checked($primary, $thumb-checked-hue);\n    }\n\n    &.mat-warn {\n      @include _mat-slide-toggle-checked($warn, $thumb-checked-hue);\n    }\n\n    &:not(.mat-checked) .mat-ripple-element {\n      // Set no opacity for the ripples because the ripple opacity will be adjusted dynamically\n      // based on the type of interaction with the slide-toggle (e.g. for hover, focus)\n      background-color: $ripple-unchecked-color;\n    }\n  }\n\n  .mat-slide-toggle-thumb {\n    @include mat-private-theme-elevation(1, $config);\n    background-color: mat-color($mat-grey, $thumb-unchecked-hue);\n  }\n\n  .mat-slide-toggle-bar {\n    background-color: $bar-unchecked-color;\n  }\n}\n\n@mixin mat-slide-toggle-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slide-toggle-content {\n    font-family: mat-font-family($config);\n  }\n}\n\n@mixin _mat-slide-toggle-density($config-or-theme) {}\n\n@mixin mat-slide-toggle-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-slide-toggle') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slide-toggle-color($color);\n    }\n    @if $density != null {\n      @include _mat-slide-toggle-density($density);\n    }\n    @if $typography != null {\n      @include mat-slide-toggle-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n@mixin _mat-slider-inner-content-theme($palette) {\n  .mat-slider-track-fill,\n  .mat-slider-thumb,\n  .mat-slider-thumb-label {\n    background-color: mat-color($palette);\n  }\n\n  .mat-slider-thumb-label-text {\n    color: mat-color($palette, default-contrast);\n  }\n\n  .mat-slider-focus-ring {\n    $opacity: 0.2;\n    $color: mat-color($palette, default, $opacity);\n    background-color: $color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($color) != color) {\n      opacity: $opacity;\n    }\n  }\n}\n\n@mixin mat-slider-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  $mat-slider-off-color: mat-color($foreground, slider-off);\n  $mat-slider-off-focused-color: mat-color($foreground, slider-off-active);\n  $mat-slider-disabled-color: mat-color($foreground, slider-off);\n  $mat-slider-labeled-min-value-thumb-color: mat-color($foreground, slider-min);\n  $mat-slider-labeled-min-value-thumb-label-color: mat-color($foreground, slider-off);\n  $mat-slider-tick-opacity: 0.7;\n  $mat-slider-tick-color: mat-color($foreground, base, $mat-slider-tick-opacity);\n  $mat-slider-tick-size: 2px;\n\n  .mat-slider-track-background {\n    background-color: $mat-slider-off-color;\n  }\n\n  .mat-primary {\n    @include _mat-slider-inner-content-theme($primary);\n  }\n\n  .mat-accent {\n    @include _mat-slider-inner-content-theme($accent);\n  }\n\n  .mat-warn {\n    @include _mat-slider-inner-content-theme($warn);\n  }\n\n  .mat-slider:hover,\n  .cdk-focused {\n    .mat-slider-track-background {\n      background-color: $mat-slider-off-focused-color;\n    }\n  }\n\n  .mat-slider-disabled {\n    .mat-slider-track-background,\n    .mat-slider-track-fill,\n    .mat-slider-thumb {\n      background-color: $mat-slider-disabled-color;\n    }\n\n    &:hover {\n      .mat-slider-track-background {\n        background-color: $mat-slider-disabled-color;\n      }\n    }\n  }\n\n  .mat-slider-min-value {\n    .mat-slider-focus-ring {\n      $opacity: 0.12;\n      $color: mat-color($foreground, base, $opacity);\n      background-color: $color;\n\n      // `mat-color` uses `rgba` for the opacity which won't work with\n      // CSS variables so we need to use `opacity` as a fallback.\n      @if (type-of($color) != color) {\n        opacity: $opacity;\n      }\n    }\n\n    &.mat-slider-thumb-label-showing {\n      .mat-slider-thumb,\n      .mat-slider-thumb-label {\n        background-color: $mat-slider-labeled-min-value-thumb-color;\n      }\n\n      &.cdk-focused {\n        .mat-slider-thumb,\n        .mat-slider-thumb-label {\n          background-color: $mat-slider-labeled-min-value-thumb-label-color;\n        }\n      }\n    }\n\n    &:not(.mat-slider-thumb-label-showing) {\n      .mat-slider-thumb {\n        border-color: $mat-slider-off-color;\n        background-color: transparent;\n      }\n\n      &:hover,\n      &.cdk-focused {\n        .mat-slider-thumb {\n          border-color: $mat-slider-off-focused-color;\n        }\n\n        &.mat-slider-disabled .mat-slider-thumb {\n          border-color: $mat-slider-disabled-color;\n        }\n      }\n    }\n  }\n\n  .mat-slider-has-ticks .mat-slider-wrapper::after {\n    border-color: $mat-slider-tick-color;\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-horizontal .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to right, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n    // Firefox doesn't draw the gradient correctly with 'to right'\n    // (see https://bugzilla.mozilla.org/show_bug.cgi?id=1314319).\n    background-image: -moz-repeating-linear-gradient(0.0001deg, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n\n  .mat-slider-vertical .mat-slider-ticks {\n    background-image: repeating-linear-gradient(to bottom, $mat-slider-tick-color,\n        $mat-slider-tick-color $mat-slider-tick-size, transparent 0, transparent);\n\n    // `mat-color` uses `rgba` for the opacity which won't work with\n    // CSS variables so we need to use `opacity` as a fallback.\n    @if (type-of($mat-slider-tick-color) != color) {\n      opacity: $mat-slider-tick-opacity;\n    }\n  }\n}\n\n@mixin mat-slider-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-slider-thumb-label-text {\n    font: {\n      family: mat-font-family($config);\n      size: mat-font-size($config, caption);\n      weight: mat-font-weight($config, body-2);\n    }\n  }\n}\n\n@mixin _mat-slider-density($config-or-theme) {}\n\n@mixin mat-slider-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-slider') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-slider-color($color);\n    }\n    @if $density != null {\n      @include _mat-slider-density($density);\n    }\n    @if $typography != null {\n      @include mat-slider-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-stepper-header-height: 72px !default;\n// Minimum height for highest density stepper's is determined based on how much\n// stepper headers can shrink until the step icon or step label exceed. We can't use\n// a value below `42px` because the optional label for steps would otherwise exceed.\n$mat-stepper-header-minimum-height: 42px !default;\n$mat-stepper-header-maximum-height: $mat-stepper-header-height !default;\n\n$mat-stepper-density-config: (\n  height: (\n    default: $mat-stepper-header-height,\n    maximum: $mat-stepper-header-maximum-height,\n    minimum: $mat-stepper-header-minimum-height,\n  )\n) !default;\n\n// Note: These variables are not denoted with `!default` because they are used in the non-theme\n// component styles. Modifying these variables does not have the desired effect for consumers.\n$mat-stepper-label-header-height: 24px;\n$mat-stepper-label-position-bottom-top-gap: 16px;\n$mat-stepper-label-min-width: 50px;\n\n$mat-vertical-stepper-content-margin: 36px;\n\n$mat-stepper-side-gap: 24px;\n$mat-stepper-line-width: 1px;\n$mat-stepper-line-gap: 8px;\n\n$mat-step-sub-label-font-size: 12px;\n$mat-step-header-icon-size: 16px;\n\n\n@mixin mat-stepper-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $background: map-get($config, background);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n\n  .mat-step-header {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused,\n    &:hover {\n      background-color: mat-color($background, hover);\n    }\n\n    // On touch devices the :hover state will linger on the element after a tap.\n    // Reset it via `@media` after the declaration, because the media query isn't\n    // supported by all browsers yet.\n    @media (hover: none) {\n      &:hover {\n        background: none;\n      }\n    }\n\n    .mat-step-label,\n    .mat-step-optional {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      color: mat-color($foreground, secondary-text);\n    }\n\n    .mat-step-icon {\n      // TODO(josephperrott): Update to using a corrected disabled-text contrast\n      // instead of secondary-text.\n      background-color: mat-color($foreground, secondary-text);\n      color: mat-color($primary, default-contrast);\n    }\n\n    .mat-step-icon-selected,\n    .mat-step-icon-state-done,\n    .mat-step-icon-state-edit {\n      background-color: mat-color($primary);\n      color: mat-color($primary, default-contrast);\n    }\n\n    &.mat-accent {\n      .mat-step-icon {\n        color: mat-color($accent, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($accent);\n        color: mat-color($accent, default-contrast);\n      }\n    }\n\n    &.mat-warn {\n      .mat-step-icon {\n        color: mat-color($warn, default-contrast);\n      }\n\n      .mat-step-icon-selected,\n      .mat-step-icon-state-done,\n      .mat-step-icon-state-edit {\n        background-color: mat-color($warn);\n        color: mat-color($warn, default-contrast);\n      }\n    }\n\n    .mat-step-icon-state-error {\n      background-color: transparent;\n      color: mat-color($warn, text);\n    }\n\n    .mat-step-label.mat-step-label-active {\n      color: mat-color($foreground, text);\n    }\n\n    .mat-step-label.mat-step-label-error {\n      color: mat-color($warn, text);\n    }\n  }\n\n  .mat-stepper-horizontal, .mat-stepper-vertical {\n    background-color: mat-color($background, card);\n  }\n\n  .mat-stepper-vertical-line::before {\n    border-left-color: mat-color($foreground, divider);\n  }\n\n  .mat-horizontal-stepper-header::before,\n  .mat-horizontal-stepper-header::after,\n  .mat-stepper-horizontal-line {\n    border-top-color: mat-color($foreground, divider);\n  }\n}\n\n@mixin mat-stepper-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-stepper-vertical, .mat-stepper-horizontal {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-step-label {\n    font: {\n      size: mat-font-size($config, body-1);\n      weight: mat-font-weight($config, body-1);\n    };\n  }\n\n  .mat-step-sub-label-error {\n    font-weight: normal;\n  }\n\n  .mat-step-label-error {\n    font-size: mat-font-size($config, body-2);\n  }\n\n  .mat-step-label-selected {\n    font: {\n      size: mat-font-size($config, body-2);\n      weight: mat-font-weight($config, body-2);\n    };\n  }\n}\n\n@mixin mat-stepper-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-stepper-density-config, $density-scale, height);\n  $vertical-padding: ($height - $mat-stepper-label-header-height) / 2;\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-horizontal-stepper-header {\n      height: $height;\n    }\n\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header,\n    .mat-vertical-stepper-header {\n      padding: $vertical-padding $mat-stepper-side-gap;\n    }\n\n    // Ensures that the vertical lines for the step content exceed into the step\n    // headers with a given distance (`$mat-stepper-line-gap`) to the step icon.\n    .mat-stepper-vertical-line::before {\n      top: $mat-stepper-line-gap - $vertical-padding;\n      bottom: $mat-stepper-line-gap - $vertical-padding;\n    }\n\n    // Ensures that the horizontal lines for the step header are centered vertically.\n    .mat-stepper-label-position-bottom .mat-horizontal-stepper-header {\n      &::after, &::before {\n        top: $vertical-padding + $mat-stepper-label-header-height / 2;\n      }\n    }\n\n    // Ensures that the horizontal line for the step content is aligned centered vertically.\n    .mat-stepper-label-position-bottom .mat-stepper-horizontal-line {\n      top: $vertical-padding + $mat-stepper-label-header-height / 2;\n    }\n  }\n}\n\n@mixin mat-stepper-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-stepper') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-stepper-color($color);\n    }\n    @if $density != null {\n      @include mat-stepper-density($density);\n    }\n    @if $typography != null {\n      @include mat-stepper-typography($typography);\n    }\n  }\n}\n\n\n\n@mixin mat-sort-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-sort-header-arrow {\n    $table-background: mat-color($background, 'card');\n    $text-color: mat-color($foreground, secondary-text);\n\n    // Because the arrow is made up of multiple elements that are stacked on top of each other,\n    // we can't use the semi-transparent color from the theme directly. If the value is a color\n    // *type*, we convert it into a solid color by taking the opacity from the rgba value and\n    // using the value to determine the percentage of the background to put into foreground\n    // when mixing the colors together. Otherwise, if it resolves to something different\n    // (e.g. it resolves to a CSS variable), we use the color directly.\n    @if (type-of($table-background) == color and type-of($text-color) == color) {\n      $text-opacity: opacity($text-color);\n      color: mix($table-background, rgba($text-color, 1), (1 - $text-opacity) * 100%);\n    }\n    @else {\n      color: $text-color;\n    }\n  }\n}\n\n@mixin mat-sort-typography($config-or-theme) {}\n\n@mixin _mat-sort-density($config-or-theme) {}\n\n@mixin mat-sort-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-sort') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-sort-color($color);\n    }\n    @if $density != null {\n      @include _mat-sort-density($density);\n    }\n    @if $typography != null {\n      @include mat-sort-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n@mixin mat-tabs-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $header-border: 1px solid mat-color($foreground, divider);\n\n  .mat-tab-nav-bar,\n  .mat-tab-header {\n    border-bottom: $header-border;\n  }\n\n  .mat-tab-group-inverted-header {\n    .mat-tab-nav-bar,\n    .mat-tab-header {\n      border-top: $header-border;\n      border-bottom: none;\n    }\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    color: mat-color($foreground, text);\n\n    &.mat-tab-disabled {\n      color: mat-color($foreground, disabled-text);\n    }\n  }\n\n  .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, text);\n  }\n\n  .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($foreground, disabled-text);\n  }\n\n  // Remove header border when there is a background color\n  .mat-tab-group[class*='mat-background-'] .mat-tab-header,\n  .mat-tab-nav-bar[class*='mat-background-'] {\n    border-bottom: none;\n    border-top: none;\n  }\n\n  .mat-tab-group, .mat-tab-nav-bar {\n    $theme-colors: (\n      primary: $primary,\n      accent: $accent,\n      warn: $warn\n    );\n\n    @each $name, $color in $theme-colors {\n      // Set the foreground color of the tabs\n      &.mat-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-ink-bar($color);\n\n        // Override ink bar when background color is the same\n        &.mat-background-#{$name} {\n          > .mat-tab-header, > .mat-tab-link-container {\n            @include _mat-ink-bar($color, default-contrast);\n          }\n        }\n      }\n    }\n\n    @each $name, $color in $theme-colors {\n      // Set background color of the tabs and override focus color\n      &.mat-background-#{$name} {\n        @include _mat-tab-label-focus($color);\n        @include _mat-tabs-background($color);\n      }\n    }\n  }\n}\n\n@mixin _mat-ink-bar($color, $hue: default) {\n  .mat-ink-bar {\n    background-color: mat-color($color, $hue);\n  }\n}\n\n@mixin _mat-tab-label-focus($tab-focus-color) {\n  .mat-tab-label,\n  .mat-tab-link {\n    &.cdk-keyboard-focused,\n    &.cdk-program-focused {\n      &:not(.mat-tab-disabled) {\n        background-color: mat-color($tab-focus-color, lighter, 0.3);\n      }\n    }\n  }\n}\n\n@mixin _mat-tabs-background($background-color) {\n  // Note that these selectors target direct descendants so\n  // that the styles don't apply to any nested tab groups.\n\n  // Set background color for the tab group\n  > .mat-tab-header, > .mat-tab-link-container, > .mat-tab-header-pagination {\n    background-color: mat-color($background-color);\n  }\n\n  // Set labels to contrast against background\n  > .mat-tab-header .mat-tab-label, > .mat-tab-link-container .mat-tab-link {\n    color: mat-color($background-color, default-contrast);\n\n    &.mat-tab-disabled {\n      color: mat-color($background-color, default-contrast, 0.4);\n    }\n  }\n\n  // Set pagination chevrons to contrast background\n  > .mat-tab-header-pagination .mat-tab-header-pagination-chevron,\n  > .mat-tab-links .mat-focus-indicator::before,\n  > .mat-tab-header .mat-focus-indicator::before {\n    border-color: mat-color($background-color, default-contrast);\n  }\n\n  > .mat-tab-header-pagination-disabled .mat-tab-header-pagination-chevron {\n    border-color: mat-color($background-color, default-contrast, 0.4);\n  }\n\n  // Set ripples color to be the contrast color of the new background. Otherwise the ripple\n  // color will be based on the app background color.\n  > .mat-tab-header .mat-ripple-element,\n  > .mat-tab-link-container .mat-ripple-element {\n    background-color: mat-color($background-color, default-contrast, 0.12);\n  }\n}\n\n@mixin mat-tabs-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tab-group {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tab-label, .mat-tab-link {\n    font: {\n      family: mat-font-family($config, button);\n      size: mat-font-size($config, button);\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-tabs-density($config-or-theme) {}\n\n@mixin mat-tabs-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tabs') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tabs-color($color);\n    }\n    @if $density != null {\n      @include _mat-tabs-density($density);\n    }\n    @if $typography != null {\n      @include mat-tabs-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n// Minimum height for toolbar's in the highest density is difficult to determine because\n// developers can project arbitrary content. We use a minimum value that ensures that most\n// common content (e.g. icon buttons) does not exceed the row boundaries in highest density.\n$mat-toolbar-minimum-height: 44px !default;\n\n$mat-toolbar-height-desktop: 64px !default;\n$mat-toolbar-maximum-height-desktop: $mat-toolbar-height-desktop !default;\n$mat-toolbar-minimum-height-desktop: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-height-mobile: 56px !default;\n$mat-toolbar-maximum-height-mobile: $mat-toolbar-height-mobile !default;\n$mat-toolbar-minimum-height-mobile: $mat-toolbar-minimum-height !default;\n\n$mat-toolbar-desktop-density-config: (\n  height: (\n    default: $mat-toolbar-height-desktop,\n    maximum: $mat-toolbar-maximum-height-desktop,\n    minimum: $mat-toolbar-minimum-height-desktop,\n  )\n) !default;\n\n$mat-toolbar-mobile-density-config: (\n  height: (\n    default: $mat-toolbar-height-mobile,\n    maximum: $mat-toolbar-maximum-height-mobile,\n    minimum: $mat-toolbar-minimum-height-mobile,\n  )\n) !default;\n\n\n@mixin _mat-toolbar-height($height) {\n  .mat-toolbar-multiple-rows {\n    min-height: $height;\n  }\n  .mat-toolbar-row, .mat-toolbar-single-row {\n    height: $height;\n  }\n}\n\n@mixin _mat-toolbar-color($palette) {\n  background: mat-color($palette);\n  color: mat-color($palette, default-contrast);\n}\n\n@mixin _mat-toolbar-form-field-overrides {\n  .mat-form-field-underline,\n  .mat-form-field-ripple,\n  .mat-focused .mat-form-field-ripple {\n    background-color: currentColor;\n  }\n\n  .mat-form-field-label,\n  .mat-focused .mat-form-field-label,\n  .mat-select-value,\n  .mat-select-arrow,\n  .mat-form-field.mat-focused .mat-select-arrow {\n    color: inherit;\n  }\n\n  .mat-input-element {\n    caret-color: currentColor;\n  }\n}\n\n@mixin mat-toolbar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-toolbar {\n    background: mat-color($background, app-bar);\n    color: mat-color($foreground, text);\n\n    &.mat-primary {\n      @include _mat-toolbar-color($primary);\n    }\n\n    &.mat-accent {\n      @include _mat-toolbar-color($accent);\n    }\n\n    &.mat-warn {\n      @include _mat-toolbar-color($warn);\n    }\n\n    @include _mat-toolbar-form-field-overrides;\n  }\n}\n\n@mixin mat-toolbar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-toolbar,\n  .mat-toolbar h1,\n  .mat-toolbar h2,\n  .mat-toolbar h3,\n  .mat-toolbar h4,\n  .mat-toolbar h5,\n  .mat-toolbar h6 {\n    @include mat-typography-level-to-styles($config, title);\n    margin: 0;\n  }\n}\n\n@mixin mat-toolbar-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height-desktop: mat-private-density-prop-value(\n      $mat-toolbar-desktop-density-config, $density-scale, height);\n  $height-mobile: mat-private-density-prop-value(\n      $mat-toolbar-mobile-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    // Set the default height for the toolbar.\n    @include _mat-toolbar-height($height-desktop);\n\n    // As per specs, toolbars should have a different height in mobile devices. This has been\n    // specified in the old guidelines and is still observable in the new specifications by\n    // looking at the spec images. See: https://material.io/design/components/app-bars-top.html#anatomy\n    @media ($mat-xsmall) {\n      @include _mat-toolbar-height($height-mobile);\n    }\n  }\n}\n\n@mixin mat-toolbar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-toolbar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-toolbar-color($color);\n    }\n    @if $density != null {\n      @include mat-toolbar-density($density);\n    }\n    @if $typography != null {\n      @include mat-toolbar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-tooltip-target-height: 22px;\n$mat-tooltip-font-size: 10px;\n$mat-tooltip-vertical-padding: ($mat-tooltip-target-height - $mat-tooltip-font-size) / 2;\n\n$mat-tooltip-handset-target-height: 30px;\n$mat-tooltip-handset-font-size: 14px;\n$mat-tooltip-handset-vertical-padding:\n    ($mat-tooltip-handset-target-height - $mat-tooltip-handset-font-size) / 2;\n\n@mixin mat-tooltip-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n\n  .mat-tooltip {\n    background: mat-color($background, tooltip, 0.9);\n  }\n}\n\n@mixin mat-tooltip-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tooltip {\n    font-family: mat-font-family($config);\n    font-size: $mat-tooltip-font-size;\n    padding-top: $mat-tooltip-vertical-padding;\n    padding-bottom: $mat-tooltip-vertical-padding;\n  }\n\n  .mat-tooltip-handset {\n    font-size: $mat-tooltip-handset-font-size;\n    padding-top: $mat-tooltip-handset-vertical-padding;\n    padding-bottom: $mat-tooltip-handset-vertical-padding;\n  }\n}\n\n@mixin _mat-tooltip-density($config-or-theme) {}\n\n@mixin mat-tooltip-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tooltip') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tooltip-color($color);\n    }\n    @if $density != null {\n      @include _mat-tooltip-density($density);\n    }\n    @if $typography != null {\n      @include mat-tooltip-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n@mixin mat-snack-bar-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $is-dark-theme: map-get($config, is-dark);\n  $accent: map-get($config, accent);\n\n  .mat-snack-bar-container {\n    // Use the primary text on the dark theme, even though the lighter one uses\n    // a secondary, because the contrast on the light primary text is poor.\n    color: if($is-dark-theme, $dark-primary-text, $light-secondary-text);\n    background: if($is-dark-theme, map-get($mat-grey, 50), #323232);\n\n    @include mat-private-theme-elevation(6, $config);\n  }\n\n  .mat-simple-snackbar-action {\n    color: if($is-dark-theme, inherit, mat-color($accent, text));\n  }\n}\n\n@mixin mat-snack-bar-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-simple-snackbar {\n    font: {\n      family: mat-font-family($config, body-1);\n      size: mat-font-size($config, body-1);\n    }\n  }\n\n  .mat-simple-snackbar-action {\n    line-height: 1;\n    font: {\n      family: inherit;\n      size: inherit;\n      weight: mat-font-weight($config, button);\n    }\n  }\n}\n\n@mixin _mat-snack-bar-density($config-or-theme) {}\n\n@mixin mat-snack-bar-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-snack-bar') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-snack-bar-color($color);\n    }\n    @if $density != null {\n      @include _mat-snack-bar-density($density);\n    }\n    @if $typography != null {\n      @include mat-snack-bar-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the fill appearance of the form-field.\n\n@mixin mat-form-field-fill-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $fill-background: mat-color($foreground, base, if($is-dark-theme, 0.1, 0.04));\n  $fill-disabled-background: mat-color($foreground, base, if($is-dark-theme, 0.05, 0.02));\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.5, 0.42));\n  $label-disabled-color: mat-color($foreground, disabled-text);\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-flex {\n      background-color: $fill-background;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-flex {\n      background-color: $fill-disabled-background;\n    }\n\n    .mat-form-field-underline::before {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-underline::before {\n        background-color: transparent;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-fill-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-fill-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-fill-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-fill-dedupe;\n\n  $mat-form-field-fill-dedupe: $mat-form-field-fill-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-fill-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding on top of the infix.\n  $infix-padding-top: 0.25em;\n  // The padding below the infix.\n  $infix-padding-bottom: 0.75em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The amount we offset the label from the input text in the fill appearance.\n  $fill-appearance-label-offset: -0.5em;\n\n  .mat-form-field-appearance-fill {\n    .mat-form-field-infix {\n      padding: $infix-padding-top 0 $infix-padding-bottom 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding-top;\n      margin-top: $fill-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-fill-label-floating(\n                $subscript-font-scale, $infix-padding-top + $fill-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-fill-density($config-or-theme) {}\n\n@mixin mat-form-field-fill-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-fill') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-fill-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-fill-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-fill-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the legacy appearance of the form-field.\n\n@mixin mat-form-field-legacy-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-color: mat-color($foreground, secondary-text);\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-label {\n      color: $label-color;\n    }\n\n    .mat-hint {\n      color: $label-color;\n    }\n\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-legacy-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-legacy-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  // We use perspective to fix the text blurriness as described here:\n  // http://www.useragentman.com/blog/2014/05/04/fixing-typography-inside-of-2-d-css-transforms/\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding) scale($font-scale) perspective(100px)\n  translateZ(0.001px + $mat-form-field-legacy-dedupe);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  -ms-transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n\n  width: 100% / $font-scale + $mat-form-field-legacy-dedupe;\n\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n// Same as mixin above, but omits the translateZ for printing purposes.\n@mixin _mat-form-field-legacy-label-floating-print($font-scale, $infix-padding, $infix-margin-top) {\n  // This results in a small jitter after the label floats on Firefox, which the\n  // translateZ fixes.\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-legacy-dedupe)\n                  scale($font-scale);\n  // The tricks above used to smooth out the animation on chrome and firefox actually make things\n  // worse on IE, so we don't include them in the IE version.\n  $mat-form-field-legacy-dedupe: $mat-form-field-legacy-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-legacy-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount of space between the top of the line and the top of the actual text\n  // (as a fraction of the font-size).\n  $line-spacing: ($line-height - 1) / 2;\n  // The padding on the infix. Mocks show half of the text size, but seem to measure from the edge\n  // of the text itself, not the edge of the line; therefore we subtract off the line spacing.\n  $infix-padding: 0.5em - $line-spacing;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size. We again need to subtract off the line spacing since the mocks measure to the edge of the\n  // text, not the  edge of the line.\n  $subscript-margin-top: 0.5em / $subscript-font-scale - ($line-spacing * 2);\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field-appearance-legacy {\n    .mat-form-field-wrapper {\n      padding-bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-infix {\n      padding: $infix-padding 0;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n      .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-legacy-label-floating(\n                $subscript-font-scale, $infix-padding, $infix-margin-top);\n      }\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n    }\n\n    .mat-form-field-underline {\n      // We want the underline to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount.\n      bottom: $wrapper-padding-bottom;\n    }\n\n    .mat-form-field-subscript-wrapper {\n      margin-top: $subscript-margin-top;\n\n      // We want the subscript to start at the end of the content box, not the padding box,\n      // so we move it up by the padding amount (adjusted for the smaller font size);\n      top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n    }\n  }\n\n  // translateZ causes the label to not appear while printing, so we override it to not\n  // apply translateZ while printing\n  @media print {\n    .mat-form-field-appearance-legacy {\n      &.mat-form-field-can-float {\n        &.mat-form-field-should-float .mat-form-field-label,\n        .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // @breaking-change 8.0.0 will rely on AutofillMonitor instead.\n        .mat-form-field-autofill-control:-webkit-autofill + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n\n        // Server-side rendered matInput with a label attribute but label not shown\n        // (used as a pure CSS stand-in for mat-form-field-should-float).\n        .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n          @include _mat-form-field-legacy-label-floating-print(\n                  $subscript-font-scale, $infix-padding, $infix-margin-top);\n        }\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-legacy-density($config-or-theme) {}\n\n@mixin mat-form-field-legacy-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-legacy') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-legacy-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-legacy-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-legacy-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n// Theme styles that only apply to the outline appearance of the form-field.\n\n@mixin mat-form-field-outline-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $label-disabled-color: mat-color($foreground, disabled-text);\n  $outline-color: mat-color($foreground, divider, if($is-dark-theme, 0.3, 0.12));\n  $outline-color-hover: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $outline-color-primary: mat-color($primary);\n  $outline-color-accent: mat-color($accent);\n  $outline-color-warn: mat-color($warn);\n  $outline-color-disabled: mat-color($foreground, divider, if($is-dark-theme, 0.15, 0.06));\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-outline {\n      color: $outline-color;\n    }\n\n    .mat-form-field-outline-thick {\n      color: $outline-color-hover;\n    }\n\n    &.mat-focused {\n      .mat-form-field-outline-thick {\n        color: $outline-color-primary;\n      }\n\n      &.mat-accent .mat-form-field-outline-thick {\n        color: $outline-color-accent;\n      }\n\n      &.mat-warn .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    // Class repeated so that rule is specific enough to override focused accent color case.\n    &.mat-form-field-invalid.mat-form-field-invalid {\n      .mat-form-field-outline-thick {\n        color: $outline-color-warn;\n      }\n    }\n\n    &.mat-form-field-disabled {\n      .mat-form-field-label {\n        color: $label-disabled-color;\n      }\n\n      .mat-form-field-outline {\n        color: $outline-color-disabled;\n      }\n    }\n  }\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-outline-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-outline-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-outline-dedupe)\n  scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-outline-dedupe;\n\n  $mat-form-field-outline-dedupe: $mat-form-field-outline-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-outline-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The padding above and below the infix.\n  $infix-padding: 1em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n  // The amount we offset the label from the input text in the outline appearance.\n  $outline-appearance-label-offset: -0.25em;\n\n  .mat-form-field-appearance-outline {\n    .mat-form-field-infix {\n      padding: $infix-padding 0 $infix-padding 0;\n    }\n\n    .mat-form-field-label {\n      top: $infix-margin-top + $infix-padding;\n      margin-top: $outline-appearance-label-offset;\n    }\n\n    &.mat-form-field-can-float {\n      &.mat-form-field-should-float .mat-form-field-label,\n      .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n\n      // Server-side rendered matInput with a label attribute but label not shown\n      // (used as a pure CSS stand-in for mat-form-field-should-float).\n      .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n      .mat-form-field-label {\n        @include _mat-form-field-outline-label-floating(\n                $subscript-font-scale, $infix-padding + $outline-appearance-label-offset,\n                $infix-margin-top);\n      }\n    }\n  }\n}\n\n@mixin mat-private-form-field-outline-density($config-or-theme) {}\n\n@mixin mat-form-field-outline-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-outline') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-outline-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-outline-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-outline-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n\n\n\n// Theme styles that only apply to the standard appearance of the form-field.\n\n@mixin mat-form-field-standard-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  $underline-color: mat-color($foreground, divider, if($is-dark-theme, 0.7, 0.42));\n\n  .mat-form-field-appearance-standard {\n    .mat-form-field-underline {\n      background-color: $underline-color;\n    }\n\n    &.mat-form-field-disabled .mat-form-field-underline {\n      @include mat-private-control-disabled-underline($underline-color);\n    }\n  }\n}\n\n@mixin mat-form-field-standard-typography($config-or-theme) {}\n\n@mixin mat-private-form-field-standard-density($config-or-theme) {}\n\n@mixin mat-form-field-standard-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field-standard') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-standard-color($color);\n    }\n    @if $density != null {\n      @include mat-private-form-field-standard-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-standard-typography($typography);\n    }\n  }\n}\n\n\n// Color styles that apply to all appearances of the form-field.\n@mixin mat-form-field-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $primary: map-get($config, primary);\n  $accent: map-get($config, accent);\n  $warn: map-get($config, warn);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n  $is-dark-theme: map-get($config, is-dark);\n\n  // Label colors. Required is used for the `*` star shown in the label.\n  $label-color: mat-color($foreground, secondary-text, if($is-dark-theme, 0.7, 0.6));\n  $focused-label-color: mat-color($primary, text);\n  $required-label-color: mat-color($accent, text);\n\n  // Underline colors.\n  $underline-color-base: mat-color($foreground, divider, if($is-dark-theme, 1, 0.87));\n  $underline-color-accent: mat-color($accent, text);\n  $underline-color-warn: mat-color($warn, text);\n  $underline-focused-color: mat-color($primary, text);\n\n  .mat-form-field-label {\n    color: $label-color;\n  }\n\n  .mat-hint {\n    color: $label-color;\n  }\n\n  .mat-form-field.mat-focused .mat-form-field-label {\n    color: $focused-label-color;\n\n    &.mat-accent {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn {\n      color: $underline-color-warn;\n    }\n  }\n\n  .mat-focused .mat-form-field-required-marker {\n    color: $required-label-color;\n  }\n\n  .mat-form-field-ripple {\n    background-color: $underline-color-base;\n  }\n\n  .mat-form-field.mat-focused {\n    .mat-form-field-ripple {\n      background-color: $underline-focused-color;\n\n      &.mat-accent {\n        background-color: $underline-color-accent;\n      }\n\n      &.mat-warn {\n        background-color: $underline-color-warn;\n      }\n    }\n  }\n\n  .mat-form-field-type-mat-native-select.mat-focused:not(.mat-form-field-invalid) {\n    .mat-form-field-infix::after {\n      color: $underline-focused-color;\n    }\n\n    &.mat-accent .mat-form-field-infix::after {\n      color: $underline-color-accent;\n    }\n\n    &.mat-warn .mat-form-field-infix::after {\n      color: $underline-color-warn;\n    }\n  }\n\n  // Styling for the error state of the form field. Note that while the same can be\n  // achieved with the ng-* classes, we use this approach in order to ensure that the same\n  // logic is used to style the error state and to show the error messages.\n  .mat-form-field.mat-form-field-invalid {\n    .mat-form-field-label {\n      color: $underline-color-warn;\n\n      &.mat-accent,\n      .mat-form-field-required-marker {\n        color: $underline-color-warn;\n      }\n    }\n\n    .mat-form-field-ripple,\n    .mat-form-field-ripple.mat-accent {\n      background-color: $underline-color-warn;\n    }\n  }\n\n  .mat-error {\n    color: $underline-color-warn;\n  }\n\n  @include mat-form-field-legacy-color($config);\n  @include mat-form-field-standard-color($config);\n  @include mat-form-field-fill-color($config);\n  @include mat-form-field-outline-color($config);\n}\n\n// Used to make instances of the _mat-form-field-label-floating mixin negligibly different,\n// and prevent Google's CSS Optimizer from collapsing the declarations. This is needed because some\n// of the selectors contain pseudo-classes not recognized in all browsers. If a browser encounters\n// an unknown pseudo-class it will discard the entire rule set.\n$mat-form-field-dedupe: 0;\n\n// Applies a floating label above the form field control itself.\n@mixin _mat-form-field-label-floating($font-scale, $infix-padding, $infix-margin-top) {\n  transform: translateY(-$infix-margin-top - $infix-padding + $mat-form-field-dedupe)\n             scale($font-scale);\n  width: 100% / $font-scale + $mat-form-field-dedupe;\n\n  $mat-form-field-dedupe: $mat-form-field-dedupe + 0.00001 !global;\n}\n\n@mixin mat-form-field-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  // The unit-less line-height from the font config.\n  $line-height: mat-line-height($config, input);\n\n  // The amount to scale the font for the floating label and subscript.\n  $subscript-font-scale: 0.75;\n  // The amount to scale the font for the prefix and suffix icons.\n  $prefix-suffix-icon-font-scale: 1.5;\n\n  // The padding on the infix. Mocks show half of the text size.\n  $infix-padding: 0.5em;\n  // The margin applied to the form-field-infix to reserve space for the floating label.\n  $infix-margin-top: 1em * $line-height * $subscript-font-scale;\n  // Font size to use for the label and subscript text.\n  $subscript-font-size: $subscript-font-scale * 100%;\n  // Font size to use for the for the prefix and suffix icons.\n  $prefix-suffix-icon-font-size: $prefix-suffix-icon-font-scale * 100%;\n  // The space between the bottom of the .mat-form-field-flex area and the subscript wrapper.\n  // Mocks show half of the text size, but this margin is applied to an element with the subscript\n  // text font size, so we need to divide by the scale factor to make it half of the original text\n  // size.\n  $subscript-margin-top: 0.5em / $subscript-font-scale;\n  // The padding applied to the form-field-wrapper to reserve space for the subscript, since it's\n  // absolutely positioned. This is a combination of the subscript's margin and line-height, but we\n  // need to multiply by the subscript font scale factor since the wrapper has a larger font size.\n  $wrapper-padding-bottom: ($subscript-margin-top + $line-height) * $subscript-font-scale;\n\n  .mat-form-field {\n    @include mat-typography-level-to-styles($config, input);\n  }\n\n  .mat-form-field-wrapper {\n    padding-bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-prefix,\n  .mat-form-field-suffix {\n    // Allow icons in a prefix or suffix to adapt to the correct size.\n    .mat-icon {\n      font-size: $prefix-suffix-icon-font-size;\n      line-height: $line-height;\n    }\n\n    // Allow icon buttons in a prefix or suffix to adapt to the correct size.\n    .mat-icon-button {\n      height: $prefix-suffix-icon-font-scale * 1em;\n      width: $prefix-suffix-icon-font-scale * 1em;\n\n      .mat-icon {\n        height: $line-height * 1em;\n        line-height: $line-height;\n      }\n    }\n  }\n\n  .mat-form-field-infix {\n    padding: $infix-padding 0;\n    // Throws off the baseline if we do it as a real margin, so we do it as a border instead.\n    border-top: $infix-margin-top solid transparent;\n  }\n\n  .mat-form-field-can-float {\n    &.mat-form-field-should-float .mat-form-field-label,\n    .mat-input-server:focus + .mat-form-field-label-wrapper .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n\n    // Server-side rendered matInput with a label attribute but label not shown\n    // (used as a pure CSS stand-in for mat-form-field-should-float).\n    .mat-input-server[label]:not(:label-shown) + .mat-form-field-label-wrapper\n        .mat-form-field-label {\n      @include _mat-form-field-label-floating(\n              $subscript-font-scale, $infix-padding, $infix-margin-top);\n    }\n  }\n\n  .mat-form-field-label-wrapper {\n    top: -$infix-margin-top;\n    padding-top: $infix-margin-top;\n  }\n\n  .mat-form-field-label {\n    top: $infix-margin-top + $infix-padding;\n  }\n\n  .mat-form-field-underline {\n    // We want the underline to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount.\n    bottom: $wrapper-padding-bottom;\n  }\n\n  .mat-form-field-subscript-wrapper {\n    font-size: $subscript-font-size;\n    margin-top: $subscript-margin-top;\n\n    // We want the subscript to start at the end of the content box, not the padding box,\n    // so we move it up by the padding amount (adjusted for the smaller font size);\n    top: calc(100% - #{$wrapper-padding-bottom / $subscript-font-scale});\n  }\n\n  @include mat-form-field-legacy-typography($config);\n  @include mat-form-field-standard-typography($config);\n  @include mat-form-field-fill-typography($config);\n  @include mat-form-field-outline-typography($config);\n}\n\n@mixin mat-form-field-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  @include mat-private-form-field-legacy-density($density-scale);\n  @include mat-private-form-field-standard-density($density-scale);\n  @include mat-private-form-field-fill-density($density-scale);\n  @include mat-private-form-field-outline-density($density-scale);\n}\n\n@mixin mat-form-field-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-form-field') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-form-field-color($color);\n    }\n    @if $density != null {\n      @include mat-form-field-density($density);\n    }\n    @if $typography != null {\n      @include mat-form-field-typography($typography);\n    }\n  }\n}\n\n\n\n\n\n$mat-tree-node-height: 48px !default;\n// Minimum height for tree nodes in highest density is difficult to determine as\n// developers can display arbitrary content. We use a minimum height which ensures\n// that common content placed in tree nodes does not exceed (e.g. icons, checkboxes).\n$mat-tree-node-minimum-height: 24px !default;\n$mat-tree-node-maximum-height: $mat-tree-node-height !default;\n\n$mat-tree-density-config: (\n  height: (\n    default: $mat-tree-node-height,\n    maximum: $mat-tree-node-maximum-height,\n    minimum: $mat-tree-node-minimum-height,\n  )\n) !default;\n\n\n@mixin mat-tree-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  $background: map-get($config, background);\n  $foreground: map-get($config, foreground);\n\n  .mat-tree {\n    background: mat-color($background, 'card');\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    color: mat-color($foreground, text);\n  }\n}\n\n@mixin mat-tree-typography($config-or-theme) {\n  $config: mat-get-typography-config($config-or-theme);\n  .mat-tree {\n    font-family: mat-font-family($config);\n  }\n\n  .mat-tree-node,\n  .mat-nested-tree-node {\n    font-weight: mat-font-weight($config, body-1);\n    font-size: mat-font-size($config, body-1);\n  }\n}\n\n@mixin mat-tree-density($config-or-theme) {\n  $density-scale: mat-get-density-config($config-or-theme);\n  $height: mat-private-density-prop-value($mat-tree-density-config, $density-scale, height);\n\n  @include mat-private-density-legacy-compatibility() {\n    .mat-tree-node {\n      min-height: $height;\n    }\n  }\n}\n\n@mixin mat-tree-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-tree') {\n    $color: mat-get-color-config($theme);\n    $density: mat-get-density-config($theme);\n    $typography: mat-get-typography-config($theme);\n\n    @if $color != null {\n      @include mat-tree-color($color);\n    }\n    @if $density != null {\n      @include mat-tree-density($density);\n    }\n    @if $typography != null {\n      @include mat-tree-typography($typography);\n    }\n  }\n}\n\n\n\n\n// Includes all of the typographic styles.\n@mixin angular-material-typography($config-or-theme: null) {\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-typography-config($config-or-theme), $config-or-theme);\n\n  // If no actual color configuration has been specified, create a default one.\n  @if not $config {\n    $config: mat-typography-config();\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `typography` config while setting `color` and `density` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for typography because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-typography` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-badge-typography($config);\n  @include mat-base-typography($config);\n  @include mat-autocomplete-typography($config);\n  @include mat-bottom-sheet-typography($config);\n  @include mat-button-typography($config);\n  @include mat-button-toggle-typography($config);\n  @include mat-card-typography($config);\n  @include mat-checkbox-typography($config);\n  @include mat-chips-typography($config);\n  @include mat-divider-typography($config);\n  @include mat-table-typography($config);\n  @include mat-datepicker-typography($config);\n  @include mat-dialog-typography($config);\n  @include mat-expansion-panel-typography($config);\n  @include mat-form-field-typography($config);\n  @include mat-grid-list-typography($config);\n  @include mat-icon-typography($config);\n  @include mat-input-typography($config);\n  @include mat-menu-typography($config);\n  @include mat-paginator-typography($config);\n  @include mat-progress-bar-typography($config);\n  @include mat-progress-spinner-typography($config);\n  @include mat-radio-typography($config);\n  @include mat-select-typography($config);\n  @include mat-sidenav-typography($config);\n  @include mat-slide-toggle-typography($config);\n  @include mat-slider-typography($config);\n  @include mat-stepper-typography($config);\n  @include mat-sort-typography($config);\n  @include mat-tabs-typography($config);\n  @include mat-toolbar-typography($config);\n  @include mat-tooltip-typography($config);\n  @include mat-list-typography($config);\n  @include mat-option-typography($config);\n  @include mat-optgroup-typography($config);\n  @include mat-snack-bar-typography($config);\n  @include mat-tree-typography($config);\n}\n\n\n// Mixin that renders all of the core styles that are not theme-dependent.\n@mixin mat-core($typography-config: null) {\n  @include angular-material-typography($typography-config);\n  @include mat-ripple();\n  @include cdk-a11y();\n  @include cdk-overlay();\n  @include cdk-text-field();\n\n  @include mat-private-strong-focus-indicators-positioning();\n  @include _mat-mdc-core();\n}\n\n@mixin mat-core-color($config-or-theme) {\n  $config: mat-get-color-config($config-or-theme);\n  // Wrapper element that provides the theme background when the user's content isn't\n  // inside of a `mat-sidenav-container`. Note that we need to exclude the ampersand\n  // selector in case the mixin is included at the top level.\n  .mat-app-background#{if(&, ', &.mat-app-background', '')} {\n    $background: map-get($config, background);\n    $foreground: map-get($config, foreground);\n\n    background-color: mat-color($background, background);\n    color: mat-color($foreground, text);\n  }\n\n  // Provides external CSS classes for each elevation value. Each CSS class is formatted as\n  // `mat-elevation-z$zValue` where `$zValue` corresponds to the z-space to which the element is\n  // elevated.\n  @for $zValue from 0 through 24 {\n    .#{$mat-elevation-prefix}#{$zValue} {\n      @include mat-private-theme-elevation($zValue, $config);\n    }\n  }\n\n  // Marker that is used to determine whether the user has added a theme to their page.\n  @at-root {\n    .mat-theme-loaded-marker {\n      display: none;\n    }\n  }\n}\n\n// Mixin that renders all of the core styles that depend on the theme.\n@mixin mat-core-theme($theme-or-color-config) {\n  $theme: mat-private-legacy-get-theme($theme-or-color-config);\n  // Wrap the sub-theme includes in the duplicate theme styles mixin. This ensures that\n  // there won't be multiple warnings. e.g. if `mat-core-theme` reports a warning, then\n  // the imported themes (such as `mat-ripple-theme`) should not report again.\n  @include mat-private-check-duplicate-theme-styles($theme, 'mat-core') {\n    @include mat-ripple-theme($theme);\n    @include mat-option-theme($theme);\n    @include mat-optgroup-theme($theme);\n    @include mat-pseudo-checkbox-theme($theme);\n\n    $color: mat-get-color-config($theme);\n    @if $color != null {\n      @include mat-core-color($color);\n    }\n  }\n}\n\n// Mixin that renders all of the core MDC styles. Private mixin included with `mat-core`.\n@mixin _mat-mdc-core() {\n  @include _mat-mdc-strong-focus-indicators-positioning();\n}\n\n// Mixin that ensures focus indicator host elements are positioned so that the focus indicator\n// pseudo element within is positioned relative to the host. Private mixin included within\n// `_mat-mdc-core`.\n@mixin _mat-mdc-strong-focus-indicators-positioning() {\n  .mat-mdc-focus-indicator {\n    position: relative;\n  }\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// Create a theme.\n@mixin angular-material-theme($theme-or-color-config) {\n  $dedupe-key: 'angular-material-theme';\n  @include mat-private-check-duplicate-theme-styles($theme-or-color-config, $dedupe-key) {\n    @include mat-core-theme($theme-or-color-config);\n    @include mat-autocomplete-theme($theme-or-color-config);\n    @include mat-badge-theme($theme-or-color-config);\n    @include mat-bottom-sheet-theme($theme-or-color-config);\n    @include mat-button-theme($theme-or-color-config);\n    @include mat-button-toggle-theme($theme-or-color-config);\n    @include mat-card-theme($theme-or-color-config);\n    @include mat-checkbox-theme($theme-or-color-config);\n    @include mat-chips-theme($theme-or-color-config);\n    @include mat-table-theme($theme-or-color-config);\n    @include mat-datepicker-theme($theme-or-color-config);\n    @include mat-dialog-theme($theme-or-color-config);\n    @include mat-divider-theme($theme-or-color-config);\n    @include mat-expansion-panel-theme($theme-or-color-config);\n    @include mat-form-field-theme($theme-or-color-config);\n    @include mat-grid-list-theme($theme-or-color-config);\n    @include mat-icon-theme($theme-or-color-config);\n    @include mat-input-theme($theme-or-color-config);\n    @include mat-list-theme($theme-or-color-config);\n    @include mat-menu-theme($theme-or-color-config);\n    @include mat-paginator-theme($theme-or-color-config);\n    @include mat-progress-bar-theme($theme-or-color-config);\n    @include mat-progress-spinner-theme($theme-or-color-config);\n    @include mat-radio-theme($theme-or-color-config);\n    @include mat-select-theme($theme-or-color-config);\n    @include mat-sidenav-theme($theme-or-color-config);\n    @include mat-slide-toggle-theme($theme-or-color-config);\n    @include mat-slider-theme($theme-or-color-config);\n    @include mat-stepper-theme($theme-or-color-config);\n    @include mat-sort-theme($theme-or-color-config);\n    @include mat-tabs-theme($theme-or-color-config);\n    @include mat-toolbar-theme($theme-or-color-config);\n    @include mat-tooltip-theme($theme-or-color-config);\n    @include mat-tree-theme($theme-or-color-config);\n    @include mat-snack-bar-theme($theme-or-color-config);\n  }\n}\n\n\n\n// Includes all of the color styles.\n@mixin angular-material-color($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the color system, extract the color config from the theme object.\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-color-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No color configuration specified.';\n  }\n\n  @include angular-material-theme((\n    color: $config,\n    typography: null,\n    density: null,\n  ));\n}\n\n\n\n\n\n\n\n\n\n\n// Includes all of the density styles.\n@mixin angular-material-density($config-or-theme) {\n  // In case a theme object has been passed instead of a configuration for\n  // the density system, extract the density config from the theme object.\n  $config: if(mat-private-is-theme-object($config-or-theme),\n      mat-get-density-config($config-or-theme), $config-or-theme);\n\n  @if $config == null {\n    @error 'No density configuration specified.';\n  }\n\n  // TODO: COMP-309: Do not use individual mixins. Instead, use the all-theme mixin and only\n  // specify a `density` config while setting `color` and `typography` to `null`. This is currently\n  // not possible as it would introduce a circular dependency for density because the `mat-core`\n  // mixin that is transitively loaded by the `all-theme` file, imports `all-density` which\n  // would then load `all-theme` again. This ultimately results a circular dependency.\n\n  @include mat-expansion-panel-density($config);\n  @include mat-stepper-density($config);\n  @include mat-toolbar-density($config);\n  @include mat-tree-density($config);\n  @include mat-paginator-density($config);\n  @include mat-form-field-density($config);\n  @include mat-button-toggle-density($config);\n}\n\n\n\n","/*!\n * Bootstrap Reboot v4.5.3 (https://getbootstrap.com/)\n * Copyright 2011-2020 The Bootstrap Authors\n * Copyright 2011-2020 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * Forked from Normalize.css, licensed MIT (https://github.com/necolas/normalize.css/blob/master/LICENSE.md)\n */\n\n@import \"functions\";\n@import \"variables\";\n@import \"mixins\";\n@import \"reboot\";\n","// stylelint-disable at-rule-no-vendor-prefix, declaration-no-important, selector-no-qualifying-type, property-no-vendor-prefix\n\n// Reboot\n//\n// Normalization of HTML elements, manually forked from Normalize.css to remove\n// styles targeting irrelevant browsers while applying new styles.\n//\n// Normalize is licensed MIT. https://github.com/necolas/normalize.css\n\n\n// Document\n//\n// 1. Change from `box-sizing: content-box` so that `width` is not affected by `padding` or `border`.\n// 2. Change the default font family in all browsers.\n// 3. Correct the line height in all browsers.\n// 4. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS.\n// 5. Change the default tap highlight to be completely transparent in iOS.\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box; // 1\n}\n\nhtml {\n  font-family: sans-serif; // 2\n  line-height: 1.15; // 3\n  -webkit-text-size-adjust: 100%; // 4\n  -webkit-tap-highlight-color: rgba($black, 0); // 5\n}\n\n// Shim for \"new\" HTML5 structural elements to display correctly (IE10, older browsers)\n// TODO: remove in v5\n// stylelint-disable-next-line selector-list-comma-newline-after\narticle, aside, figcaption, figure, footer, header, hgroup, main, nav, section {\n  display: block;\n}\n\n// Body\n//\n// 1. Remove the margin in all browsers.\n// 2. As a best practice, apply a default `background-color`.\n// 3. Set an explicit initial text-align value so that we can later use\n//    the `inherit` value on things like `<th>` elements.\n\nbody {\n  margin: 0; // 1\n  font-family: $font-family-base;\n  @include font-size($font-size-base);\n  font-weight: $font-weight-base;\n  line-height: $line-height-base;\n  color: $body-color;\n  text-align: left; // 3\n  background-color: $body-bg; // 2\n}\n\n// Future-proof rule: in browsers that support :focus-visible, suppress the focus outline\n// on elements that programmatically receive focus but wouldn't normally show a visible\n// focus outline. In general, this would mean that the outline is only applied if the\n// interaction that led to the element receiving programmatic focus was a keyboard interaction,\n// or the browser has somehow determined that the user is primarily a keyboard user and/or\n// wants focus outlines to always be presented.\n//\n// See https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible\n// and https://developer.paciellogroup.com/blog/2018/03/focus-visible-and-backwards-compatibility/\n[tabindex=\"-1\"]:focus:not(:focus-visible) {\n  outline: 0 !important;\n}\n\n\n// Content grouping\n//\n// 1. Add the correct box sizing in Firefox.\n// 2. Show the overflow in Edge and IE.\n\nhr {\n  box-sizing: content-box; // 1\n  height: 0; // 1\n  overflow: visible; // 2\n}\n\n\n//\n// Typography\n//\n\n// Remove top margins from headings\n//\n// By default, `<h1>`-`<h6>` all receive top and bottom margins. We nuke the top\n// margin for easier control within type scales as it avoids margin collapsing.\n// stylelint-disable-next-line selector-list-comma-newline-after\nh1, h2, h3, h4, h5, h6 {\n  margin-top: 0;\n  margin-bottom: $headings-margin-bottom;\n}\n\n// Reset margins on paragraphs\n//\n// Similarly, the top margin on `<p>`s get reset. However, we also reset the\n// bottom margin to use `rem` units instead of `em`.\np {\n  margin-top: 0;\n  margin-bottom: $paragraph-margin-bottom;\n}\n\n// Abbreviations\n//\n// 1. Duplicate behavior to the data-* attribute for our tooltip plugin\n// 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.\n// 3. Add explicit cursor to indicate changed behavior.\n// 4. Remove the bottom border in Firefox 39-.\n// 5. Prevent the text-decoration to be skipped.\n\nabbr[title],\nabbr[data-original-title] { // 1\n  text-decoration: underline; // 2\n  text-decoration: underline dotted; // 2\n  cursor: help; // 3\n  border-bottom: 0; // 4\n  text-decoration-skip-ink: none; // 5\n}\n\naddress {\n  margin-bottom: 1rem;\n  font-style: normal;\n  line-height: inherit;\n}\n\nol,\nul,\ndl {\n  margin-top: 0;\n  margin-bottom: 1rem;\n}\n\nol ol,\nul ul,\nol ul,\nul ol {\n  margin-bottom: 0;\n}\n\ndt {\n  font-weight: $dt-font-weight;\n}\n\ndd {\n  margin-bottom: .5rem;\n  margin-left: 0; // Undo browser default\n}\n\nblockquote {\n  margin: 0 0 1rem;\n}\n\nb,\nstrong {\n  font-weight: $font-weight-bolder; // Add the correct font weight in Chrome, Edge, and Safari\n}\n\nsmall {\n  @include font-size(80%); // Add the correct font size in all browsers\n}\n\n//\n// Prevent `sub` and `sup` elements from affecting the line height in\n// all browsers.\n//\n\nsub,\nsup {\n  position: relative;\n  @include font-size(75%);\n  line-height: 0;\n  vertical-align: baseline;\n}\n\nsub { bottom: -.25em; }\nsup { top: -.5em; }\n\n\n//\n// Links\n//\n\na {\n  color: $link-color;\n  text-decoration: $link-decoration;\n  background-color: transparent; // Remove the gray background on active links in IE 10.\n\n  @include hover() {\n    color: $link-hover-color;\n    text-decoration: $link-hover-decoration;\n  }\n}\n\n// And undo these styles for placeholder links/named anchors (without href).\n// It would be more straightforward to just use a[href] in previous block, but that\n// causes specificity issues in many other styles that are too complex to fix.\n// See https://github.com/twbs/bootstrap/issues/19402\n\na:not([href]):not([class]) {\n  color: inherit;\n  text-decoration: none;\n\n  @include hover() {\n    color: inherit;\n    text-decoration: none;\n  }\n}\n\n\n//\n// Code\n//\n\npre,\ncode,\nkbd,\nsamp {\n  font-family: $font-family-monospace;\n  @include font-size(1em); // Correct the odd `em` font sizing in all browsers.\n}\n\npre {\n  // Remove browser default top margin\n  margin-top: 0;\n  // Reset browser default of `1em` to use `rem`s\n  margin-bottom: 1rem;\n  // Don't allow content to break outside\n  overflow: auto;\n  // Disable auto-hiding scrollbar in IE & legacy Edge to avoid overlap,\n  // making it impossible to interact with the content\n  -ms-overflow-style: scrollbar;\n}\n\n\n//\n// Figures\n//\n\nfigure {\n  // Apply a consistent margin strategy (matches our type styles).\n  margin: 0 0 1rem;\n}\n\n\n//\n// Images and content\n//\n\nimg {\n  vertical-align: middle;\n  border-style: none; // Remove the border on images inside links in IE 10-.\n}\n\nsvg {\n  // Workaround for the SVG overflow bug in IE10/11 is still required.\n  // See https://github.com/twbs/bootstrap/issues/26878\n  overflow: hidden;\n  vertical-align: middle;\n}\n\n\n//\n// Tables\n//\n\ntable {\n  border-collapse: collapse; // Prevent double borders\n}\n\ncaption {\n  padding-top: $table-cell-padding;\n  padding-bottom: $table-cell-padding;\n  color: $table-caption-color;\n  text-align: left;\n  caption-side: bottom;\n}\n\n// 1. Removes font-weight bold by inheriting\n// 2. Matches default `<td>` alignment by inheriting `text-align`.\n// 3. Fix alignment for Safari\n\nth {\n  font-weight: $table-th-font-weight; // 1\n  text-align: inherit; // 2\n  text-align: -webkit-match-parent; // 3\n}\n\n\n//\n// Forms\n//\n\nlabel {\n  // Allow labels to use `margin` for spacing.\n  display: inline-block;\n  margin-bottom: $label-margin-bottom;\n}\n\n// Remove the default `border-radius` that macOS Chrome adds.\n//\n// Details at https://github.com/twbs/bootstrap/issues/24093\nbutton {\n  // stylelint-disable-next-line property-disallowed-list\n  border-radius: 0;\n}\n\n// Work around a Firefox/IE bug where the transparent `button` background\n// results in a loss of the default `button` focus styles.\n//\n// Credit: https://github.com/suitcss/base/\nbutton:focus {\n  outline: 1px dotted;\n  outline: 5px auto -webkit-focus-ring-color;\n}\n\ninput,\nbutton,\nselect,\noptgroup,\ntextarea {\n  margin: 0; // Remove the margin in Firefox and Safari\n  font-family: inherit;\n  @include font-size(inherit);\n  line-height: inherit;\n}\n\nbutton,\ninput {\n  overflow: visible; // Show the overflow in Edge\n}\n\nbutton,\nselect {\n  text-transform: none; // Remove the inheritance of text transform in Firefox\n}\n\n// Set the cursor for non-`<button>` buttons\n//\n// Details at https://github.com/twbs/bootstrap/pull/30562\n[role=\"button\"] {\n  cursor: pointer;\n}\n\n// Remove the inheritance of word-wrap in Safari.\n//\n// Details at https://github.com/twbs/bootstrap/issues/24990\nselect {\n  word-wrap: normal;\n}\n\n\n// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`\n//    controls in Android 4.\n// 2. Correct the inability to style clickable types in iOS and Safari.\nbutton,\n[type=\"button\"], // 1\n[type=\"reset\"],\n[type=\"submit\"] {\n  -webkit-appearance: button; // 2\n}\n\n// Opinionated: add \"hand\" cursor to non-disabled button elements.\n@if $enable-pointer-cursor-for-buttons {\n  button,\n  [type=\"button\"],\n  [type=\"reset\"],\n  [type=\"submit\"] {\n    &:not(:disabled) {\n      cursor: pointer;\n    }\n  }\n}\n\n// Remove inner border and padding from Firefox, but don't restore the outline like Normalize.\nbutton::-moz-focus-inner,\n[type=\"button\"]::-moz-focus-inner,\n[type=\"reset\"]::-moz-focus-inner,\n[type=\"submit\"]::-moz-focus-inner {\n  padding: 0;\n  border-style: none;\n}\n\ninput[type=\"radio\"],\ninput[type=\"checkbox\"] {\n  box-sizing: border-box; // 1. Add the correct box sizing in IE 10-\n  padding: 0; // 2. Remove the padding in IE 10-\n}\n\n\ntextarea {\n  overflow: auto; // Remove the default vertical scrollbar in IE.\n  // Textareas should really only resize vertically so they don't break their (horizontal) containers.\n  resize: vertical;\n}\n\nfieldset {\n  // Browsers set a default `min-width: min-content;` on fieldsets,\n  // unlike e.g. `<div>`s, which have `min-width: 0;` by default.\n  // So we reset that to ensure fieldsets behave more like a standard block element.\n  // See https://github.com/twbs/bootstrap/issues/12359\n  // and https://html.spec.whatwg.org/multipage/#the-fieldset-and-legend-elements\n  min-width: 0;\n  // Reset the default outline behavior of fieldsets so they don't affect page layout.\n  padding: 0;\n  margin: 0;\n  border: 0;\n}\n\n// 1. Correct the text wrapping in Edge and IE.\n// 2. Correct the color inheritance from `fieldset` elements in IE.\nlegend {\n  display: block;\n  width: 100%;\n  max-width: 100%; // 1\n  padding: 0;\n  margin-bottom: .5rem;\n  @include font-size(1.5rem);\n  line-height: inherit;\n  color: inherit; // 2\n  white-space: normal; // 1\n}\n\nprogress {\n  vertical-align: baseline; // Add the correct vertical alignment in Chrome, Firefox, and Opera.\n}\n\n// Correct the cursor style of increment and decrement buttons in Chrome.\n[type=\"number\"]::-webkit-inner-spin-button,\n[type=\"number\"]::-webkit-outer-spin-button {\n  height: auto;\n}\n\n[type=\"search\"] {\n  // This overrides the extra rounded corners on search inputs in iOS so that our\n  // `.form-control` class can properly style them. Note that this cannot simply\n  // be added to `.form-control` as it's not specific enough. For details, see\n  // https://github.com/twbs/bootstrap/issues/11586.\n  outline-offset: -2px; // 2. Correct the outline style in Safari.\n  -webkit-appearance: none;\n}\n\n//\n// Remove the inner padding in Chrome and Safari on macOS.\n//\n\n[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n//\n// 1. Correct the inability to style clickable types in iOS and Safari.\n// 2. Change font properties to `inherit` in Safari.\n//\n\n::-webkit-file-upload-button {\n  font: inherit; // 2\n  -webkit-appearance: button; // 1\n}\n\n//\n// Correct element displays\n//\n\noutput {\n  display: inline-block;\n}\n\nsummary {\n  display: list-item; // Add the correct display in all browsers\n  cursor: pointer;\n}\n\ntemplate {\n  display: none; // Add the correct display in IE\n}\n\n// Always hide an element with the `hidden` HTML attribute (from PureCSS).\n// Needed for proper display in IE 10-.\n[hidden] {\n  display: none !important;\n}\n","@import 'styles-variables';\n\n@import '~bootstrap/scss/bootstrap-reboot';\n@import '~bootstrap/scss/bootstrap-grid';\n@import url('https://fonts.googleapis.com/icon?family=Material+Icons');\n@import 'styles-reset';\n\n@import '~@angular/material/theming';\n\n@include mat-core();\n\n@import './themes/default-theme';\n@import './themes/light-theme';\n@import './themes/black-theme';\n@import './themes/nature-theme';\n\n@import 'styles-reset.scss-theme';\n@import './app/app/app.component.scss-theme';\n@import './app/shared/big-input/big-input/big-input.component.scss-theme';\n@import './app/features/about/about/about.component.scss-theme';\n\n@mixin custom-components-theme($theme) {\n  @include bvs-styles-reset-theme($theme);\n  @include bvs-app-component-theme($theme);\n  @include bvs-about-component-theme($theme);\n  @include bvs-big-input-component-theme($theme);\n}\n\n.default-theme {\n  @include angular-material-theme($anms-theme);\n  @include custom-components-theme($anms-theme);\n}\n\n.light-theme {\n  @include angular-material-theme($anms-light-theme);\n  @include custom-components-theme($anms-light-theme);\n}\n\n.black-theme {\n  @include angular-material-theme($anms-black-theme);\n  @include custom-components-theme($anms-black-theme);\n}\n\n.nature-theme {\n  @include angular-material-theme($anms-nature-theme);\n  @include custom-components-theme($anms-nature-theme);\n}\n","// Variables\n//\n// Variables should follow the `$component-state-property-size` formula for\n// consistent naming. Ex: $nav-link-disabled-color and $modal-content-box-shadow-xs.\n\n// Color system\n\n$white:    #fff !default;\n$gray-100: #f8f9fa !default;\n$gray-200: #e9ecef !default;\n$gray-300: #dee2e6 !default;\n$gray-400: #ced4da !default;\n$gray-500: #adb5bd !default;\n$gray-600: #6c757d !default;\n$gray-700: #495057 !default;\n$gray-800: #343a40 !default;\n$gray-900: #212529 !default;\n$black:    #000 !default;\n\n$grays: () !default;\n$grays: map-merge(\n  (\n    \"100\": $gray-100,\n    \"200\": $gray-200,\n    \"300\": $gray-300,\n    \"400\": $gray-400,\n    \"500\": $gray-500,\n    \"600\": $gray-600,\n    \"700\": $gray-700,\n    \"800\": $gray-800,\n    \"900\": $gray-900\n  ),\n  $grays\n);\n\n$blue:    #007bff !default;\n$indigo:  #6610f2 !default;\n$purple:  #6f42c1 !default;\n$pink:    #e83e8c !default;\n$red:     #dc3545 !default;\n$orange:  #fd7e14 !default;\n$yellow:  #ffc107 !default;\n$green:   #28a745 !default;\n$teal:    #20c997 !default;\n$cyan:    #17a2b8 !default;\n\n$colors: () !default;\n$colors: map-merge(\n  (\n    \"blue\":       $blue,\n    \"indigo\":     $indigo,\n    \"purple\":     $purple,\n    \"pink\":       $pink,\n    \"red\":        $red,\n    \"orange\":     $orange,\n    \"yellow\":     $yellow,\n    \"green\":      $green,\n    \"teal\":       $teal,\n    \"cyan\":       $cyan,\n    \"white\":      $white,\n    \"gray\":       $gray-600,\n    \"gray-dark\":  $gray-800\n  ),\n  $colors\n);\n\n$primary:       $blue !default;\n$secondary:     $gray-600 !default;\n$success:       $green !default;\n$info:          $cyan !default;\n$warning:       $yellow !default;\n$danger:        $red !default;\n$light:         $gray-100 !default;\n$dark:          $gray-800 !default;\n\n$theme-colors: () !default;\n$theme-colors: map-merge(\n  (\n    \"primary\":    $primary,\n    \"secondary\":  $secondary,\n    \"success\":    $success,\n    \"info\":       $info,\n    \"warning\":    $warning,\n    \"danger\":     $danger,\n    \"light\":      $light,\n    \"dark\":       $dark\n  ),\n  $theme-colors\n);\n\n// Set a specific jump point for requesting color jumps\n$theme-color-interval:      8% !default;\n\n// The yiq lightness value that determines when the lightness of color changes from \"dark\" to \"light\". Acceptable values are between 0 and 255.\n$yiq-contrasted-threshold:  150 !default;\n\n// Customize the light and dark text colors for use in our YIQ color contrast function.\n$yiq-text-dark:             $gray-900 !default;\n$yiq-text-light:            $white !default;\n\n// Characters which are escaped by the escape-svg function\n$escaped-characters: (\n  (\"<\", \"%3c\"),\n  (\">\", \"%3e\"),\n  (\"#\", \"%23\"),\n  (\"(\", \"%28\"),\n  (\")\", \"%29\"),\n) !default;\n\n\n// Options\n//\n// Quickly modify global styling by enabling or disabling optional features.\n\n$enable-caret:                                true !default;\n$enable-rounded:                              true !default;\n$enable-shadows:                              false !default;\n$enable-gradients:                            false !default;\n$enable-transitions:                          true !default;\n$enable-prefers-reduced-motion-media-query:   true !default;\n$enable-hover-media-query:                    false !default; // Deprecated, no longer affects any compiled CSS\n$enable-grid-classes:                         true !default;\n$enable-pointer-cursor-for-buttons:           true !default;\n$enable-print-styles:                         true !default;\n$enable-responsive-font-sizes:                false !default;\n$enable-validation-icons:                     true !default;\n$enable-deprecation-messages:                 true !default;\n\n\n// Spacing\n//\n// Control the default styling of most Bootstrap elements by modifying these\n// variables. Mostly focused on spacing.\n// You can add more entries to the $spacers map, should you need more variation.\n\n$spacer: 1rem !default;\n$spacers: () !default;\n$spacers: map-merge(\n  (\n    0: 0,\n    1: ($spacer * .25),\n    2: ($spacer * .5),\n    3: $spacer,\n    4: ($spacer * 1.5),\n    5: ($spacer * 3)\n  ),\n  $spacers\n);\n\n// This variable affects the `.h-*` and `.w-*` classes.\n$sizes: () !default;\n$sizes: map-merge(\n  (\n    25: 25%,\n    50: 50%,\n    75: 75%,\n    100: 100%,\n    auto: auto\n  ),\n  $sizes\n);\n\n\n// Body\n//\n// Settings for the `<body>` element.\n\n$body-bg:                   $white !default;\n$body-color:                $gray-900 !default;\n\n\n// Links\n//\n// Style anchor elements.\n\n$link-color:                              theme-color(\"primary\") !default;\n$link-decoration:                         none !default;\n$link-hover-color:                        darken($link-color, 15%) !default;\n$link-hover-decoration:                   underline !default;\n// Darken percentage for links with `.text-*` class (e.g. `.text-success`)\n$emphasized-link-hover-darken-percentage: 15% !default;\n\n// Paragraphs\n//\n// Style p element.\n\n$paragraph-margin-bottom:   1rem !default;\n\n\n// Grid breakpoints\n//\n// Define the minimum dimensions at which your layout will change,\n// adapting to different screen sizes, for use in media queries.\n\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n) !default;\n\n@include _assert-ascending($grid-breakpoints, \"$grid-breakpoints\");\n@include _assert-starts-at-zero($grid-breakpoints, \"$grid-breakpoints\");\n\n\n// Grid containers\n//\n// Define the maximum width of `.container` for different screen sizes.\n\n$container-max-widths: (\n  sm: 540px,\n  md: 720px,\n  lg: 960px,\n  xl: 1140px\n) !default;\n\n@include _assert-ascending($container-max-widths, \"$container-max-widths\");\n\n\n// Grid columns\n//\n// Set the number of columns and specify the width of the gutters.\n\n$grid-columns:                12 !default;\n$grid-gutter-width:           30px !default;\n$grid-row-columns:            6 !default;\n\n\n// Components\n//\n// Define common padding and border radius sizes and more.\n\n$line-height-lg:              1.5 !default;\n$line-height-sm:              1.5 !default;\n\n$border-width:                1px !default;\n$border-color:                $gray-300 !default;\n\n$border-radius:               .25rem !default;\n$border-radius-lg:            .3rem !default;\n$border-radius-sm:            .2rem !default;\n\n$rounded-pill:                50rem !default;\n\n$box-shadow-sm:               0 .125rem .25rem rgba($black, .075) !default;\n$box-shadow:                  0 .5rem 1rem rgba($black, .15) !default;\n$box-shadow-lg:               0 1rem 3rem rgba($black, .175) !default;\n\n$component-active-color:      $white !default;\n$component-active-bg:         theme-color(\"primary\") !default;\n\n$caret-width:                 .3em !default;\n$caret-vertical-align:        $caret-width * .85 !default;\n$caret-spacing:               $caret-width * .85 !default;\n\n$transition-base:             all .2s ease-in-out !default;\n$transition-fade:             opacity .15s linear !default;\n$transition-collapse:         height .35s ease !default;\n\n$embed-responsive-aspect-ratios: () !default;\n$embed-responsive-aspect-ratios: join(\n  (\n    (21 9),\n    (16 9),\n    (4 3),\n    (1 1),\n  ),\n  $embed-responsive-aspect-ratios\n);\n\n// Typography\n//\n// Font, line-height, and color for body text, headings, and more.\n\n// stylelint-disable value-keyword-case\n$font-family-sans-serif:      -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\" !default;\n$font-family-monospace:       SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace !default;\n$font-family-base:            $font-family-sans-serif !default;\n// stylelint-enable value-keyword-case\n\n$font-size-base:              1rem !default; // Assumes the browser default, typically `16px`\n$font-size-lg:                $font-size-base * 1.25 !default;\n$font-size-sm:                $font-size-base * .875 !default;\n\n$font-weight-lighter:         lighter !default;\n$font-weight-light:           300 !default;\n$font-weight-normal:          400 !default;\n$font-weight-bold:            700 !default;\n$font-weight-bolder:          bolder !default;\n\n$font-weight-base:            $font-weight-normal !default;\n$line-height-base:            1.5 !default;\n\n$h1-font-size:                $font-size-base * 2.5 !default;\n$h2-font-size:                $font-size-base * 2 !default;\n$h3-font-size:                $font-size-base * 1.75 !default;\n$h4-font-size:                $font-size-base * 1.5 !default;\n$h5-font-size:                $font-size-base * 1.25 !default;\n$h6-font-size:                $font-size-base !default;\n\n$headings-margin-bottom:      $spacer / 2 !default;\n$headings-font-family:        null !default;\n$headings-font-weight:        500 !default;\n$headings-line-height:        1.2 !default;\n$headings-color:              null !default;\n\n$display1-size:               6rem !default;\n$display2-size:               5.5rem !default;\n$display3-size:               4.5rem !default;\n$display4-size:               3.5rem !default;\n\n$display1-weight:             300 !default;\n$display2-weight:             300 !default;\n$display3-weight:             300 !default;\n$display4-weight:             300 !default;\n$display-line-height:         $headings-line-height !default;\n\n$lead-font-size:              $font-size-base * 1.25 !default;\n$lead-font-weight:            300 !default;\n\n$small-font-size:             80% !default;\n\n$text-muted:                  $gray-600 !default;\n\n$blockquote-small-color:      $gray-600 !default;\n$blockquote-small-font-size:  $small-font-size !default;\n$blockquote-font-size:        $font-size-base * 1.25 !default;\n\n$hr-border-color:             rgba($black, .1) !default;\n$hr-border-width:             $border-width !default;\n\n$mark-padding:                .2em !default;\n\n$dt-font-weight:              $font-weight-bold !default;\n\n$kbd-box-shadow:              inset 0 -.1rem 0 rgba($black, .25) !default;\n$nested-kbd-font-weight:      $font-weight-bold !default;\n\n$list-inline-padding:         .5rem !default;\n\n$mark-bg:                     #fcf8e3 !default;\n\n$hr-margin-y:                 $spacer !default;\n\n\n// Tables\n//\n// Customizes the `.table` component with basic values, each used across all table variations.\n\n$table-cell-padding:          .75rem !default;\n$table-cell-padding-sm:       .3rem !default;\n\n$table-color:                 $body-color !default;\n$table-bg:                    null !default;\n$table-accent-bg:             rgba($black, .05) !default;\n$table-hover-color:           $table-color !default;\n$table-hover-bg:              rgba($black, .075) !default;\n$table-active-bg:             $table-hover-bg !default;\n\n$table-border-width:          $border-width !default;\n$table-border-color:          $border-color !default;\n\n$table-head-bg:               $gray-200 !default;\n$table-head-color:            $gray-700 !default;\n$table-th-font-weight:        null !default;\n\n$table-dark-color:            $white !default;\n$table-dark-bg:               $gray-800 !default;\n$table-dark-accent-bg:        rgba($white, .05) !default;\n$table-dark-hover-color:      $table-dark-color !default;\n$table-dark-hover-bg:         rgba($white, .075) !default;\n$table-dark-border-color:     lighten($table-dark-bg, 7.5%) !default;\n\n$table-striped-order:         odd !default;\n\n$table-caption-color:         $text-muted !default;\n\n$table-bg-level:              -9 !default;\n$table-border-level:          -6 !default;\n\n\n// Buttons + Forms\n//\n// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.\n\n$input-btn-padding-y:         .375rem !default;\n$input-btn-padding-x:         .75rem !default;\n$input-btn-font-family:       null !default;\n$input-btn-font-size:         $font-size-base !default;\n$input-btn-line-height:       $line-height-base !default;\n\n$input-btn-focus-width:       .2rem !default;\n$input-btn-focus-color:       rgba($component-active-bg, .25) !default;\n$input-btn-focus-box-shadow:  0 0 0 $input-btn-focus-width $input-btn-focus-color !default;\n\n$input-btn-padding-y-sm:      .25rem !default;\n$input-btn-padding-x-sm:      .5rem !default;\n$input-btn-font-size-sm:      $font-size-sm !default;\n$input-btn-line-height-sm:    $line-height-sm !default;\n\n$input-btn-padding-y-lg:      .5rem !default;\n$input-btn-padding-x-lg:      1rem !default;\n$input-btn-font-size-lg:      $font-size-lg !default;\n$input-btn-line-height-lg:    $line-height-lg !default;\n\n$input-btn-border-width:      $border-width !default;\n\n\n// Buttons\n//\n// For each of Bootstrap's buttons, define text, background, and border color.\n\n$btn-padding-y:               $input-btn-padding-y !default;\n$btn-padding-x:               $input-btn-padding-x !default;\n$btn-font-family:             $input-btn-font-family !default;\n$btn-font-size:               $input-btn-font-size !default;\n$btn-line-height:             $input-btn-line-height !default;\n$btn-white-space:             null !default; // Set to `nowrap` to prevent text wrapping\n\n$btn-padding-y-sm:            $input-btn-padding-y-sm !default;\n$btn-padding-x-sm:            $input-btn-padding-x-sm !default;\n$btn-font-size-sm:            $input-btn-font-size-sm !default;\n$btn-line-height-sm:          $input-btn-line-height-sm !default;\n\n$btn-padding-y-lg:            $input-btn-padding-y-lg !default;\n$btn-padding-x-lg:            $input-btn-padding-x-lg !default;\n$btn-font-size-lg:            $input-btn-font-size-lg !default;\n$btn-line-height-lg:          $input-btn-line-height-lg !default;\n\n$btn-border-width:            $input-btn-border-width !default;\n\n$btn-font-weight:             $font-weight-normal !default;\n$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($black, .075) !default;\n$btn-focus-width:             $input-btn-focus-width !default;\n$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;\n$btn-disabled-opacity:        .65 !default;\n$btn-active-box-shadow:       inset 0 3px 5px rgba($black, .125) !default;\n\n$btn-link-disabled-color:     $gray-600 !default;\n\n$btn-block-spacing-y:         .5rem !default;\n\n// Allows for customizing button radius independently from global border radius\n$btn-border-radius:           $border-radius !default;\n$btn-border-radius-lg:        $border-radius-lg !default;\n$btn-border-radius-sm:        $border-radius-sm !default;\n\n$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n\n\n// Forms\n\n$label-margin-bottom:                   .5rem !default;\n\n$input-padding-y:                       $input-btn-padding-y !default;\n$input-padding-x:                       $input-btn-padding-x !default;\n$input-font-family:                     $input-btn-font-family !default;\n$input-font-size:                       $input-btn-font-size !default;\n$input-font-weight:                     $font-weight-base !default;\n$input-line-height:                     $input-btn-line-height !default;\n\n$input-padding-y-sm:                    $input-btn-padding-y-sm !default;\n$input-padding-x-sm:                    $input-btn-padding-x-sm !default;\n$input-font-size-sm:                    $input-btn-font-size-sm !default;\n$input-line-height-sm:                  $input-btn-line-height-sm !default;\n\n$input-padding-y-lg:                    $input-btn-padding-y-lg !default;\n$input-padding-x-lg:                    $input-btn-padding-x-lg !default;\n$input-font-size-lg:                    $input-btn-font-size-lg !default;\n$input-line-height-lg:                  $input-btn-line-height-lg !default;\n\n$input-bg:                              $white !default;\n$input-disabled-bg:                     $gray-200 !default;\n\n$input-color:                           $gray-700 !default;\n$input-border-color:                    $gray-400 !default;\n$input-border-width:                    $input-btn-border-width !default;\n$input-box-shadow:                      inset 0 1px 1px rgba($black, .075) !default;\n\n$input-border-radius:                   $border-radius !default;\n$input-border-radius-lg:                $border-radius-lg !default;\n$input-border-radius-sm:                $border-radius-sm !default;\n\n$input-focus-bg:                        $input-bg !default;\n$input-focus-border-color:              lighten($component-active-bg, 25%) !default;\n$input-focus-color:                     $input-color !default;\n$input-focus-width:                     $input-btn-focus-width !default;\n$input-focus-box-shadow:                $input-btn-focus-box-shadow !default;\n\n$input-placeholder-color:               $gray-600 !default;\n$input-plaintext-color:                 $body-color !default;\n\n$input-height-border:                   $input-border-width * 2 !default;\n\n$input-height-inner:                    add($input-line-height * 1em, $input-padding-y * 2) !default;\n$input-height-inner-half:               add($input-line-height * .5em, $input-padding-y) !default;\n$input-height-inner-quarter:            add($input-line-height * .25em, $input-padding-y / 2) !default;\n\n$input-height:                          add($input-line-height * 1em, add($input-padding-y * 2, $input-height-border, false)) !default;\n$input-height-sm:                       add($input-line-height-sm * 1em, add($input-padding-y-sm * 2, $input-height-border, false)) !default;\n$input-height-lg:                       add($input-line-height-lg * 1em, add($input-padding-y-lg * 2, $input-height-border, false)) !default;\n\n$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n\n$form-text-margin-top:                  .25rem !default;\n\n$form-check-input-gutter:               1.25rem !default;\n$form-check-input-margin-y:             .3rem !default;\n$form-check-input-margin-x:             .25rem !default;\n\n$form-check-inline-margin-x:            .75rem !default;\n$form-check-inline-input-margin-x:      .3125rem !default;\n\n$form-grid-gutter-width:                10px !default;\n$form-group-margin-bottom:              1rem !default;\n\n$input-group-addon-color:               $input-color !default;\n$input-group-addon-bg:                  $gray-200 !default;\n$input-group-addon-border-color:        $input-border-color !default;\n\n$custom-forms-transition:               background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;\n\n$custom-control-gutter:                 .5rem !default;\n$custom-control-spacer-x:               1rem !default;\n$custom-control-cursor:                 null !default;\n\n$custom-control-indicator-size:         1rem !default;\n$custom-control-indicator-bg:           $input-bg !default;\n\n$custom-control-indicator-bg-size:      50% 50% !default;\n$custom-control-indicator-box-shadow:   $input-box-shadow !default;\n$custom-control-indicator-border-color: $gray-500 !default;\n$custom-control-indicator-border-width: $input-border-width !default;\n\n$custom-control-label-color:            null !default;\n\n$custom-control-indicator-disabled-bg:          $input-disabled-bg !default;\n$custom-control-label-disabled-color:           $gray-600 !default;\n\n$custom-control-indicator-checked-color:        $component-active-color !default;\n$custom-control-indicator-checked-bg:           $component-active-bg !default;\n$custom-control-indicator-checked-disabled-bg:  rgba(theme-color(\"primary\"), .5) !default;\n$custom-control-indicator-checked-box-shadow:   null !default;\n$custom-control-indicator-checked-border-color: $custom-control-indicator-checked-bg !default;\n\n$custom-control-indicator-focus-box-shadow:     $input-focus-box-shadow !default;\n$custom-control-indicator-focus-border-color:   $input-focus-border-color !default;\n\n$custom-control-indicator-active-color:         $component-active-color !default;\n$custom-control-indicator-active-bg:            lighten($component-active-bg, 35%) !default;\n$custom-control-indicator-active-box-shadow:    null !default;\n$custom-control-indicator-active-border-color:  $custom-control-indicator-active-bg !default;\n\n$custom-checkbox-indicator-border-radius:       $border-radius !default;\n$custom-checkbox-indicator-icon-checked:        url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'><path fill='#{$custom-control-indicator-checked-color}' d='M6.564.75l-3.59 3.612-1.538-1.55L0 4.26l2.974 2.99L8 2.193z'/></svg>\") !default;\n\n$custom-checkbox-indicator-indeterminate-bg:           $component-active-bg !default;\n$custom-checkbox-indicator-indeterminate-color:        $custom-control-indicator-checked-color !default;\n$custom-checkbox-indicator-icon-indeterminate:         url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='4' height='4' viewBox='0 0 4 4'><path stroke='#{$custom-checkbox-indicator-indeterminate-color}' d='M0 2h4'/></svg>\") !default;\n$custom-checkbox-indicator-indeterminate-box-shadow:   null !default;\n$custom-checkbox-indicator-indeterminate-border-color: $custom-checkbox-indicator-indeterminate-bg !default;\n\n$custom-radio-indicator-border-radius:          50% !default;\n$custom-radio-indicator-icon-checked:           url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' viewBox='-4 -4 8 8'><circle r='3' fill='#{$custom-control-indicator-checked-color}'/></svg>\") !default;\n\n$custom-switch-width:                           $custom-control-indicator-size * 1.75 !default;\n$custom-switch-indicator-border-radius:         $custom-control-indicator-size / 2 !default;\n$custom-switch-indicator-size:                  subtract($custom-control-indicator-size, $custom-control-indicator-border-width * 4) !default;\n\n$custom-select-padding-y:           $input-padding-y !default;\n$custom-select-padding-x:           $input-padding-x !default;\n$custom-select-font-family:         $input-font-family !default;\n$custom-select-font-size:           $input-font-size !default;\n$custom-select-height:              $input-height !default;\n$custom-select-indicator-padding:   1rem !default; // Extra padding to account for the presence of the background-image based indicator\n$custom-select-font-weight:         $input-font-weight !default;\n$custom-select-line-height:         $input-line-height !default;\n$custom-select-color:               $input-color !default;\n$custom-select-disabled-color:      $gray-600 !default;\n$custom-select-bg:                  $input-bg !default;\n$custom-select-disabled-bg:         $gray-200 !default;\n$custom-select-bg-size:             8px 10px !default; // In pixels because image dimensions\n$custom-select-indicator-color:     $gray-800 !default;\n$custom-select-indicator:           url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='4' height='5' viewBox='0 0 4 5'><path fill='#{$custom-select-indicator-color}' d='M2 0L0 2h4zm0 5L0 3h4z'/></svg>\") !default;\n$custom-select-background:          escape-svg($custom-select-indicator) no-repeat right $custom-select-padding-x center / $custom-select-bg-size !default; // Used so we can have multiple background elements (e.g., arrow and feedback icon)\n\n$custom-select-feedback-icon-padding-right: add(1em * .75, (2 * $custom-select-padding-y * .75) + $custom-select-padding-x + $custom-select-indicator-padding) !default;\n$custom-select-feedback-icon-position:      center right ($custom-select-padding-x + $custom-select-indicator-padding) !default;\n$custom-select-feedback-icon-size:          $input-height-inner-half $input-height-inner-half !default;\n\n$custom-select-border-width:        $input-border-width !default;\n$custom-select-border-color:        $input-border-color !default;\n$custom-select-border-radius:       $border-radius !default;\n$custom-select-box-shadow:          inset 0 1px 2px rgba($black, .075) !default;\n\n$custom-select-focus-border-color:  $input-focus-border-color !default;\n$custom-select-focus-width:         $input-focus-width !default;\n$custom-select-focus-box-shadow:    0 0 0 $custom-select-focus-width $input-btn-focus-color !default;\n\n$custom-select-padding-y-sm:        $input-padding-y-sm !default;\n$custom-select-padding-x-sm:        $input-padding-x-sm !default;\n$custom-select-font-size-sm:        $input-font-size-sm !default;\n$custom-select-height-sm:           $input-height-sm !default;\n\n$custom-select-padding-y-lg:        $input-padding-y-lg !default;\n$custom-select-padding-x-lg:        $input-padding-x-lg !default;\n$custom-select-font-size-lg:        $input-font-size-lg !default;\n$custom-select-height-lg:           $input-height-lg !default;\n\n$custom-range-track-width:          100% !default;\n$custom-range-track-height:         .5rem !default;\n$custom-range-track-cursor:         pointer !default;\n$custom-range-track-bg:             $gray-300 !default;\n$custom-range-track-border-radius:  1rem !default;\n$custom-range-track-box-shadow:     inset 0 .25rem .25rem rgba($black, .1) !default;\n\n$custom-range-thumb-width:                   1rem !default;\n$custom-range-thumb-height:                  $custom-range-thumb-width !default;\n$custom-range-thumb-bg:                      $component-active-bg !default;\n$custom-range-thumb-border:                  0 !default;\n$custom-range-thumb-border-radius:           1rem !default;\n$custom-range-thumb-box-shadow:              0 .1rem .25rem rgba($black, .1) !default;\n$custom-range-thumb-focus-box-shadow:        0 0 0 1px $body-bg, $input-focus-box-shadow !default;\n$custom-range-thumb-focus-box-shadow-width:  $input-focus-width !default; // For focus box shadow issue in IE/Edge\n$custom-range-thumb-active-bg:               lighten($component-active-bg, 35%) !default;\n$custom-range-thumb-disabled-bg:             $gray-500 !default;\n\n$custom-file-height:                $input-height !default;\n$custom-file-height-inner:          $input-height-inner !default;\n$custom-file-focus-border-color:    $input-focus-border-color !default;\n$custom-file-focus-box-shadow:      $input-focus-box-shadow !default;\n$custom-file-disabled-bg:           $input-disabled-bg !default;\n\n$custom-file-padding-y:             $input-padding-y !default;\n$custom-file-padding-x:             $input-padding-x !default;\n$custom-file-line-height:           $input-line-height !default;\n$custom-file-font-family:           $input-font-family !default;\n$custom-file-font-weight:           $input-font-weight !default;\n$custom-file-color:                 $input-color !default;\n$custom-file-bg:                    $input-bg !default;\n$custom-file-border-width:          $input-border-width !default;\n$custom-file-border-color:          $input-border-color !default;\n$custom-file-border-radius:         $input-border-radius !default;\n$custom-file-box-shadow:            $input-box-shadow !default;\n$custom-file-button-color:          $custom-file-color !default;\n$custom-file-button-bg:             $input-group-addon-bg !default;\n$custom-file-text: (\n  en: \"Browse\"\n) !default;\n\n\n// Form validation\n\n$form-feedback-margin-top:          $form-text-margin-top !default;\n$form-feedback-font-size:           $small-font-size !default;\n$form-feedback-valid-color:         theme-color(\"success\") !default;\n$form-feedback-invalid-color:       theme-color(\"danger\") !default;\n\n$form-feedback-icon-valid-color:    $form-feedback-valid-color !default;\n$form-feedback-icon-valid:          url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='8' height='8' viewBox='0 0 8 8'><path fill='#{$form-feedback-icon-valid-color}' d='M2.3 6.73L.6 4.53c-.4-1.04.46-1.4 1.1-.8l1.1 1.4 3.4-3.8c.6-.63 1.6-.27 1.2.7l-4 4.6c-.43.5-.8.4-1.1.1z'/></svg>\") !default;\n$form-feedback-icon-invalid-color:  $form-feedback-invalid-color !default;\n$form-feedback-icon-invalid:        url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='12' height='12' fill='none' stroke='#{$form-feedback-icon-invalid-color}' viewBox='0 0 12 12'><circle cx='6' cy='6' r='4.5'/><path stroke-linejoin='round' d='M5.8 3.6h.4L6 6.5z'/><circle cx='6' cy='8.2' r='.6' fill='#{$form-feedback-icon-invalid-color}' stroke='none'/></svg>\") !default;\n\n$form-validation-states: () !default;\n$form-validation-states: map-merge(\n  (\n    \"valid\": (\n      \"color\": $form-feedback-valid-color,\n      \"icon\": $form-feedback-icon-valid\n    ),\n    \"invalid\": (\n      \"color\": $form-feedback-invalid-color,\n      \"icon\": $form-feedback-icon-invalid\n    ),\n  ),\n  $form-validation-states\n);\n\n// Z-index master list\n//\n// Warning: Avoid customizing these values. They're used for a bird's eye view\n// of components dependent on the z-axis and are designed to all work together.\n\n$zindex-dropdown:                   1000 !default;\n$zindex-sticky:                     1020 !default;\n$zindex-fixed:                      1030 !default;\n$zindex-modal-backdrop:             1040 !default;\n$zindex-modal:                      1050 !default;\n$zindex-popover:                    1060 !default;\n$zindex-tooltip:                    1070 !default;\n\n\n// Navs\n\n$nav-link-padding-y:                .5rem !default;\n$nav-link-padding-x:                1rem !default;\n$nav-link-disabled-color:           $gray-600 !default;\n\n$nav-tabs-border-color:             $gray-300 !default;\n$nav-tabs-border-width:             $border-width !default;\n$nav-tabs-border-radius:            $border-radius !default;\n$nav-tabs-link-hover-border-color:  $gray-200 $gray-200 $nav-tabs-border-color !default;\n$nav-tabs-link-active-color:        $gray-700 !default;\n$nav-tabs-link-active-bg:           $body-bg !default;\n$nav-tabs-link-active-border-color: $gray-300 $gray-300 $nav-tabs-link-active-bg !default;\n\n$nav-pills-border-radius:           $border-radius !default;\n$nav-pills-link-active-color:       $component-active-color !default;\n$nav-pills-link-active-bg:          $component-active-bg !default;\n\n$nav-divider-color:                 $gray-200 !default;\n$nav-divider-margin-y:              $spacer / 2 !default;\n\n\n// Navbar\n\n$navbar-padding-y:                  $spacer / 2 !default;\n$navbar-padding-x:                  $spacer !default;\n\n$navbar-nav-link-padding-x:         .5rem !default;\n\n$navbar-brand-font-size:            $font-size-lg !default;\n// Compute the navbar-brand padding-y so the navbar-brand will have the same height as navbar-text and nav-link\n$nav-link-height:                   $font-size-base * $line-height-base + $nav-link-padding-y * 2 !default;\n$navbar-brand-height:               $navbar-brand-font-size * $line-height-base !default;\n$navbar-brand-padding-y:            ($nav-link-height - $navbar-brand-height) / 2 !default;\n\n$navbar-toggler-padding-y:          .25rem !default;\n$navbar-toggler-padding-x:          .75rem !default;\n$navbar-toggler-font-size:          $font-size-lg !default;\n$navbar-toggler-border-radius:      $btn-border-radius !default;\n\n$navbar-dark-color:                 rgba($white, .5) !default;\n$navbar-dark-hover-color:           rgba($white, .75) !default;\n$navbar-dark-active-color:          $white !default;\n$navbar-dark-disabled-color:        rgba($white, .25) !default;\n$navbar-dark-toggler-icon-bg:       url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'><path stroke='#{$navbar-dark-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>\") !default;\n$navbar-dark-toggler-border-color:  rgba($white, .1) !default;\n\n$navbar-light-color:                rgba($black, .5) !default;\n$navbar-light-hover-color:          rgba($black, .7) !default;\n$navbar-light-active-color:         rgba($black, .9) !default;\n$navbar-light-disabled-color:       rgba($black, .3) !default;\n$navbar-light-toggler-icon-bg:      url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='30' height='30' viewBox='0 0 30 30'><path stroke='#{$navbar-light-color}' stroke-linecap='round' stroke-miterlimit='10' stroke-width='2' d='M4 7h22M4 15h22M4 23h22'/></svg>\") !default;\n$navbar-light-toggler-border-color: rgba($black, .1) !default;\n\n$navbar-light-brand-color:                $navbar-light-active-color !default;\n$navbar-light-brand-hover-color:          $navbar-light-active-color !default;\n$navbar-dark-brand-color:                 $navbar-dark-active-color !default;\n$navbar-dark-brand-hover-color:           $navbar-dark-active-color !default;\n\n\n// Dropdowns\n//\n// Dropdown menu container and contents.\n\n$dropdown-min-width:                10rem !default;\n$dropdown-padding-x:                0 !default;\n$dropdown-padding-y:                .5rem !default;\n$dropdown-spacer:                   .125rem !default;\n$dropdown-font-size:                $font-size-base !default;\n$dropdown-color:                    $body-color !default;\n$dropdown-bg:                       $white !default;\n$dropdown-border-color:             rgba($black, .15) !default;\n$dropdown-border-radius:            $border-radius !default;\n$dropdown-border-width:             $border-width !default;\n$dropdown-inner-border-radius:      subtract($dropdown-border-radius, $dropdown-border-width) !default;\n$dropdown-divider-bg:               $gray-200 !default;\n$dropdown-divider-margin-y:         $nav-divider-margin-y !default;\n$dropdown-box-shadow:               0 .5rem 1rem rgba($black, .175) !default;\n\n$dropdown-link-color:               $gray-900 !default;\n$dropdown-link-hover-color:         darken($gray-900, 5%) !default;\n$dropdown-link-hover-bg:            $gray-100 !default;\n\n$dropdown-link-active-color:        $component-active-color !default;\n$dropdown-link-active-bg:           $component-active-bg !default;\n\n$dropdown-link-disabled-color:      $gray-600 !default;\n\n$dropdown-item-padding-y:           .25rem !default;\n$dropdown-item-padding-x:           1.5rem !default;\n\n$dropdown-header-color:             $gray-600 !default;\n$dropdown-header-padding:           $dropdown-padding-y $dropdown-item-padding-x !default;\n\n\n// Pagination\n\n$pagination-padding-y:              .5rem !default;\n$pagination-padding-x:              .75rem !default;\n$pagination-padding-y-sm:           .25rem !default;\n$pagination-padding-x-sm:           .5rem !default;\n$pagination-padding-y-lg:           .75rem !default;\n$pagination-padding-x-lg:           1.5rem !default;\n$pagination-line-height:            1.25 !default;\n\n$pagination-color:                  $link-color !default;\n$pagination-bg:                     $white !default;\n$pagination-border-width:           $border-width !default;\n$pagination-border-color:           $gray-300 !default;\n\n$pagination-focus-box-shadow:       $input-btn-focus-box-shadow !default;\n$pagination-focus-outline:          0 !default;\n\n$pagination-hover-color:            $link-hover-color !default;\n$pagination-hover-bg:               $gray-200 !default;\n$pagination-hover-border-color:     $gray-300 !default;\n\n$pagination-active-color:           $component-active-color !default;\n$pagination-active-bg:              $component-active-bg !default;\n$pagination-active-border-color:    $pagination-active-bg !default;\n\n$pagination-disabled-color:         $gray-600 !default;\n$pagination-disabled-bg:            $white !default;\n$pagination-disabled-border-color:  $gray-300 !default;\n\n\n// Jumbotron\n\n$jumbotron-padding:                 2rem !default;\n$jumbotron-color:                   null !default;\n$jumbotron-bg:                      $gray-200 !default;\n\n\n// Cards\n\n$card-spacer-y:                     .75rem !default;\n$card-spacer-x:                     1.25rem !default;\n$card-border-width:                 $border-width !default;\n$card-border-radius:                $border-radius !default;\n$card-border-color:                 rgba($black, .125) !default;\n$card-inner-border-radius:          subtract($card-border-radius, $card-border-width) !default;\n$card-cap-bg:                       rgba($black, .03) !default;\n$card-cap-color:                    null !default;\n$card-height:                       null !default;\n$card-color:                        null !default;\n$card-bg:                           $white !default;\n\n$card-img-overlay-padding:          1.25rem !default;\n\n$card-group-margin:                 $grid-gutter-width / 2 !default;\n$card-deck-margin:                  $card-group-margin !default;\n\n$card-columns-count:                3 !default;\n$card-columns-gap:                  1.25rem !default;\n$card-columns-margin:               $card-spacer-y !default;\n\n\n// Tooltips\n\n$tooltip-font-size:                 $font-size-sm !default;\n$tooltip-max-width:                 200px !default;\n$tooltip-color:                     $white !default;\n$tooltip-bg:                        $black !default;\n$tooltip-border-radius:             $border-radius !default;\n$tooltip-opacity:                   .9 !default;\n$tooltip-padding-y:                 .25rem !default;\n$tooltip-padding-x:                 .5rem !default;\n$tooltip-margin:                    0 !default;\n\n$tooltip-arrow-width:               .8rem !default;\n$tooltip-arrow-height:              .4rem !default;\n$tooltip-arrow-color:               $tooltip-bg !default;\n\n// Form tooltips must come after regular tooltips\n$form-feedback-tooltip-padding-y:     $tooltip-padding-y !default;\n$form-feedback-tooltip-padding-x:     $tooltip-padding-x !default;\n$form-feedback-tooltip-font-size:     $tooltip-font-size !default;\n$form-feedback-tooltip-line-height:   $line-height-base !default;\n$form-feedback-tooltip-opacity:       $tooltip-opacity !default;\n$form-feedback-tooltip-border-radius: $tooltip-border-radius !default;\n\n\n// Popovers\n\n$popover-font-size:                 $font-size-sm !default;\n$popover-bg:                        $white !default;\n$popover-max-width:                 276px !default;\n$popover-border-width:              $border-width !default;\n$popover-border-color:              rgba($black, .2) !default;\n$popover-border-radius:             $border-radius-lg !default;\n$popover-inner-border-radius:       subtract($popover-border-radius, $popover-border-width) !default;\n$popover-box-shadow:                0 .25rem .5rem rgba($black, .2) !default;\n\n$popover-header-bg:                 darken($popover-bg, 3%) !default;\n$popover-header-color:              $headings-color !default;\n$popover-header-padding-y:          .5rem !default;\n$popover-header-padding-x:          .75rem !default;\n\n$popover-body-color:                $body-color !default;\n$popover-body-padding-y:            $popover-header-padding-y !default;\n$popover-body-padding-x:            $popover-header-padding-x !default;\n\n$popover-arrow-width:               1rem !default;\n$popover-arrow-height:              .5rem !default;\n$popover-arrow-color:               $popover-bg !default;\n\n$popover-arrow-outer-color:         fade-in($popover-border-color, .05) !default;\n\n\n// Toasts\n\n$toast-max-width:                   350px !default;\n$toast-padding-x:                   .75rem !default;\n$toast-padding-y:                   .25rem !default;\n$toast-font-size:                   .875rem !default;\n$toast-color:                       null !default;\n$toast-background-color:            rgba($white, .85) !default;\n$toast-border-width:                1px !default;\n$toast-border-color:                rgba(0, 0, 0, .1) !default;\n$toast-border-radius:               .25rem !default;\n$toast-box-shadow:                  0 .25rem .75rem rgba($black, .1) !default;\n\n$toast-header-color:                $gray-600 !default;\n$toast-header-background-color:     rgba($white, .85) !default;\n$toast-header-border-color:         rgba(0, 0, 0, .05) !default;\n\n\n// Badges\n\n$badge-font-size:                   75% !default;\n$badge-font-weight:                 $font-weight-bold !default;\n$badge-padding-y:                   .25em !default;\n$badge-padding-x:                   .4em !default;\n$badge-border-radius:               $border-radius !default;\n\n$badge-transition:                  $btn-transition !default;\n$badge-focus-width:                 $input-btn-focus-width !default;\n\n$badge-pill-padding-x:              .6em !default;\n// Use a higher than normal value to ensure completely rounded edges when\n// customizing padding or font-size on labels.\n$badge-pill-border-radius:          10rem !default;\n\n\n// Modals\n\n// Padding applied to the modal body\n$modal-inner-padding:               1rem !default;\n\n// Margin between elements in footer, must be lower than or equal to 2 * $modal-inner-padding\n$modal-footer-margin-between:       .5rem !default;\n\n$modal-dialog-margin:               .5rem !default;\n$modal-dialog-margin-y-sm-up:       1.75rem !default;\n\n$modal-title-line-height:           $line-height-base !default;\n\n$modal-content-color:               null !default;\n$modal-content-bg:                  $white !default;\n$modal-content-border-color:        rgba($black, .2) !default;\n$modal-content-border-width:        $border-width !default;\n$modal-content-border-radius:       $border-radius-lg !default;\n$modal-content-inner-border-radius: subtract($modal-content-border-radius, $modal-content-border-width) !default;\n$modal-content-box-shadow-xs:       0 .25rem .5rem rgba($black, .5) !default;\n$modal-content-box-shadow-sm-up:    0 .5rem 1rem rgba($black, .5) !default;\n\n$modal-backdrop-bg:                 $black !default;\n$modal-backdrop-opacity:            .5 !default;\n$modal-header-border-color:         $border-color !default;\n$modal-footer-border-color:         $modal-header-border-color !default;\n$modal-header-border-width:         $modal-content-border-width !default;\n$modal-footer-border-width:         $modal-header-border-width !default;\n$modal-header-padding-y:            1rem !default;\n$modal-header-padding-x:            1rem !default;\n$modal-header-padding:              $modal-header-padding-y $modal-header-padding-x !default; // Keep this for backwards compatibility\n\n$modal-xl:                          1140px !default;\n$modal-lg:                          800px !default;\n$modal-md:                          500px !default;\n$modal-sm:                          300px !default;\n\n$modal-fade-transform:              translate(0, -50px) !default;\n$modal-show-transform:              none !default;\n$modal-transition:                  transform .3s ease-out !default;\n$modal-scale-transform:             scale(1.02) !default;\n\n\n// Alerts\n//\n// Define alert colors, border radius, and padding.\n\n$alert-padding-y:                   .75rem !default;\n$alert-padding-x:                   1.25rem !default;\n$alert-margin-bottom:               1rem !default;\n$alert-border-radius:               $border-radius !default;\n$alert-link-font-weight:            $font-weight-bold !default;\n$alert-border-width:                $border-width !default;\n\n$alert-bg-level:                    -10 !default;\n$alert-border-level:                -9 !default;\n$alert-color-level:                 6 !default;\n\n\n// Progress bars\n\n$progress-height:                   1rem !default;\n$progress-font-size:                $font-size-base * .75 !default;\n$progress-bg:                       $gray-200 !default;\n$progress-border-radius:            $border-radius !default;\n$progress-box-shadow:               inset 0 .1rem .1rem rgba($black, .1) !default;\n$progress-bar-color:                $white !default;\n$progress-bar-bg:                   theme-color(\"primary\") !default;\n$progress-bar-animation-timing:     1s linear infinite !default;\n$progress-bar-transition:           width .6s ease !default;\n\n\n// List group\n\n$list-group-color:                  null !default;\n$list-group-bg:                     $white !default;\n$list-group-border-color:           rgba($black, .125) !default;\n$list-group-border-width:           $border-width !default;\n$list-group-border-radius:          $border-radius !default;\n\n$list-group-item-padding-y:         .75rem !default;\n$list-group-item-padding-x:         1.25rem !default;\n\n$list-group-hover-bg:               $gray-100 !default;\n$list-group-active-color:           $component-active-color !default;\n$list-group-active-bg:              $component-active-bg !default;\n$list-group-active-border-color:    $list-group-active-bg !default;\n\n$list-group-disabled-color:         $gray-600 !default;\n$list-group-disabled-bg:            $list-group-bg !default;\n\n$list-group-action-color:           $gray-700 !default;\n$list-group-action-hover-color:     $list-group-action-color !default;\n\n$list-group-action-active-color:    $body-color !default;\n$list-group-action-active-bg:       $gray-200 !default;\n\n\n// Image thumbnails\n\n$thumbnail-padding:                 .25rem !default;\n$thumbnail-bg:                      $body-bg !default;\n$thumbnail-border-width:            $border-width !default;\n$thumbnail-border-color:            $gray-300 !default;\n$thumbnail-border-radius:           $border-radius !default;\n$thumbnail-box-shadow:              0 1px 2px rgba($black, .075) !default;\n\n\n// Figures\n\n$figure-caption-font-size:          90% !default;\n$figure-caption-color:              $gray-600 !default;\n\n\n// Breadcrumbs\n\n$breadcrumb-font-size:              null !default;\n\n$breadcrumb-padding-y:              .75rem !default;\n$breadcrumb-padding-x:              1rem !default;\n$breadcrumb-item-padding:           .5rem !default;\n\n$breadcrumb-margin-bottom:          1rem !default;\n\n$breadcrumb-bg:                     $gray-200 !default;\n$breadcrumb-divider-color:          $gray-600 !default;\n$breadcrumb-active-color:           $gray-600 !default;\n$breadcrumb-divider:                quote(\"/\") !default;\n\n$breadcrumb-border-radius:          $border-radius !default;\n\n\n// Carousel\n\n$carousel-control-color:             $white !default;\n$carousel-control-width:             15% !default;\n$carousel-control-opacity:           .5 !default;\n$carousel-control-hover-opacity:     .9 !default;\n$carousel-control-transition:        opacity .15s ease !default;\n\n$carousel-indicator-width:           30px !default;\n$carousel-indicator-height:          3px !default;\n$carousel-indicator-hit-area-height: 10px !default;\n$carousel-indicator-spacer:          3px !default;\n$carousel-indicator-active-bg:       $white !default;\n$carousel-indicator-transition:      opacity .6s ease !default;\n\n$carousel-caption-width:             70% !default;\n$carousel-caption-color:             $white !default;\n\n$carousel-control-icon-width:        20px !default;\n\n$carousel-control-prev-icon-bg:      url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' width='8' height='8' viewBox='0 0 8 8'><path d='M5.25 0l-4 4 4 4 1.5-1.5L4.25 4l2.5-2.5L5.25 0z'/></svg>\") !default;\n$carousel-control-next-icon-bg:      url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='#{$carousel-control-color}' width='8' height='8' viewBox='0 0 8 8'><path d='M2.75 0l-1.5 1.5L3.75 4l-2.5 2.5L2.75 8l4-4-4-4z'/></svg>\") !default;\n\n$carousel-transition-duration:       .6s !default;\n$carousel-transition:                transform $carousel-transition-duration ease-in-out !default; // Define transform transition first if using multiple transitions (e.g., `transform 2s ease, opacity .5s ease-out`)\n\n\n// Spinners\n\n$spinner-width:         2rem !default;\n$spinner-height:        $spinner-width !default;\n$spinner-border-width:  .25em !default;\n\n$spinner-width-sm:        1rem !default;\n$spinner-height-sm:       $spinner-width-sm !default;\n$spinner-border-width-sm: .2em !default;\n\n\n// Close\n\n$close-font-size:                   $font-size-base * 1.5 !default;\n$close-font-weight:                 $font-weight-bold !default;\n$close-color:                       $black !default;\n$close-text-shadow:                 0 1px 0 $white !default;\n\n\n// Code\n\n$code-font-size:                    87.5% !default;\n$code-color:                        $pink !default;\n\n$kbd-padding-y:                     .2rem !default;\n$kbd-padding-x:                     .4rem !default;\n$kbd-font-size:                     $code-font-size !default;\n$kbd-color:                         $white !default;\n$kbd-bg:                            $gray-900 !default;\n\n$pre-color:                         $gray-900 !default;\n$pre-scrollable-max-height:         340px !default;\n\n\n// Utilities\n\n$displays: none, inline, inline-block, block, table, table-row, table-cell, flex, inline-flex !default;\n$overflows: auto, hidden !default;\n$positions: static, relative, absolute, fixed, sticky !default;\n$user-selects: all, auto, none !default;\n\n\n// Printing\n\n$print-page-size:                   a3 !default;\n$print-body-min-width:              map-get($grid-breakpoints, \"lg\") !default;\n","// stylelint-disable property-blacklist, scss/dollar-variable-default\n\n// SCSS RFS mixin\n//\n// Automated font-resizing\n//\n// See https://github.com/twbs/rfs\n\n// Configuration\n\n// Base font size\n$rfs-base-font-size: 1.25rem !default;\n$rfs-font-size-unit: rem !default;\n\n// Breakpoint at where font-size starts decreasing if screen width is smaller\n$rfs-breakpoint: 1200px !default;\n$rfs-breakpoint-unit: px !default;\n\n// Resize font-size based on screen height and width\n$rfs-two-dimensional: false !default;\n\n// Factor of decrease\n$rfs-factor: 10 !default;\n\n@if type-of($rfs-factor) != \"number\" or $rfs-factor <= 1 {\n  @error \"`#{$rfs-factor}` is not a valid  $rfs-factor, it must be greater than 1.\";\n}\n\n// Generate enable or disable classes. Possibilities: false, \"enable\" or \"disable\"\n$rfs-class: false !default;\n\n// 1 rem = $rfs-rem-value px\n$rfs-rem-value: 16 !default;\n\n// Safari iframe resize bug: https://github.com/twbs/rfs/issues/14\n$rfs-safari-iframe-resize-bug-fix: false !default;\n\n// Disable RFS by setting $enable-responsive-font-sizes to false\n$enable-responsive-font-sizes: true !default;\n\n// Cache $rfs-base-font-size unit\n$rfs-base-font-size-unit: unit($rfs-base-font-size);\n\n// Remove px-unit from $rfs-base-font-size for calculations\n@if $rfs-base-font-size-unit == \"px\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1);\n}\n@else if $rfs-base-font-size-unit == \"rem\" {\n  $rfs-base-font-size: $rfs-base-font-size / ($rfs-base-font-size * 0 + 1 / $rfs-rem-value);\n}\n\n// Cache $rfs-breakpoint unit to prevent multiple calls\n$rfs-breakpoint-unit-cache: unit($rfs-breakpoint);\n\n// Remove unit from $rfs-breakpoint for calculations\n@if $rfs-breakpoint-unit-cache == \"px\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1);\n}\n@else if $rfs-breakpoint-unit-cache == \"rem\" or $rfs-breakpoint-unit-cache == \"em\" {\n  $rfs-breakpoint: $rfs-breakpoint / ($rfs-breakpoint * 0 + 1 / $rfs-rem-value);\n}\n\n// Responsive font-size mixin\n@mixin rfs($fs, $important: false) {\n  // Cache $fs unit\n  $fs-unit: if(type-of($fs) == \"number\", unit($fs), false);\n\n  // Add !important suffix if needed\n  $rfs-suffix: if($important, \" !important\", \"\");\n\n  // If $fs isn't a number (like inherit) or $fs has a unit (not px or rem, like 1.5em) or $ is 0, just print the value\n  @if not $fs-unit or $fs-unit != \"\" and $fs-unit != \"px\" and $fs-unit != \"rem\" or $fs == 0 {\n    font-size: #{$fs}#{$rfs-suffix};\n  }\n  @else {\n    // Variables for storing static and fluid rescaling\n    $rfs-static: null;\n    $rfs-fluid: null;\n\n    // Remove px-unit from $fs for calculations\n    @if $fs-unit == \"px\" {\n      $fs: $fs / ($fs * 0 + 1);\n    }\n    @else if $fs-unit == \"rem\" {\n      $fs: $fs / ($fs * 0 + 1 / $rfs-rem-value);\n    }\n\n    // Set default font-size\n    @if $rfs-font-size-unit == rem {\n      $rfs-static: #{$fs / $rfs-rem-value}rem#{$rfs-suffix};\n    }\n    @else if $rfs-font-size-unit == px {\n      $rfs-static: #{$fs}px#{$rfs-suffix};\n    }\n    @else {\n      @error \"`#{$rfs-font-size-unit}` is not a valid unit for $rfs-font-size-unit. Use `px` or `rem`.\";\n    }\n\n    // Only add media query if font-size is bigger as the minimum font-size\n    // If $rfs-factor == 1, no rescaling will take place\n    @if $fs > $rfs-base-font-size and $enable-responsive-font-sizes {\n      $min-width: null;\n      $variable-unit: null;\n\n      // Calculate minimum font-size for given font-size\n      $fs-min: $rfs-base-font-size + ($fs - $rfs-base-font-size) / $rfs-factor;\n\n      // Calculate difference between given font-size and minimum font-size for given font-size\n      $fs-diff: $fs - $fs-min;\n\n      // Base font-size formatting\n      // No need to check if the unit is valid, because we did that before\n      $min-width: if($rfs-font-size-unit == rem, #{$fs-min / $rfs-rem-value}rem, #{$fs-min}px);\n\n      // If two-dimensional, use smallest of screen width and height\n      $variable-unit: if($rfs-two-dimensional, vmin, vw);\n\n      // Calculate the variable width between 0 and $rfs-breakpoint\n      $variable-width: #{$fs-diff * 100 / $rfs-breakpoint}#{$variable-unit};\n\n      // Set the calculated font-size.\n      $rfs-fluid: calc(#{$min-width} + #{$variable-width}) #{$rfs-suffix};\n    }\n\n    // Rendering\n    @if $rfs-fluid == null {\n      // Only render static font-size if no fluid font-size is available\n      font-size: $rfs-static;\n    }\n    @else {\n      $mq-value: null;\n\n      // RFS breakpoint formatting\n      @if $rfs-breakpoint-unit == em or $rfs-breakpoint-unit == rem {\n        $mq-value: #{$rfs-breakpoint / $rfs-rem-value}#{$rfs-breakpoint-unit};\n      }\n      @else if $rfs-breakpoint-unit == px {\n        $mq-value: #{$rfs-breakpoint}px;\n      }\n      @else {\n        @error \"`#{$rfs-breakpoint-unit}` is not a valid unit for $rfs-breakpoint-unit. Use `px`, `em` or `rem`.\";\n      }\n\n      @if $rfs-class == \"disable\" {\n        // Adding an extra class increases specificity,\n        // which prevents the media query to override the font size\n        &,\n        .disable-responsive-font-size &,\n        &.disable-responsive-font-size {\n          font-size: $rfs-static;\n        }\n      }\n      @else {\n        font-size: $rfs-static;\n      }\n\n      @if $rfs-two-dimensional {\n        @media (max-width: #{$mq-value}), (max-height: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n      @else {\n        @media (max-width: #{$mq-value}) {\n          @if $rfs-class == \"enable\" {\n            .enable-responsive-font-size &,\n            &.enable-responsive-font-size {\n              font-size: $rfs-fluid;\n            }\n          }\n          @else {\n            font-size: $rfs-fluid;\n          }\n\n          @if $rfs-safari-iframe-resize-bug-fix {\n            // stylelint-disable-next-line length-zero-no-unit\n            min-width: 0vw;\n          }\n        }\n      }\n    }\n  }\n}\n\n// The font-size & responsive-font-size mixin uses RFS to rescale font sizes\n@mixin font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n\n@mixin responsive-font-size($fs, $important: false) {\n  @include rfs($fs, $important);\n}\n","// Hover mixin and `$enable-hover-media-query` are deprecated.\n//\n// Originally added during our alphas and maintained during betas, this mixin was\n// designed to prevent `:hover` stickiness on iOS-an issue where hover styles\n// would persist after initial touch.\n//\n// For backward compatibility, we've kept these mixins and updated them to\n// always return their regular pseudo-classes instead of a shimmed media query.\n//\n// Issue: https://github.com/twbs/bootstrap/issues/25195\n\n@mixin hover() {\n  &:hover { @content; }\n}\n\n@mixin hover-focus() {\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin plain-hover-focus() {\n  &,\n  &:hover,\n  &:focus {\n    @content;\n  }\n}\n\n@mixin hover-focus-active() {\n  &:hover,\n  &:focus,\n  &:active {\n    @content;\n  }\n}\n","@import '~@angular/material/theming';\n\n$toolbar-breakpoint: 600px;\n\n$fa-font-path: '~@fortawesome/fontawesome-free-webfonts/webfonts';\n\n$link-hover-decoration: none;\n$label-margin-bottom: 0;\n\n$grid-breakpoints: (\n  xs: 0,\n  sm: 576px,\n  md: 768px,\n  lg: 992px,\n  xl: 1200px\n);\n\n$success-colors: mat-palette($mat-green, 400);\n$warning-colors: mat-palette($mat-amber, 400);\n","/*!\n * Bootstrap Grid v4.5.3 (https://getbootstrap.com/)\n * Copyright 2011-2020 The Bootstrap Authors\n * Copyright 2011-2020 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n */\n\nhtml {\n  box-sizing: border-box;\n  -ms-overflow-style: scrollbar;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: inherit;\n}\n\n@import \"functions\";\n@import \"variables\";\n\n@import \"mixins/breakpoints\";\n@import \"mixins/grid-framework\";\n@import \"mixins/grid\";\n\n@import \"grid\";\n@import \"utilities/display\";\n@import \"utilities/flex\";\n@import \"utilities/spacing\";\n","// Container widths\n//\n// Set the container width, and override it for fixed navbars in media queries.\n\n@if $enable-grid-classes {\n  // Single container class with breakpoint max-widths\n  .container,\n  // 100% wide container at all breakpoints\n  .container-fluid {\n    @include make-container();\n  }\n\n  // Responsive containers that are 100% wide until a breakpoint\n  @each $breakpoint, $container-max-width in $container-max-widths {\n    .container-#{$breakpoint} {\n      @extend .container-fluid;\n    }\n\n    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\n      %responsive-container-#{$breakpoint} {\n        max-width: $container-max-width;\n      }\n\n      // Extend each breakpoint which is smaller or equal to the current breakpoint\n      $extend-breakpoint: true;\n\n      @each $name, $width in $grid-breakpoints {\n        @if ($extend-breakpoint) {\n          .container#{breakpoint-infix($name, $grid-breakpoints)} {\n            @extend %responsive-container-#{$breakpoint};\n          }\n\n          // Once the current breakpoint is reached, stop extending\n          @if ($breakpoint == $name) {\n            $extend-breakpoint: false;\n          }\n        }\n      }\n    }\n  }\n}\n\n\n// Row\n//\n// Rows contain your columns.\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n  }\n\n  // Remove the negative margin from default .row, then the horizontal padding\n  // from all immediate children columns (to prevent runaway style inheritance).\n  .no-gutters {\n    margin-right: 0;\n    margin-left: 0;\n\n    > .col,\n    > [class*=\"col-\"] {\n      padding-right: 0;\n      padding-left: 0;\n    }\n  }\n}\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","/// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-container($gutter: $grid-gutter-width) {\n  width: 100%;\n  padding-right: $gutter / 2;\n  padding-left: $gutter / 2;\n  margin-right: auto;\n  margin-left: auto;\n}\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  display: flex;\n  flex-wrap: wrap;\n  margin-right: -$gutter / 2;\n  margin-left: -$gutter / 2;\n}\n\n// For each breakpoint, define the maximum width of the container in a media query\n@mixin make-container-max-widths($max-widths: $container-max-widths, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint, $container-max-width in $max-widths {\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      max-width: $container-max-width;\n    }\n  }\n  @include deprecate(\"The `make-container-max-widths` mixin\", \"v4.5.2\", \"v5\");\n}\n\n@mixin make-col-ready($gutter: $grid-gutter-width) {\n  position: relative;\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we use `flex` values\n  // later on to override this initial width.\n  width: 100%;\n  padding-right: $gutter / 2;\n  padding-left: $gutter / 2;\n}\n\n@mixin make-col($size, $columns: $grid-columns) {\n  flex: 0 0 percentage($size / $columns);\n  // Add a `max-width` to ensure content within each column does not blow out\n  // the width of the column. Applies to IE10+ and Firefox. Chrome and Safari\n  // do not appear to require this.\n  max-width: percentage($size / $columns);\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n  max-width: 100%; // Reset earlier grid tiers\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: $size / $columns;\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// numberof columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 100% / $count;\n    max-width: 100% / $count;\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width. Null for the largest (last) breakpoint.\n// The maximum value is calculated as the minimum of the next one less 0.02px\n// to work around the limitations of `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $next: breakpoint-next($name, $breakpoints);\n  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  $max: breakpoint-max($name, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($name, $breakpoints) {\n      @content;\n    }\n  }\n}\n","// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  // Common properties for all breakpoints\n  %grid-column {\n    position: relative;\n    width: 100%;\n    padding-right: $gutter / 2;\n    padding-left: $gutter / 2;\n  }\n\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @if $columns > 0 {\n      // Allow columns to stretch full width below their breakpoints\n      @for $i from 1 through $columns {\n        .col#{$infix}-#{$i} {\n          @extend %grid-column;\n        }\n      }\n    }\n\n    .col#{$infix},\n    .col#{$infix}-auto {\n      @extend %grid-column;\n    }\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex-basis: 0;\n        flex-grow: 1;\n        max-width: 100%;\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n      }\n\n      .order#{$infix}-first { order: -1; }\n\n      .order#{$infix}-last { order: $columns + 1; }\n\n      @for $i from 0 through $columns {\n        .order#{$infix}-#{$i} { order: $i; }\n      }\n\n      @if $columns > 0 {\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","// stylelint-disable declaration-no-important\n\n//\n// Utilities for common `display` values\n//\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    @each $value in $displays {\n      .d#{$infix}-#{$value} { display: $value !important; }\n    }\n  }\n}\n\n\n//\n// Utilities for toggling `display` in print\n//\n\n@media print {\n  @each $value in $displays {\n    .d-print-#{$value} { display: $value !important; }\n  }\n}\n","// stylelint-disable declaration-no-important\n\n// Flex variation\n//\n// Custom styles for additional flex alignment options.\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    .flex#{$infix}-row            { flex-direction: row !important; }\n    .flex#{$infix}-column         { flex-direction: column !important; }\n    .flex#{$infix}-row-reverse    { flex-direction: row-reverse !important; }\n    .flex#{$infix}-column-reverse { flex-direction: column-reverse !important; }\n\n    .flex#{$infix}-wrap         { flex-wrap: wrap !important; }\n    .flex#{$infix}-nowrap       { flex-wrap: nowrap !important; }\n    .flex#{$infix}-wrap-reverse { flex-wrap: wrap-reverse !important; }\n    .flex#{$infix}-fill         { flex: 1 1 auto !important; }\n    .flex#{$infix}-grow-0       { flex-grow: 0 !important; }\n    .flex#{$infix}-grow-1       { flex-grow: 1 !important; }\n    .flex#{$infix}-shrink-0     { flex-shrink: 0 !important; }\n    .flex#{$infix}-shrink-1     { flex-shrink: 1 !important; }\n\n    .justify-content#{$infix}-start   { justify-content: flex-start !important; }\n    .justify-content#{$infix}-end     { justify-content: flex-end !important; }\n    .justify-content#{$infix}-center  { justify-content: center !important; }\n    .justify-content#{$infix}-between { justify-content: space-between !important; }\n    .justify-content#{$infix}-around  { justify-content: space-around !important; }\n\n    .align-items#{$infix}-start    { align-items: flex-start !important; }\n    .align-items#{$infix}-end      { align-items: flex-end !important; }\n    .align-items#{$infix}-center   { align-items: center !important; }\n    .align-items#{$infix}-baseline { align-items: baseline !important; }\n    .align-items#{$infix}-stretch  { align-items: stretch !important; }\n\n    .align-content#{$infix}-start   { align-content: flex-start !important; }\n    .align-content#{$infix}-end     { align-content: flex-end !important; }\n    .align-content#{$infix}-center  { align-content: center !important; }\n    .align-content#{$infix}-between { align-content: space-between !important; }\n    .align-content#{$infix}-around  { align-content: space-around !important; }\n    .align-content#{$infix}-stretch { align-content: stretch !important; }\n\n    .align-self#{$infix}-auto     { align-self: auto !important; }\n    .align-self#{$infix}-start    { align-self: flex-start !important; }\n    .align-self#{$infix}-end      { align-self: flex-end !important; }\n    .align-self#{$infix}-center   { align-self: center !important; }\n    .align-self#{$infix}-baseline { align-self: baseline !important; }\n    .align-self#{$infix}-stretch  { align-self: stretch !important; }\n  }\n}\n","// stylelint-disable declaration-no-important\n\n// Margin and Padding\n\n@each $breakpoint in map-keys($grid-breakpoints) {\n  @include media-breakpoint-up($breakpoint) {\n    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);\n\n    @each $prop, $abbrev in (margin: m, padding: p) {\n      @each $size, $length in $spacers {\n        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }\n        .#{$abbrev}t#{$infix}-#{$size},\n        .#{$abbrev}y#{$infix}-#{$size} {\n          #{$prop}-top: $length !important;\n        }\n        .#{$abbrev}r#{$infix}-#{$size},\n        .#{$abbrev}x#{$infix}-#{$size} {\n          #{$prop}-right: $length !important;\n        }\n        .#{$abbrev}b#{$infix}-#{$size},\n        .#{$abbrev}y#{$infix}-#{$size} {\n          #{$prop}-bottom: $length !important;\n        }\n        .#{$abbrev}l#{$infix}-#{$size},\n        .#{$abbrev}x#{$infix}-#{$size} {\n          #{$prop}-left: $length !important;\n        }\n      }\n    }\n\n    // Negative margins (e.g., where `.mb-n1` is negative version of `.mb-1`)\n    @each $size, $length in $spacers {\n      @if $size != 0 {\n        .m#{$infix}-n#{$size} { margin: -$length !important; }\n        .mt#{$infix}-n#{$size},\n        .my#{$infix}-n#{$size} {\n          margin-top: -$length !important;\n        }\n        .mr#{$infix}-n#{$size},\n        .mx#{$infix}-n#{$size} {\n          margin-right: -$length !important;\n        }\n        .mb#{$infix}-n#{$size},\n        .my#{$infix}-n#{$size} {\n          margin-bottom: -$length !important;\n        }\n        .ml#{$infix}-n#{$size},\n        .mx#{$infix}-n#{$size} {\n          margin-left: -$length !important;\n        }\n      }\n    }\n\n    // Some special margin utils\n    .m#{$infix}-auto { margin: auto !important; }\n    .mt#{$infix}-auto,\n    .my#{$infix}-auto {\n      margin-top: auto !important;\n    }\n    .mr#{$infix}-auto,\n    .mx#{$infix}-auto {\n      margin-right: auto !important;\n    }\n    .mb#{$infix}-auto,\n    .my#{$infix}-auto {\n      margin-bottom: auto !important;\n    }\n    .ml#{$infix}-auto,\n    .mx#{$infix}-auto {\n      margin-left: auto !important;\n    }\n  }\n}\n","* {\n  &:active,\n  :focus {\n    outline: none !important;\n  }\n}\n\ncode {\n  white-space: nowrap;\n  border-radius: 10px;\n  padding: 0 8px 1px 8px;\n}\n\n.mat-menu-content {\n  fa-icon {\n    position: relative;\n    top: 2px;\n    left: 4px;\n  }\n}\n\np {\n  a {\n    border-bottom: 3px solid;\n  }\n}\n","@import '.~@angular/material/theming';\n\n@mixin bvs-styles-reset-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n\n  a {\n    color: mat-color($foreground, text);\n\n    &:hover {\n      color: mat-color($accent);\n    }\n  }\n\n  code {\n    color: mat-color($accent, lighter-contrast);\n    background-color: mat-color($accent, lighter);\n  }\n\n  p {\n    a {\n      color: mat-color($accent);\n\n      &:hover {\n        color: mat-color($accent, darker);\n      }\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin bvs-app-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $warn: map-get($theme, warn);\n\n  mat-sidenav-container {\n    mat-toolbar {\n      button {\n        &.active {\n          color: mat-color($accent, default-contrast);\n          background-color: mat-color($accent);\n        }\n      }\n\n      .link {\n        color: mat-color($primary, default-contrast);\n      }\n    }\n\n    mat-sidenav {\n      .mat-list-item {\n        &.active {\n          color: mat-color($accent, default-contrast);\n          background-color: mat-color($accent) !important;\n\n          &:hover {\n            background-color: mat-color($accent, darker) !important;\n          }\n        }\n      }\n    }\n\n    .footer {\n      color: mat-color($primary, lighter);\n      background-color: mat-color($primary, darker);\n\n      .links,\n      .signature {\n        a {\n          color: mat-color($primary, lighter);\n          &:hover {\n            color: mat-color($accent);\n          }\n        }\n      }\n    }\n  }\n\n  .error-notification-overlay {\n    color: mat-color($warn, default-contrast);\n    background-color: mat-color($warn);\n  }\n\n  .info-notification-overlay {\n    color: mat-color($accent, default-contrast);\n    background-color: mat-color($accent);\n  }\n\n  .success-notification-overlay {\n    color: mat-color($success-colors, default-contrast);\n    background-color: mat-color($success-colors);\n  }\n\n  .warning-notification-overlay {\n    color: mat-color($warning-colors, default-contrast);\n    background-color: mat-color($warning-colors);\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin bvs-about-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  bvs-about {\n    .background {\n      color: mat-color($foreground, text);\n      background-color: mat-color($background, background);\n\n      .gradient {\n        &::before {\n          background: linear-gradient(\n            to bottom,\n            mat-color($background, background, 0) 0%,\n            mat-color($background, background, 1) 100%\n          );\n        }\n      }\n    }\n\n    .follow-releases,\n    .contributors {\n      p {\n        background-color: mat-color($background, background);\n\n        a {\n          color: mat-color($accent);\n\n          &:hover {\n            color: mat-color($accent, darker);\n          }\n        }\n      }\n    }\n\n    .contributors {\n      img {\n        border-color: mat-color($background, background) !important;\n      }\n    }\n  }\n}\n","@import '~@angular/material/theming';\n\n@mixin bvs-big-input-component-theme($theme) {\n  $primary: map-get($theme, primary);\n  $accent: map-get($theme, accent);\n  $foreground: map-get($theme, foreground);\n  $background: map-get($theme, background);\n\n  bvs-big-input {\n    .big-input {\n      input {\n        color: mat-color($foreground, text);\n        background-color: mat-color($background, card);\n      }\n\n      &.has-focus {\n        box-shadow: 0 0 15px 2px rgba(mat-color($accent), 0.4),\n          0 0 15px 2px rgba(mat-color($accent), 0.4),\n          0 0 15px 2px rgba(mat-color($accent), 0.4);\n      }\n    }\n  }\n}\n"],"sourceRoot":"webpack:///"}