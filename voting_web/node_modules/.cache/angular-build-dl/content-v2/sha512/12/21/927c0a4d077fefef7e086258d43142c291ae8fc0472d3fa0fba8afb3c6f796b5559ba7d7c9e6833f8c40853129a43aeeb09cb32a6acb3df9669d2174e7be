{"version":3,"sources":["./projects/blockchain-voting-system-app/src/app/core/core.state.ts","./projects/blockchain-voting-system-app/src/environments/environment.ts","./projects/blockchain-voting-system-app/src/app/core/local-storage/local-storage.service.ts","./projects/blockchain-voting-system-app/src/app/core/settings/settings.selectors.ts","./projects/blockchain-voting-system-app/src/app/core/settings/settings.actions.ts","./projects/blockchain-voting-system-app/src/app/core/title/title.service.ts","./projects/blockchain-voting-system-app/src/app/core/settings/settings.effects.ts","./projects/blockchain-voting-system-app/src/app/core/auth/auth-guard.service.ts","./projects/blockchain-voting-system-app/src/app/core/settings/settings.reducer.ts","./projects/blockchain-voting-system-app/src/app/app.module.ts","./projects/blockchain-voting-system-app/src/app/core/notifications/notification.service.ts","./projects/blockchain-voting-system-app/src/assets/logo.png","./projects/blockchain-voting-system-app/src/app/core/http-interceptors/http-error.interceptor.ts","./projects/blockchain-voting-system-app/src/app/core/animations/animations.service.ts","./projects/blockchain-voting-system-app/src/main.ts","./projects/blockchain-voting-system-app/src/app/core/animations/route.animations.ts","./projects/blockchain-voting-system-app/src/app/core/meta-reducers/debug.reducer.ts","./projects/blockchain-voting-system-app/src/app/core/auth/auth.reducer.ts","./projects/blockchain-voting-system-app/src/app/app-routing.module.ts","./projects/blockchain-voting-system-app/src/app/core/google-analytics/google-analytics.effects.ts","./projects/blockchain-voting-system-app/src/app/core/auth/auth.effects.ts","./projects/blockchain-voting-system-app/src/app/core/auth/auth.actions.ts","./projects/blockchain-voting-system-app/src/app/app/app.component.ts","./projects/blockchain-voting-system-app/src/app/app/app.component.html","./projects/blockchain-voting-system-app/src/app/core/error-handler/app-error-handler.service.ts","./projects/blockchain-voting-system-app/src/app/core/router/custom-serializer.ts","./projects/blockchain-voting-system-app/src/app/core/settings/settings.model.ts","./projects/blockchain-voting-system-app/src/app/core/core.module.ts","./projects/blockchain-voting-system-app/src/app/core/auth/auth.selectors.ts","./projects/blockchain-voting-system-app/src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import {\n  ActionReducerMap,\n  MetaReducer,\n  createFeatureSelector\n} from '@ngrx/store';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nimport { environment } from '../../environments/environment';\n\nimport { initStateFromLocalStorage } from './meta-reducers/init-state-from-local-storage.reducer';\nimport { debug } from './meta-reducers/debug.reducer';\nimport { AuthState } from './auth/auth.models';\nimport { authReducer } from './auth/auth.reducer';\nimport { RouterStateUrl } from './router/router.state';\nimport { settingsReducer } from './settings/settings.reducer';\nimport { SettingsState } from './settings/settings.model';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  auth: authReducer,\n  settings: settingsReducer,\n  router: routerReducer\n};\n\nexport const metaReducers: MetaReducer<AppState>[] = [\n  initStateFromLocalStorage\n];\n\nif (!environment.production) {\n  if (!environment.test) {\n    metaReducers.unshift(debug);\n  }\n}\n\nexport const selectAuthState = createFeatureSelector<AppState, AuthState>(\n  'auth'\n);\n\nexport const selectSettingsState = createFeatureSelector<\n  AppState,\n  SettingsState\n>('settings');\n\nexport const selectRouterState = createFeatureSelector<\n  AppState,\n  RouterReducerState<RouterStateUrl>\n>('router');\n\nexport interface AppState {\n  auth: AuthState;\n  settings: SettingsState;\n  router: RouterReducerState<RouterStateUrl>;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nconst packageJson = require('../../../../package.json');\n\nexport const environment = {\n  appName: 'Blockchain Voting System UI',\n  envName: 'DEV',\n  production: false,\n  test: false,\n  i18nPrefix: '',\n  versions: {\n    app: packageJson.version,\n    angular: packageJson.dependencies['@angular/core'],\n    ngrx: packageJson.dependencies['@ngrx/store'],\n    material: packageJson.dependencies['@angular/material'],\n    bootstrap: packageJson.dependencies.bootstrap,\n    rxjs: packageJson.dependencies.rxjs,\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\n    angularCli: packageJson.devDependencies['@angular/cli'],\n    typescript: packageJson.devDependencies['typescript'],\n    cypress: packageJson.devDependencies['cypress'],\n    eslint: packageJson.devDependencies['eslint']\n  }\n};\n","import { Injectable } from '@angular/core';\n\nconst APP_PREFIX = 'ANMS-';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  constructor() {}\n\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map((key) =>\n            key\n              .split('-')\n              .map((token, index) =>\n                index === 0\n                  ? token\n                  : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    const retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { SettingsState } from './settings.model';\nimport { selectSettingsState } from '../core.state';\n\nexport const selectSettings = createSelector(\n  selectSettingsState,\n  (state: SettingsState) => state\n);\n\nexport const selectSettingsStickyHeader = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.stickyHeader\n);\n\nexport const selectSettingsLanguage = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.language\n);\n\nexport const selectTheme = createSelector(\n  selectSettings,\n  (settings) => settings.theme\n);\n\nexport const selectPageAnimations = createSelector(\n  selectSettings,\n  (settings) => settings.pageAnimations\n);\n\nexport const selectElementsAnimations = createSelector(\n  selectSettings,\n  (settings) => settings.elementsAnimations\n);\n\nexport const selectAutoNightMode = createSelector(\n  selectSettings,\n  (settings) => settings.autoNightMode\n);\n\nexport const selectNightTheme = createSelector(\n  selectSettings,\n  (settings) => settings.nightTheme\n);\n\nexport const selectHour = createSelector(\n  selectSettings,\n  (settings) => settings.hour\n);\n\nexport const selectIsNightHour = createSelector(\n  selectAutoNightMode,\n  selectHour,\n  (autoNightMode, hour) => autoNightMode && (hour >= 21 || hour <= 7)\n);\n\nexport const selectEffectiveTheme = createSelector(\n  selectTheme,\n  selectNightTheme,\n  selectIsNightHour,\n  (theme, nightTheme, isNightHour) =>\n    (isNightHour ? nightTheme : theme).toLowerCase()\n);\n","import { createAction, props } from '@ngrx/store';\n\nimport { Language } from './settings.model';\n\nexport const actionSettingsChangeLanguage = createAction(\n  '[Settings] Change Language',\n  props<{ language: Language }>()\n);\n\nexport const actionSettingsChangeTheme = createAction(\n  '[Settings] Change Theme',\n  props<{ theme: string }>()\n);\nexport const actionSettingsChangeAutoNightMode = createAction(\n  '[Settings] Change Auto Night Mode',\n  props<{ autoNightMode: boolean }>()\n);\n\nexport const actionSettingsChangeStickyHeader = createAction(\n  '[Settings] Change Sticky Header',\n  props<{ stickyHeader: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPage = createAction(\n  '[Settings] Change Animations Page',\n  props<{ pageAnimations: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPageDisabled = createAction(\n  '[Settings] Change Animations Page Disabled',\n  props<{ pageAnimationsDisabled: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsElements = createAction(\n  '[Settings] Change Animations Elements',\n  props<{ elementsAnimations: boolean }>()\n);\nexport const actionSettingsChangeHour = createAction(\n  '[Settings] Change Hours',\n  props<{ hour: number }>()\n);\n","import { Title } from '@angular/platform-browser';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\n\nimport { environment as env } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  constructor(\n    private translateService: TranslateService,\n    private title: Title\n  ) {}\n\n  setTitle(\n    snapshot: ActivatedRouteSnapshot,\n    lazyTranslateService?: TranslateService\n  ) {\n    let lastChild = snapshot;\n    while (lastChild.children.length) {\n      lastChild = lastChild.children[0];\n    }\n    const { title } = lastChild.data;\n    const translate = lazyTranslateService || this.translateService;\n    if (title) {\n      translate\n        .get(title)\n        .pipe(filter((translatedTitle) => translatedTitle !== title))\n        .subscribe((translatedTitle) =>\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\n        );\n    } else {\n      this.title.setTitle(env.appName);\n    }\n  }\n}\n","import { ActivationEnd, Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { select, Store } from '@ngrx/store';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { TranslateService } from '@ngx-translate/core';\nimport { combineLatest, merge, of } from 'rxjs';\nimport {\n  tap,\n  withLatestFrom,\n  distinctUntilChanged,\n  filter\n} from 'rxjs/operators';\n\nimport { selectSettingsState } from '../core.state';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AnimationsService } from '../animations/animations.service';\nimport { TitleService } from '../title/title.service';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeHour\n} from './settings.actions';\nimport {\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectPageAnimations,\n  selectElementsAnimations\n} from './settings.selectors';\nimport { State } from './settings.model';\n\nexport const SETTINGS_KEY = 'SETTINGS';\n\nconst INIT = of('bvs-init-effect-trigger');\n\n@Injectable()\nexport class SettingsEffects {\n  hour = 0;\n\n  changeHour = this.ngZone.runOutsideAngular(() =>\n    setInterval(() => {\n      const hour = new Date().getHours();\n      if (hour !== this.hour) {\n        this.hour = hour;\n        this.ngZone.run(() =>\n          this.store.dispatch(actionSettingsChangeHour({ hour }))\n        );\n      }\n    }, 60_000)\n  );\n\n  persistSettings = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          actionSettingsChangeAnimationsElements,\n          actionSettingsChangeAnimationsPage,\n          actionSettingsChangeAnimationsPageDisabled,\n          actionSettingsChangeAutoNightMode,\n          actionSettingsChangeLanguage,\n          actionSettingsChangeStickyHeader,\n          actionSettingsChangeTheme\n        ),\n        withLatestFrom(this.store.pipe(select(selectSettingsState))),\n        tap(([action, settings]) =>\n          this.localStorageService.setItem(SETTINGS_KEY, settings)\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateRouteAnimationType = createEffect(\n    () =>\n      merge(\n        INIT,\n        this.actions$.pipe(\n          ofType(\n            actionSettingsChangeAnimationsElements,\n            actionSettingsChangeAnimationsPage\n          )\n        )\n      ).pipe(\n        withLatestFrom(\n          combineLatest([\n            this.store.pipe(select(selectPageAnimations)),\n            this.store.pipe(select(selectElementsAnimations))\n          ])\n        ),\n        tap(([action, [pageAnimations, elementsAnimations]]) =>\n          this.animationsService.updateRouteAnimationType(\n            pageAnimations,\n            elementsAnimations\n          )\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateTheme = createEffect(\n    () =>\n      merge(INIT, this.actions$.pipe(ofType(actionSettingsChangeTheme))).pipe(\n        withLatestFrom(this.store.pipe(select(selectEffectiveTheme))),\n        tap(([action, effectiveTheme]) => {\n          const classList = this.overlayContainer.getContainerElement()\n            .classList;\n          const toRemove = Array.from(classList).filter((item: string) =>\n            item.includes('-theme')\n          );\n          if (toRemove.length) {\n            classList.remove(...toRemove);\n          }\n          classList.add(effectiveTheme);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  setTranslateServiceLanguage = createEffect(\n    () =>\n      this.store.pipe(\n        select(selectSettingsLanguage),\n        distinctUntilChanged(),\n        tap((language) => this.translateService.use(language))\n      ),\n    { dispatch: false }\n  );\n\n  setTitle = createEffect(\n    () =>\n      merge(\n        this.actions$.pipe(ofType(actionSettingsChangeLanguage)),\n        this.router.events.pipe(\n          filter((event) => event instanceof ActivationEnd)\n        )\n      ).pipe(\n        tap(() => {\n          this.titleService.setTitle(\n            this.router.routerState.snapshot.root,\n            this.translateService\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<State>,\n    private router: Router,\n    private overlayContainer: OverlayContainer,\n    private localStorageService: LocalStorageService,\n    private titleService: TitleService,\n    private animationsService: AnimationsService,\n    private translateService: TranslateService,\n    private ngZone: NgZone\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { selectIsAuthenticated } from './auth.selectors';\nimport { AppState } from '../core.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(private store: Store<AppState>) {}\n\n  canActivate(): Observable<boolean> {\n    return this.store.pipe(select(selectIsAuthenticated));\n  }\n}\n","import { SettingsState, NIGHT_MODE_THEME } from './settings.model';\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeHour,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeTheme\n} from './settings.actions';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nexport const initialState: SettingsState = {\n  language: 'en',\n  theme: 'DEFAULT-THEME',\n  autoNightMode: false,\n  nightTheme: NIGHT_MODE_THEME,\n  stickyHeader: true,\n  pageAnimations: true,\n  pageAnimationsDisabled: false,\n  elementsAnimations: true,\n  hour: 0\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(\n    actionSettingsChangeLanguage,\n    actionSettingsChangeTheme,\n    actionSettingsChangeAutoNightMode,\n    actionSettingsChangeStickyHeader,\n    actionSettingsChangeAnimationsPage,\n    actionSettingsChangeAnimationsElements,\n    actionSettingsChangeHour,\n    (state, action) => ({ ...state, ...action })\n  ),\n  on(\n    actionSettingsChangeAnimationsPageDisabled,\n    (state, { pageAnimationsDisabled }) => ({\n      ...state,\n      pageAnimationsDisabled,\n      pageAnimations: false\n    })\n  )\n);\n\nexport function settingsReducer(\n  state: SettingsState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule } from './core/core.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app/app.component';\n\n@NgModule({\n  imports: [\n    // angular\n    BrowserAnimationsModule,\n    BrowserModule,\n\n    // core\n    CoreModule,\n\n    // app\n    AppRoutingModule\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(\n    private readonly snackBar: MatSnackBar,\n    private readonly zone: NgZone\n  ) {}\n\n  default(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'default-notification-overlay'\n    });\n  }\n\n  info(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'info-notification-overlay'\n    });\n  }\n\n  success(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'success-notification-overlay'\n    });\n  }\n\n  warn(message: string) {\n    this.show(message, {\n      duration: 2500,\n      panelClass: 'warning-notification-overlay'\n    });\n  }\n\n  error(message: string) {\n    this.show(message, {\n      duration: 3000,\n      panelClass: 'error-notification-overlay'\n    });\n  }\n\n  private show(message: string, configuration: MatSnackBarConfig) {\n    // Need to open snackBar from Angular zone to prevent issues with its position per\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\n  }\n}\n","export default __webpack_public_path__ + \"logo.png\";","import { Injectable, Injector, ErrorHandler } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/** Passes HttpErrorResponse to application-wide error handler */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap({\n        error: (err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            const appErrorHandler = this.injector.get(ErrorHandler);\n            appErrorHandler.handleError(err);\n          }\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimationsService {\n  private static routeAnimationType: RouteAnimationType = 'NONE';\n\n  constructor() {\n    AnimationsService.routeAnimationType = 'NONE';\n  }\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(\n    pageAnimations: boolean,\n    elementsAnimations: boolean\n  ) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations\n        ? 'ALL'\n        : pageAnimations\n        ? 'PAGE'\n        : elementsAnimations\n        ? 'ELEMENTS'\n        : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import {\n  animate,\n  query,\n  style,\n  transition,\n  trigger,\n  stagger,\n  sequence\n} from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate(\n          '0.2s ease-in-out',\n          style({ transform: 'translateY(-3%)', opacity: 0 })\n        ),\n        style({ position: 'fixed' })\n      ],\n      { optional: true }\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static'\n        }),\n        animate(\n          '0.5s ease-in-out',\n          style({ transform: 'translateY(0%)', opacity: 1 })\n        )\n      ],\n      { optional: true }\n    )\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(75, [\n      style({ transform: 'translateY(10%)', opacity: 0 }),\n      animate(\n        '0.5s ease-in-out',\n        style({ transform: 'translateY(0%)', opacity: 1 })\n      )\n    ]),\n    { optional: true }\n  )\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routeAnimations = trigger('routeAnimations', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","import { ActionReducer } from '@ngrx/store';\n\nimport { AppState } from '../core.state';\n\nexport function debug(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function (state, action) {\n    const newState = reducer(state, action);\n    console.log(`[DEBUG] action: ${action.type}`, {\n      payload: (<any>action).payload,\n      oldState: state,\n      newState\n    });\n    return newState;\n  };\n}\n","import { AuthState } from './auth.models';\nimport { authLogin, authLogout } from './auth.actions';\nimport { createReducer, on, Action } from '@ngrx/store';\n\nexport const initialState: AuthState = {\n  isAuthenticated: false\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(authLogin, (state) => ({ ...state, isAuthenticated: true })),\n  on(authLogout, (state) => ({ ...state, isAuthenticated: false }))\n);\n\nexport function authReducer(\n  state: AuthState | undefined,\n  action: Action\n): AuthState {\n  return reducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'about',\n    pathMatch: 'full'\n  },\n  {\n    path: 'about',\n    loadChildren: () =>\n      import('./features/about/about.module').then((m) => m.AboutModule)\n  },\n  {\n    path: 'vote',\n    loadChildren: () =>\n      import('./features/vote/vote.module').then((m) => m.VoteModule)\n  },\n  {\n    path: 'settings',\n    loadChildren: () =>\n      import('./features/settings/settings.module').then(\n        (m) => m.SettingsModule\n      )\n  },\n  {\n    path: 'track',\n    loadChildren: () =>\n      import('./features/track/track.module').then((m) => m.TrackModule)\n  },\n  {\n    path: '**',\n    redirectTo: 'about'\n  }\n];\n\n@NgModule({\n  // useHash supports github.io demo page, remove in your app\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      scrollPositionRestoration: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n      relativeLinkResolution: 'legacy'\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { createEffect } from '@ngrx/effects';\nimport { tap, filter } from 'rxjs/operators';\n\n@Injectable()\nexport class GoogleAnalyticsEffects {\n  pageView = createEffect(\n    () => () =>\n      this.router.events.pipe(\n        filter((event) => event instanceof NavigationEnd),\n        tap((event: NavigationEnd) => {\n          (<any>window).ga('set', 'page', event.urlAfterRedirects);\n          (<any>window).ga('send', 'pageview');\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private router: Router) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\n\nimport { authLogin, authLogout } from './auth.actions';\n\nexport const AUTH_KEY = 'AUTH';\n\n@Injectable()\nexport class AuthEffects {\n  login = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogin),\n        tap(() =>\n          this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: true })\n        )\n      ),\n    { dispatch: false }\n  );\n\n  logout = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogout),\n        tap(() => {\n          this.router.navigate(['']);\n          this.localStorageService.setItem(AUTH_KEY, {\n            isAuthenticated: false\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n}\n","import { createAction } from '@ngrx/store';\n\nexport const authLogin = createAction('[Auth] Login');\nexport const authLogout = createAction('[Auth] Logout');\n","import browser from 'browser-detect';\nimport { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { environment as env } from '../../environments/environment';\n\nimport {\n  authLogin,\n  authLogout,\n  routeAnimations,\n  LocalStorageService,\n  selectIsAuthenticated,\n  selectSettingsStickyHeader,\n  selectSettingsLanguage,\n  selectEffectiveTheme\n} from '../core/core.module';\nimport {\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeLanguage\n} from '../core/settings/settings.actions';\n\n@Component({\n  selector: 'bvs-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routeAnimations]\n})\nexport class AppComponent implements OnInit {\n  isProd = env.production;\n  envName = env.envName;\n  version = env.versions.app;\n  year = new Date().getFullYear();\n  logo = require('../../assets/logo.png').default;\n  languages = ['en'];\n  navigation = [\n    { link: 'about', label: 'bvs.menu.about' },\n    { link: 'vote', label: 'bvs.menu.vote' },\n    { link: 'track', label: 'bvs.menu.track' }\n  ];\n  navigationSideMenu = [\n    ...this.navigation,\n    { link: 'settings', label: 'bvs.menu.settings' }\n  ];\n\n  isAuthenticated$: Observable<boolean>;\n  stickyHeader$: Observable<boolean>;\n  language$: Observable<string>;\n  theme$: Observable<string>;\n\n  constructor(\n    private store: Store,\n    private storageService: LocalStorageService\n  ) {}\n\n  private static isIEorEdgeOrSafari() {\n    return ['ie', 'edge', 'safari'].includes(browser().name);\n  }\n\n  ngOnInit(): void {\n    this.storageService.testLocalStorage();\n    if (AppComponent.isIEorEdgeOrSafari()) {\n      this.store.dispatch(\n        actionSettingsChangeAnimationsPageDisabled({\n          pageAnimationsDisabled: true\n        })\n      );\n    }\n\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\n    this.stickyHeader$ = this.store.pipe(select(selectSettingsStickyHeader));\n    this.language$ = this.store.pipe(select(selectSettingsLanguage));\n    this.theme$ = this.store.pipe(select(selectEffectiveTheme));\n  }\n\n  onLoginClick() {\n    this.store.dispatch(authLogin());\n  }\n\n  onLogoutClick() {\n    this.store.dispatch(authLogout());\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n}\n","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\n\n  <mat-sidenav-container>\n\n    <mat-sidenav #sidenav mode=\"push\">\n      <div class=\"branding\"><img [src]=\"logo\" [alt]=\"logo\"/>\n        <span>{{ 'bvs.title.short' | translate}}</span></div>\n      <mat-nav-list>\n        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\"\n          routerLinkActive=\"active\">\n          {{item.label | translate}}\n        </a>\n        <a mat-list-item href=\"https://github.com/tomastrajan/blockchain-voting-system-app\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Github\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <div class=\"wrapper\">\n\n      <div class=\"toolbar\" [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\" [class.mat-elevation-z4]=\"(stickyHeader$ | async)\">\n        <mat-toolbar color=\"primary\">\n          <button mat-icon-button class=\"d-md-none\" (click)=\"sidenav.open()\">\n            <fa-icon icon=\"bars\"></fa-icon>\n          </button>\n\n          <span routerLink=\"\" class=\"branding spacer center d-inline d-sm-none\">\n            <img [src]=\"logo\" [alt]=\"logo\"/></span>\n          <span routerLink=\"\" class=\"branding spacer center d-none d-sm-inline d-md-none\"><img [src]=\"logo\" [alt]=\"logo\"/> {{\n            'bvs.title.short' | translate }}</span>\n          <span routerLink=\"\" class=\"branding spacer d-none d-md-inline\"><img [src]=\"logo\"[alt]=\"logo\" /> {{ 'bvs.title.long' | translate\n            }}</span>\n\n          <span class=\"d-none d-md-inline\">\n            <button mat-button class=\"nav-button\" *ngFor=\"let item of navigation\" [routerLink]=\"[item.link]\"\n              routerLinkActive=\"active\">\n              {{item.label | translate}}\n            </button>\n          </span>\n\n          <button mat-button mat-stroked-button color=\"accent\" *ngIf=\"!(isAuthenticated$ | async)\" (click)=\"onLoginClick()\">\n            {{ 'bvs.menu.login' | translate }}\n          </button>\n\n          <button *ngIf=\"(isAuthenticated$ | async)\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"toolbarUserMenu\">\n            <fa-icon icon=\"user-circle\"></fa-icon>\n          </button>\n\n          <mat-menu #toolbarUserMenu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogoutClick()\">\n              <mat-icon><fa-icon icon=\"power-off\"></fa-icon></mat-icon>\n              <span>{{ 'bvs.menu.logout' | translate }}</span>\n            </button>\n          </mat-menu>\n\n          <button mat-icon-button routerLink=\"settings\" class=\"d-none d-sm-inline\">\n            <fa-icon icon=\"cog\"></fa-icon>\n          </button>\n\n          <span *ngIf=\"language$ | async as language\">\n            <mat-select [ngModel]=\"language\" (selectionChange)=\"onLanguageSelect($event)\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l\">\n                {{ l.toUpperCase() }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </mat-toolbar>\n      </div>\n\n      <div class=\"content\" [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\n        <router-outlet #o=\"outlet\"></router-outlet>\n      </div>\n\n      <div class=\"footer\">\n        <div class=\"row\">\n          <div class=\"col-12 signature\">\n            &#169; <span class=\"year\">{{year}}</span> - Blockchain Voting System\n            <br class=\"d-block d-sm-none\">\n            <a [matTooltip]=\"'bvs.footer.changelog' | translate\"\n               matTooltipPosition=\"before\"\n               href=\"https://github.com/tomastrajan/blockchain-voting-system-app/blob/master/CHANGELOG.md\">\n              <fa-icon icon=\"rocket\"></fa-icon>\n              {{version}} <span *ngIf=\"!isProd\">[{{envName}}]</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </mat-sidenav-container>\n\n</div>\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\n\nimport { NotificationService } from '../notifications/notification.service';\n\n/** Application-wide error handler that adds a UI notification to the error handling\n * provided by the default Angular ErrorHandler.\n */\n@Injectable()\nexport class AppErrorHandler extends ErrorHandler {\n  constructor(private notificationsService: NotificationService) {\n    super();\n  }\n\n  handleError(error: Error | HttpErrorResponse) {\n    let displayMessage = 'An error occurred.';\n\n    if (!environment.production) {\n      displayMessage += ' See console for details.';\n    }\n\n    this.notificationsService.error(displayMessage);\n\n    super.handleError(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\nimport { RouterStateUrl } from './router.state';\n\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {\n      url,\n      root: { queryParams }\n    } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n","import { AppState } from '../core.module';\n\nexport const NIGHT_MODE_THEME = 'BLACK-THEME';\n\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\n\nexport interface SettingsState {\n  language: string;\n  theme: string;\n  autoNightMode: boolean;\n  nightTheme: string;\n  stickyHeader: boolean;\n  pageAnimations: boolean;\n  pageAnimationsDisabled: boolean;\n  elementsAnimations: boolean;\n  hour: number;\n}\n\nexport interface State extends AppState {\n  settings: SettingsState;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer\n} from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {\n  FaIconLibrary,\n  FontAwesomeModule\n} from '@fortawesome/angular-fontawesome';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { environment } from '../../environments/environment';\n\nimport {\n  AppState,\n  reducers,\n  metaReducers,\n  selectRouterState\n} from './core.state';\nimport { AuthEffects } from './auth/auth.effects';\nimport { selectIsAuthenticated, selectAuth } from './auth/auth.selectors';\nimport { authLogin, authLogout } from './auth/auth.actions';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { TitleService } from './title/title.service';\nimport {\n  ROUTE_ANIMATIONS_ELEMENTS,\n  routeAnimations\n} from './animations/route.animations';\nimport { AnimationsService } from './animations/animations.service';\nimport { AppErrorHandler } from './error-handler/app-error-handler.service';\nimport { CustomSerializer } from './router/custom-serializer';\nimport { LocalStorageService } from './local-storage/local-storage.service';\nimport { HttpErrorInterceptor } from './http-interceptors/http-error.interceptor';\nimport { GoogleAnalyticsEffects } from './google-analytics/google-analytics.effects';\nimport { NotificationService } from './notifications/notification.service';\nimport { SettingsEffects } from './settings/settings.effects';\nimport {\n  selectSettingsLanguage,\n  selectEffectiveTheme,\n  selectSettingsStickyHeader\n} from './settings/settings.selectors';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  faCog,\n  faBars,\n  faRocket,\n  faPowerOff,\n  faUserCircle,\n  faPlayCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faGithub,\n  faMediumM,\n  faTwitter,\n  faInstagram,\n  faYoutube\n} from '@fortawesome/free-brands-svg-icons';\n\nexport {\n  TitleService,\n  selectAuth,\n  authLogin,\n  authLogout,\n  routeAnimations,\n  AppState,\n  LocalStorageService,\n  selectIsAuthenticated,\n  ROUTE_ANIMATIONS_ELEMENTS,\n  AnimationsService,\n  AuthGuardService,\n  selectRouterState,\n  NotificationService,\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectSettingsStickyHeader\n};\n\nexport function httpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(\n    http,\n    `${environment.i18nPrefix}/assets/i18n/`,\n    '.json'\n  );\n}\n\n@NgModule({\n  imports: [\n    // angular\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // ngrx\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([\n      AuthEffects,\n      SettingsEffects,\n      GoogleAnalyticsEffects\n    ]),\n    environment.production\n      ? []\n      : StoreDevtoolsModule.instrument({\n          name: 'Blockchain Voting System'\n        }),\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    { provide: ErrorHandler, useClass: AppErrorHandler },\n    { provide: RouterStateSerializer, useClass: CustomSerializer }\n  ],\n  exports: [\n    // angular\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule,\n    faIconLibrary: FaIconLibrary\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n    faIconLibrary.addIcons(\n      faCog,\n      faBars,\n      faRocket,\n      faPowerOff,\n      faUserCircle,\n      faPlayCircle,\n      faGithub,\n      faMediumM,\n      faTwitter,\n      faInstagram,\n      faYoutube\n    );\n  }\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { selectAuthState } from '../core.state';\nimport { AuthState } from './auth.models';\n\nexport const selectAuth = createSelector(\n  selectAuthState,\n  (state: AuthState) => state\n);\n\nexport const selectIsAuthenticated = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.isAuthenticated\n);\n","import { ActionReducer, INIT, UPDATE } from '@ngrx/store';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AppState } from '../core.state';\n\nexport function initStateFromLocalStorage(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function (state, action) {\n    const newState = reducer(state, action);\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\n      return { ...newState, ...LocalStorageService.loadInitialState() };\n    }\n    return newState;\n  };\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}