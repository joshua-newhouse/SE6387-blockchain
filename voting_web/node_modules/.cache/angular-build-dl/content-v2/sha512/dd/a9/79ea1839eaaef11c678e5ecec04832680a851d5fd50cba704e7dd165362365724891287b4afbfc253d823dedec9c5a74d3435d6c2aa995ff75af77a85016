{"version":3,"sources":["webpack:///projects/blockchain-voting-system-app/src/app/core/core.state.ts","webpack:///projects/blockchain-voting-system-app/src/environments/environment.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/local-storage/local-storage.service.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/settings/settings.selectors.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/settings/settings.actions.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/title/title.service.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/settings/settings.effects.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/auth/auth-guard.service.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/settings/settings.reducer.ts","webpack:///projects/blockchain-voting-system-app/src/app/app.module.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/notifications/notification.service.ts","webpack:///projects/blockchain-voting-system-app/src/assets/logo.png","webpack:///projects/blockchain-voting-system-app/src/app/core/http-interceptors/http-error.interceptor.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/animations/animations.service.ts","webpack:///projects/blockchain-voting-system-app/src/main.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/animations/route.animations.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/meta-reducers/debug.reducer.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/auth/auth.reducer.ts","webpack:///projects/blockchain-voting-system-app/src/app/app-routing.module.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/google-analytics/google-analytics.effects.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/auth/auth.effects.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/auth/auth.actions.ts","webpack:///projects/blockchain-voting-system-app/src/app/app/app.component.ts","webpack:///projects/blockchain-voting-system-app/src/app/app/app.component.html","webpack:///projects/blockchain-voting-system-app/src/app/core/error-handler/app-error-handler.service.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/router/custom-serializer.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/settings/settings.model.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/core.module.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/auth/auth.selectors.ts","webpack:///projects/blockchain-voting-system-app/src/app/core/meta-reducers/init-state-from-local-storage.reducer.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["reducers","auth","settings","router","metaReducers","production","test","unshift","selectAuthState","selectSettingsState","selectRouterState","packageJson","environment","appName","envName","i18nPrefix","versions","app","version","angular","dependencies","ngrx","material","bootstrap","rxjs","ngxtranslate","fontAwesome","angularCli","devDependencies","typescript","cypress","eslint","APP_PREFIX","LocalStorageService","key","value","localStorage","setItem","JSON","stringify","parse","getItem","removeItem","testValue","testKey","errorMessage","retrievedValue","Error","Object","keys","reduce","state","storageKey","includes","stateKeys","replace","toLowerCase","split","map","token","index","charAt","toUpperCase","slice","join","currentStateRef","forEach","length","selectSettings","selectSettingsStickyHeader","stickyHeader","selectSettingsLanguage","language","selectTheme","theme","selectPageAnimations","pageAnimations","selectElementsAnimations","elementsAnimations","selectAutoNightMode","autoNightMode","selectNightTheme","nightTheme","selectHour","hour","selectIsNightHour","selectEffectiveTheme","isNightHour","actionSettingsChangeLanguage","actionSettingsChangeTheme","actionSettingsChangeAutoNightMode","actionSettingsChangeStickyHeader","actionSettingsChangeAnimationsPage","actionSettingsChangeAnimationsPageDisabled","actionSettingsChangeAnimationsElements","actionSettingsChangeHour","TitleService","translateService","title","snapshot","lazyTranslateService","lastChild","children","data","translate","get","pipe","translatedTitle","subscribe","setTitle","SETTINGS_KEY","INIT","SettingsEffects","actions$","store","overlayContainer","localStorageService","titleService","animationsService","ngZone","changeHour","runOutsideAngular","setInterval","Date","getHours","run","dispatch","persistSettings","action","updateRouteAnimationType","updateTheme","effectiveTheme","classList","getContainerElement","toRemove","Array","from","filter","item","remove","add","setTranslateServiceLanguage","use","events","event","routerState","root","AuthGuardService","initialState","pageAnimationsDisabled","reducer","settingsReducer","AppModule","NotificationService","snackBar","zone","message","show","duration","panelClass","configuration","open","HttpErrorInterceptor","injector","request","next","handle","error","err","appErrorHandler","handleError","AnimationsService","routeAnimationType","type","bootstrapModule","console","ROUTE_ANIMATIONS_ELEMENTS","STEPS_ALL","opacity","position","optional","transform","STEPS_NONE","STEPS_PAGE","STEPS_ELEMENTS","routeAnimations","isRouteAnimationsAll","isRouteAnimationsNone","isRouteAnimationsPage","isRouteAnimationsElements","isRouteAnimationsType","debug","newState","log","payload","oldState","isAuthenticated","authReducer","routes","path","redirectTo","pathMatch","loadChildren","then","m","AboutModule","VoteModule","SettingsModule","TrackModule","AppRoutingModule","forRoot","useHash","scrollPositionRestoration","preloadingStrategy","relativeLinkResolution","GoogleAnalyticsEffects","pageView","window","ga","urlAfterRedirects","AUTH_KEY","AuthEffects","login","logout","navigate","authLogin","authLogout","AppComponent","storageService","isProd","year","getFullYear","logo","languages","navigation","link","label","navigationSideMenu","testLocalStorage","isIEorEdgeOrSafari","isAuthenticated$","stickyHeader$","language$","theme$","name","onLogoutClick","AppErrorHandler","notificationsService","displayMessage","CustomSerializer","route","firstChild","url","queryParams","params","NIGHT_MODE_THEME","httpLoaderFactory","http","CoreModule","parentModule","faIconLibrary","addIcons","provide","useClass","multi","instrument","loader","useFactory","deps","selectAuth","selectIsAuthenticated","initStateFromLocalStorage","toString","loadInitialState","webpackEmptyAsyncContext","req","Promise","resolve","e","code","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import {\n  ActionReducerMap,\n  MetaReducer,\n  createFeatureSelector\n} from '@ngrx/store';\nimport { routerReducer, RouterReducerState } from '@ngrx/router-store';\n\nimport { environment } from '../../environments/environment';\n\nimport { initStateFromLocalStorage } from './meta-reducers/init-state-from-local-storage.reducer';\nimport { debug } from './meta-reducers/debug.reducer';\nimport { AuthState } from './auth/auth.models';\nimport { authReducer } from './auth/auth.reducer';\nimport { RouterStateUrl } from './router/router.state';\nimport { settingsReducer } from './settings/settings.reducer';\nimport { SettingsState } from './settings/settings.model';\n\nexport const reducers: ActionReducerMap<AppState> = {\n  auth: authReducer,\n  settings: settingsReducer,\n  router: routerReducer\n};\n\nexport const metaReducers: MetaReducer<AppState>[] = [\n  initStateFromLocalStorage\n];\n\nif (!environment.production) {\n  if (!environment.test) {\n    metaReducers.unshift(debug);\n  }\n}\n\nexport const selectAuthState = createFeatureSelector<AppState, AuthState>(\n  'auth'\n);\n\nexport const selectSettingsState = createFeatureSelector<\n  AppState,\n  SettingsState\n>('settings');\n\nexport const selectRouterState = createFeatureSelector<\n  AppState,\n  RouterReducerState<RouterStateUrl>\n>('router');\n\nexport interface AppState {\n  auth: AuthState;\n  settings: SettingsState;\n  router: RouterReducerState<RouterStateUrl>;\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nconst packageJson = require('../../../../package.json');\n\nexport const environment = {\n  appName: 'Blockchain Voting System UI',\n  envName: 'DEV',\n  production: false,\n  test: false,\n  i18nPrefix: '',\n  versions: {\n    app: packageJson.version,\n    angular: packageJson.dependencies['@angular/core'],\n    ngrx: packageJson.dependencies['@ngrx/store'],\n    material: packageJson.dependencies['@angular/material'],\n    bootstrap: packageJson.dependencies.bootstrap,\n    rxjs: packageJson.dependencies.rxjs,\n    ngxtranslate: packageJson.dependencies['@ngx-translate/core'],\n    fontAwesome: packageJson.dependencies['@fortawesome/fontawesome-free'],\n    angularCli: packageJson.devDependencies['@angular/cli'],\n    typescript: packageJson.devDependencies['typescript'],\n    cypress: packageJson.devDependencies['cypress'],\n    eslint: packageJson.devDependencies['eslint']\n  }\n};\n","import { Injectable } from '@angular/core';\n\nconst APP_PREFIX = 'ANMS-';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n  constructor() {}\n\n  static loadInitialState() {\n    return Object.keys(localStorage).reduce((state: any, storageKey) => {\n      if (storageKey.includes(APP_PREFIX)) {\n        const stateKeys = storageKey\n          .replace(APP_PREFIX, '')\n          .toLowerCase()\n          .split('.')\n          .map((key) =>\n            key\n              .split('-')\n              .map((token, index) =>\n                index === 0\n                  ? token\n                  : token.charAt(0).toUpperCase() + token.slice(1)\n              )\n              .join('')\n          );\n        let currentStateRef = state;\n        stateKeys.forEach((key, index) => {\n          if (index === stateKeys.length - 1) {\n            currentStateRef[key] = JSON.parse(localStorage.getItem(storageKey));\n            return;\n          }\n          currentStateRef[key] = currentStateRef[key] || {};\n          currentStateRef = currentStateRef[key];\n        });\n      }\n      return state;\n    }, {});\n  }\n\n  setItem(key: string, value: any) {\n    localStorage.setItem(`${APP_PREFIX}${key}`, JSON.stringify(value));\n  }\n\n  getItem(key: string) {\n    return JSON.parse(localStorage.getItem(`${APP_PREFIX}${key}`));\n  }\n\n  removeItem(key: string) {\n    localStorage.removeItem(`${APP_PREFIX}${key}`);\n  }\n\n  /** Tests that localStorage exists, can be written to, and read from. */\n  testLocalStorage() {\n    const testValue = 'testValue';\n    const testKey = 'testKey';\n    const errorMessage = 'localStorage did not return expected value';\n\n    this.setItem(testKey, testValue);\n    const retrievedValue = this.getItem(testKey);\n    this.removeItem(testKey);\n\n    if (retrievedValue !== testValue) {\n      throw new Error(errorMessage);\n    }\n  }\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { SettingsState } from './settings.model';\nimport { selectSettingsState } from '../core.state';\n\nexport const selectSettings = createSelector(\n  selectSettingsState,\n  (state: SettingsState) => state\n);\n\nexport const selectSettingsStickyHeader = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.stickyHeader\n);\n\nexport const selectSettingsLanguage = createSelector(\n  selectSettings,\n  (state: SettingsState) => state.language\n);\n\nexport const selectTheme = createSelector(\n  selectSettings,\n  (settings) => settings.theme\n);\n\nexport const selectPageAnimations = createSelector(\n  selectSettings,\n  (settings) => settings.pageAnimations\n);\n\nexport const selectElementsAnimations = createSelector(\n  selectSettings,\n  (settings) => settings.elementsAnimations\n);\n\nexport const selectAutoNightMode = createSelector(\n  selectSettings,\n  (settings) => settings.autoNightMode\n);\n\nexport const selectNightTheme = createSelector(\n  selectSettings,\n  (settings) => settings.nightTheme\n);\n\nexport const selectHour = createSelector(\n  selectSettings,\n  (settings) => settings.hour\n);\n\nexport const selectIsNightHour = createSelector(\n  selectAutoNightMode,\n  selectHour,\n  (autoNightMode, hour) => autoNightMode && (hour >= 21 || hour <= 7)\n);\n\nexport const selectEffectiveTheme = createSelector(\n  selectTheme,\n  selectNightTheme,\n  selectIsNightHour,\n  (theme, nightTheme, isNightHour) =>\n    (isNightHour ? nightTheme : theme).toLowerCase()\n);\n","import { createAction, props } from '@ngrx/store';\n\nimport { Language } from './settings.model';\n\nexport const actionSettingsChangeLanguage = createAction(\n  '[Settings] Change Language',\n  props<{ language: Language }>()\n);\n\nexport const actionSettingsChangeTheme = createAction(\n  '[Settings] Change Theme',\n  props<{ theme: string }>()\n);\nexport const actionSettingsChangeAutoNightMode = createAction(\n  '[Settings] Change Auto Night Mode',\n  props<{ autoNightMode: boolean }>()\n);\n\nexport const actionSettingsChangeStickyHeader = createAction(\n  '[Settings] Change Sticky Header',\n  props<{ stickyHeader: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPage = createAction(\n  '[Settings] Change Animations Page',\n  props<{ pageAnimations: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsPageDisabled = createAction(\n  '[Settings] Change Animations Page Disabled',\n  props<{ pageAnimationsDisabled: boolean }>()\n);\n\nexport const actionSettingsChangeAnimationsElements = createAction(\n  '[Settings] Change Animations Elements',\n  props<{ elementsAnimations: boolean }>()\n);\nexport const actionSettingsChangeHour = createAction(\n  '[Settings] Change Hours',\n  props<{ hour: number }>()\n);\n","import { Title } from '@angular/platform-browser';\nimport { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot } from '@angular/router';\nimport { TranslateService } from '@ngx-translate/core';\nimport { filter } from 'rxjs/operators';\n\nimport { environment as env } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TitleService {\n  constructor(\n    private translateService: TranslateService,\n    private title: Title\n  ) {}\n\n  setTitle(\n    snapshot: ActivatedRouteSnapshot,\n    lazyTranslateService?: TranslateService\n  ) {\n    let lastChild = snapshot;\n    while (lastChild.children.length) {\n      lastChild = lastChild.children[0];\n    }\n    const { title } = lastChild.data;\n    const translate = lazyTranslateService || this.translateService;\n    if (title) {\n      translate\n        .get(title)\n        .pipe(filter((translatedTitle) => translatedTitle !== title))\n        .subscribe((translatedTitle) =>\n          this.title.setTitle(`${translatedTitle} - ${env.appName}`)\n        );\n    } else {\n      this.title.setTitle(env.appName);\n    }\n  }\n}\n","import { ActivationEnd, Router } from '@angular/router';\nimport { Injectable, NgZone } from '@angular/core';\nimport { OverlayContainer } from '@angular/cdk/overlay';\nimport { select, Store } from '@ngrx/store';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { TranslateService } from '@ngx-translate/core';\nimport { combineLatest, merge, of } from 'rxjs';\nimport {\n  tap,\n  withLatestFrom,\n  distinctUntilChanged,\n  filter\n} from 'rxjs/operators';\n\nimport { selectSettingsState } from '../core.state';\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AnimationsService } from '../animations/animations.service';\nimport { TitleService } from '../title/title.service';\n\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeTheme,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeHour\n} from './settings.actions';\nimport {\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectPageAnimations,\n  selectElementsAnimations\n} from './settings.selectors';\nimport { State } from './settings.model';\n\nexport const SETTINGS_KEY = 'SETTINGS';\n\nconst INIT = of('bvs-init-effect-trigger');\n\n@Injectable()\nexport class SettingsEffects {\n  hour = 0;\n\n  changeHour = this.ngZone.runOutsideAngular(() =>\n    setInterval(() => {\n      const hour = new Date().getHours();\n      if (hour !== this.hour) {\n        this.hour = hour;\n        this.ngZone.run(() =>\n          this.store.dispatch(actionSettingsChangeHour({ hour }))\n        );\n      }\n    }, 60_000)\n  );\n\n  persistSettings = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(\n          actionSettingsChangeAnimationsElements,\n          actionSettingsChangeAnimationsPage,\n          actionSettingsChangeAnimationsPageDisabled,\n          actionSettingsChangeAutoNightMode,\n          actionSettingsChangeLanguage,\n          actionSettingsChangeStickyHeader,\n          actionSettingsChangeTheme\n        ),\n        withLatestFrom(this.store.pipe(select(selectSettingsState))),\n        tap(([action, settings]) =>\n          this.localStorageService.setItem(SETTINGS_KEY, settings)\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateRouteAnimationType = createEffect(\n    () =>\n      merge(\n        INIT,\n        this.actions$.pipe(\n          ofType(\n            actionSettingsChangeAnimationsElements,\n            actionSettingsChangeAnimationsPage\n          )\n        )\n      ).pipe(\n        withLatestFrom(\n          combineLatest([\n            this.store.pipe(select(selectPageAnimations)),\n            this.store.pipe(select(selectElementsAnimations))\n          ])\n        ),\n        tap(([action, [pageAnimations, elementsAnimations]]) =>\n          this.animationsService.updateRouteAnimationType(\n            pageAnimations,\n            elementsAnimations\n          )\n        )\n      ),\n    { dispatch: false }\n  );\n\n  updateTheme = createEffect(\n    () =>\n      merge(INIT, this.actions$.pipe(ofType(actionSettingsChangeTheme))).pipe(\n        withLatestFrom(this.store.pipe(select(selectEffectiveTheme))),\n        tap(([action, effectiveTheme]) => {\n          const classList = this.overlayContainer.getContainerElement()\n            .classList;\n          const toRemove = Array.from(classList).filter((item: string) =>\n            item.includes('-theme')\n          );\n          if (toRemove.length) {\n            classList.remove(...toRemove);\n          }\n          classList.add(effectiveTheme);\n        })\n      ),\n    { dispatch: false }\n  );\n\n  setTranslateServiceLanguage = createEffect(\n    () =>\n      this.store.pipe(\n        select(selectSettingsLanguage),\n        distinctUntilChanged(),\n        tap((language) => this.translateService.use(language))\n      ),\n    { dispatch: false }\n  );\n\n  setTitle = createEffect(\n    () =>\n      merge(\n        this.actions$.pipe(ofType(actionSettingsChangeLanguage)),\n        this.router.events.pipe(\n          filter((event) => event instanceof ActivationEnd)\n        )\n      ).pipe(\n        tap(() => {\n          this.titleService.setTitle(\n            this.router.routerState.snapshot.root,\n            this.translateService\n          );\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private store: Store<State>,\n    private router: Router,\n    private overlayContainer: OverlayContainer,\n    private localStorageService: LocalStorageService,\n    private titleService: TitleService,\n    private animationsService: AnimationsService,\n    private translateService: TranslateService,\n    private ngZone: NgZone\n  ) {}\n}\n","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { selectIsAuthenticated } from './auth.selectors';\nimport { AppState } from '../core.state';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService implements CanActivate {\n  constructor(private store: Store<AppState>) {}\n\n  canActivate(): Observable<boolean> {\n    return this.store.pipe(select(selectIsAuthenticated));\n  }\n}\n","import { SettingsState, NIGHT_MODE_THEME } from './settings.model';\nimport {\n  actionSettingsChangeAnimationsElements,\n  actionSettingsChangeAnimationsPage,\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeAutoNightMode,\n  actionSettingsChangeHour,\n  actionSettingsChangeLanguage,\n  actionSettingsChangeStickyHeader,\n  actionSettingsChangeTheme\n} from './settings.actions';\nimport { Action, createReducer, on } from '@ngrx/store';\n\nexport const initialState: SettingsState = {\n  language: 'en',\n  theme: 'DEFAULT-THEME',\n  autoNightMode: false,\n  nightTheme: NIGHT_MODE_THEME,\n  stickyHeader: true,\n  pageAnimations: true,\n  pageAnimationsDisabled: false,\n  elementsAnimations: true,\n  hour: 0\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(\n    actionSettingsChangeLanguage,\n    actionSettingsChangeTheme,\n    actionSettingsChangeAutoNightMode,\n    actionSettingsChangeStickyHeader,\n    actionSettingsChangeAnimationsPage,\n    actionSettingsChangeAnimationsElements,\n    actionSettingsChangeHour,\n    (state, action) => ({ ...state, ...action })\n  ),\n  on(\n    actionSettingsChangeAnimationsPageDisabled,\n    (state, { pageAnimationsDisabled }) => ({\n      ...state,\n      pageAnimationsDisabled,\n      pageAnimations: false\n    })\n  )\n);\n\nexport function settingsReducer(\n  state: SettingsState | undefined,\n  action: Action\n) {\n  return reducer(state, action);\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NgModule } from '@angular/core';\n\nimport { CoreModule } from './core/core.module';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app/app.component';\n\n@NgModule({\n  imports: [\n    // angular\n    BrowserAnimationsModule,\n    BrowserModule,\n\n    // core\n    CoreModule,\n\n    // app\n    AppRoutingModule\n  ],\n  declarations: [AppComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Injectable, NgZone } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  constructor(\n    private readonly snackBar: MatSnackBar,\n    private readonly zone: NgZone\n  ) {}\n\n  default(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'default-notification-overlay'\n    });\n  }\n\n  info(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'info-notification-overlay'\n    });\n  }\n\n  success(message: string) {\n    this.show(message, {\n      duration: 2000,\n      panelClass: 'success-notification-overlay'\n    });\n  }\n\n  warn(message: string) {\n    this.show(message, {\n      duration: 2500,\n      panelClass: 'warning-notification-overlay'\n    });\n  }\n\n  error(message: string) {\n    this.show(message, {\n      duration: 3000,\n      panelClass: 'error-notification-overlay'\n    });\n  }\n\n  private show(message: string, configuration: MatSnackBarConfig) {\n    // Need to open snackBar from Angular zone to prevent issues with its position per\n    // https://stackoverflow.com/questions/50101912/snackbar-position-wrong-when-use-errorhandler-in-angular-5-and-material\n    this.zone.run(() => this.snackBar.open(message, null, configuration));\n  }\n}\n","export default __webpack_public_path__ + \"logo.png\";","import { Injectable, Injector, ErrorHandler } from '@angular/core';\nimport {\n  HttpEvent,\n  HttpInterceptor,\n  HttpHandler,\n  HttpRequest,\n  HttpErrorResponse\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n/** Passes HttpErrorResponse to application-wide error handler */\n@Injectable()\nexport class HttpErrorInterceptor implements HttpInterceptor {\n  constructor(private injector: Injector) {}\n\n  intercept(\n    request: HttpRequest<any>,\n    next: HttpHandler\n  ): Observable<HttpEvent<any>> {\n    return next.handle(request).pipe(\n      tap({\n        error: (err: any) => {\n          if (err instanceof HttpErrorResponse) {\n            const appErrorHandler = this.injector.get(ErrorHandler);\n            appErrorHandler.handleError(err);\n          }\n        }\n      })\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AnimationsService {\n  private static routeAnimationType: RouteAnimationType = 'NONE';\n\n  constructor() {\n    AnimationsService.routeAnimationType = 'NONE';\n  }\n\n  static isRouteAnimationsType(type: RouteAnimationType) {\n    return AnimationsService.routeAnimationType === type;\n  }\n\n  updateRouteAnimationType(\n    pageAnimations: boolean,\n    elementsAnimations: boolean\n  ) {\n    AnimationsService.routeAnimationType =\n      pageAnimations && elementsAnimations\n        ? 'ALL'\n        : pageAnimations\n        ? 'PAGE'\n        : elementsAnimations\n        ? 'ELEMENTS'\n        : 'NONE';\n  }\n}\n\nexport type RouteAnimationType = 'ALL' | 'PAGE' | 'ELEMENTS' | 'NONE';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n","import {\n  animate,\n  query,\n  style,\n  transition,\n  trigger,\n  stagger,\n  sequence\n} from '@angular/animations';\nimport { AnimationsService } from './animations.service';\n\nexport const ROUTE_ANIMATIONS_ELEMENTS = 'route-animations-elements';\n\nconst STEPS_ALL: any[] = [\n  query(':enter > *', style({ opacity: 0, position: 'fixed' }), {\n    optional: true\n  }),\n  query(':enter .' + ROUTE_ANIMATIONS_ELEMENTS, style({ opacity: 0 }), {\n    optional: true\n  }),\n  sequence([\n    query(\n      ':leave > *',\n      [\n        style({ transform: 'translateY(0%)', opacity: 1 }),\n        animate(\n          '0.2s ease-in-out',\n          style({ transform: 'translateY(-3%)', opacity: 0 })\n        ),\n        style({ position: 'fixed' })\n      ],\n      { optional: true }\n    ),\n    query(\n      ':enter > *',\n      [\n        style({\n          transform: 'translateY(-3%)',\n          opacity: 0,\n          position: 'static'\n        }),\n        animate(\n          '0.5s ease-in-out',\n          style({ transform: 'translateY(0%)', opacity: 1 })\n        )\n      ],\n      { optional: true }\n    )\n  ]),\n  query(\n    ':enter .' + ROUTE_ANIMATIONS_ELEMENTS,\n    stagger(75, [\n      style({ transform: 'translateY(10%)', opacity: 0 }),\n      animate(\n        '0.5s ease-in-out',\n        style({ transform: 'translateY(0%)', opacity: 1 })\n      )\n    ]),\n    { optional: true }\n  )\n];\nconst STEPS_NONE = [];\nconst STEPS_PAGE = [STEPS_ALL[0], STEPS_ALL[2]];\nconst STEPS_ELEMENTS = [STEPS_ALL[1], STEPS_ALL[3]];\n\nexport const routeAnimations = trigger('routeAnimations', [\n  transition(isRouteAnimationsAll, STEPS_ALL),\n  transition(isRouteAnimationsNone, STEPS_NONE),\n  transition(isRouteAnimationsPage, STEPS_PAGE),\n  transition(isRouteAnimationsElements, STEPS_ELEMENTS)\n]);\n\nexport function isRouteAnimationsAll() {\n  return AnimationsService.isRouteAnimationsType('ALL');\n}\n\nexport function isRouteAnimationsNone() {\n  return AnimationsService.isRouteAnimationsType('NONE');\n}\n\nexport function isRouteAnimationsPage() {\n  return AnimationsService.isRouteAnimationsType('PAGE');\n}\n\nexport function isRouteAnimationsElements() {\n  return AnimationsService.isRouteAnimationsType('ELEMENTS');\n}\n","import { ActionReducer } from '@ngrx/store';\n\nimport { AppState } from '../core.state';\n\nexport function debug(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function (state, action) {\n    const newState = reducer(state, action);\n    console.log(`[DEBUG] action: ${action.type}`, {\n      payload: (<any>action).payload,\n      oldState: state,\n      newState\n    });\n    return newState;\n  };\n}\n","import { AuthState } from './auth.models';\nimport { authLogin, authLogout } from './auth.actions';\nimport { createReducer, on, Action } from '@ngrx/store';\n\nexport const initialState: AuthState = {\n  isAuthenticated: false\n};\n\nconst reducer = createReducer(\n  initialState,\n  on(authLogin, (state) => ({ ...state, isAuthenticated: true })),\n  on(authLogout, (state) => ({ ...state, isAuthenticated: false }))\n);\n\nexport function authReducer(\n  state: AuthState | undefined,\n  action: Action\n): AuthState {\n  return reducer(state, action);\n}\n","import { NgModule } from '@angular/core';\nimport { PreloadAllModules, RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'about',\n    pathMatch: 'full'\n  },\n  {\n    path: 'about',\n    loadChildren: () =>\n      import('./features/about/about.module').then((m) => m.AboutModule)\n  },\n  {\n    path: 'vote',\n    loadChildren: () =>\n      import('./features/vote/vote.module').then((m) => m.VoteModule)\n  },\n  {\n    path: 'settings',\n    loadChildren: () =>\n      import('./features/settings/settings.module').then(\n        (m) => m.SettingsModule\n      )\n  },\n  {\n    path: 'track',\n    loadChildren: () =>\n      import('./features/track/track.module').then((m) => m.TrackModule)\n  },\n  {\n    path: '**',\n    redirectTo: 'about'\n  }\n];\n\n@NgModule({\n  // useHash supports github.io demo page, remove in your app\n  imports: [\n    RouterModule.forRoot(routes, {\n      useHash: true,\n      scrollPositionRestoration: 'enabled',\n      preloadingStrategy: PreloadAllModules,\n      relativeLinkResolution: 'legacy'\n    })\n  ],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n","import { Injectable } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\nimport { createEffect } from '@ngrx/effects';\nimport { tap, filter } from 'rxjs/operators';\n\n@Injectable()\nexport class GoogleAnalyticsEffects {\n  pageView = createEffect(\n    () => () =>\n      this.router.events.pipe(\n        filter((event) => event instanceof NavigationEnd),\n        tap((event: NavigationEnd) => {\n          (<any>window).ga('set', 'page', event.urlAfterRedirects);\n          (<any>window).ga('send', 'pageview');\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(private router: Router) {}\n}\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ofType, createEffect, Actions } from '@ngrx/effects';\nimport { tap } from 'rxjs/operators';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\n\nimport { authLogin, authLogout } from './auth.actions';\n\nexport const AUTH_KEY = 'AUTH';\n\n@Injectable()\nexport class AuthEffects {\n  login = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogin),\n        tap(() =>\n          this.localStorageService.setItem(AUTH_KEY, { isAuthenticated: true })\n        )\n      ),\n    { dispatch: false }\n  );\n\n  logout = createEffect(\n    () =>\n      this.actions$.pipe(\n        ofType(authLogout),\n        tap(() => {\n          this.router.navigate(['']);\n          this.localStorageService.setItem(AUTH_KEY, {\n            isAuthenticated: false\n          });\n        })\n      ),\n    { dispatch: false }\n  );\n\n  constructor(\n    private actions$: Actions,\n    private localStorageService: LocalStorageService,\n    private router: Router\n  ) {}\n}\n","import { createAction } from '@ngrx/store';\n\nexport const authLogin = createAction('[Auth] Login');\nexport const authLogout = createAction('[Auth] Logout');\n","import browser from 'browser-detect';\nimport { Component, OnInit } from '@angular/core';\nimport { Store, select } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { environment as env } from '../../environments/environment';\n\nimport {\n  authLogin,\n  authLogout,\n  routeAnimations,\n  LocalStorageService,\n  selectIsAuthenticated,\n  selectSettingsStickyHeader,\n  selectSettingsLanguage,\n  selectEffectiveTheme\n} from '../core/core.module';\nimport {\n  actionSettingsChangeAnimationsPageDisabled,\n  actionSettingsChangeLanguage\n} from '../core/settings/settings.actions';\n\n@Component({\n  selector: 'bvs-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [routeAnimations]\n})\nexport class AppComponent implements OnInit {\n  isProd = env.production;\n  envName = env.envName;\n  version = env.versions.app;\n  year = new Date().getFullYear();\n  logo = require('../../assets/logo.png').default;\n  languages = ['en'];\n  navigation = [\n    { link: 'about', label: 'bvs.menu.about' },\n    { link: 'vote', label: 'bvs.menu.vote' },\n    { link: 'track', label: 'bvs.menu.track' }\n  ];\n  navigationSideMenu = [\n    ...this.navigation,\n    { link: 'settings', label: 'bvs.menu.settings' }\n  ];\n\n  isAuthenticated$: Observable<boolean>;\n  stickyHeader$: Observable<boolean>;\n  language$: Observable<string>;\n  theme$: Observable<string>;\n\n  constructor(\n    private store: Store,\n    private storageService: LocalStorageService\n  ) {}\n\n  private static isIEorEdgeOrSafari() {\n    return ['ie', 'edge', 'safari'].includes(browser().name);\n  }\n\n  ngOnInit(): void {\n    this.storageService.testLocalStorage();\n    if (AppComponent.isIEorEdgeOrSafari()) {\n      this.store.dispatch(\n        actionSettingsChangeAnimationsPageDisabled({\n          pageAnimationsDisabled: true\n        })\n      );\n    }\n\n    this.isAuthenticated$ = this.store.pipe(select(selectIsAuthenticated));\n    this.stickyHeader$ = this.store.pipe(select(selectSettingsStickyHeader));\n    this.language$ = this.store.pipe(select(selectSettingsLanguage));\n    this.theme$ = this.store.pipe(select(selectEffectiveTheme));\n  }\n\n  onLoginClick() {\n    this.store.dispatch(authLogin());\n  }\n\n  onLogoutClick() {\n    this.store.dispatch(authLogout());\n  }\n\n  onLanguageSelect({ value: language }) {\n    this.store.dispatch(actionSettingsChangeLanguage({ language }));\n  }\n}\n","<div [class]=\"'theme-wrapper ' + (theme$ | async)\">\n\n  <mat-sidenav-container>\n\n    <mat-sidenav #sidenav mode=\"push\">\n      <div class=\"branding\"><img [src]=\"logo\" [alt]=\"logo\"/>\n        <span>{{ 'bvs.title.short' | translate}}</span></div>\n      <mat-nav-list>\n        <a mat-list-item *ngFor=\"let item of navigationSideMenu\" (click)=\"sidenav.close()\" [routerLink]=\"[item.link]\"\n          routerLinkActive=\"active\">\n          {{item.label | translate}}\n        </a>\n        <a mat-list-item href=\"https://github.com/tomastrajan/blockchain-voting-system-app\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Github\n        </a>\n      </mat-nav-list>\n    </mat-sidenav>\n\n    <div class=\"wrapper\">\n\n      <div class=\"toolbar\" [style.position]=\"(stickyHeader$ | async) ? 'fixed' : 'inherit'\" [class.mat-elevation-z4]=\"(stickyHeader$ | async)\">\n        <mat-toolbar color=\"primary\">\n          <button mat-icon-button class=\"d-md-none\" (click)=\"sidenav.open()\">\n            <fa-icon icon=\"bars\"></fa-icon>\n          </button>\n\n          <span routerLink=\"\" class=\"branding spacer center d-inline d-sm-none\">\n            <img [src]=\"logo\" [alt]=\"logo\"/></span>\n          <span routerLink=\"\" class=\"branding spacer center d-none d-sm-inline d-md-none\"><img [src]=\"logo\" [alt]=\"logo\"/> {{\n            'bvs.title.short' | translate }}</span>\n          <span routerLink=\"\" class=\"branding spacer d-none d-md-inline\"><img [src]=\"logo\"[alt]=\"logo\" /> {{ 'bvs.title.long' | translate\n            }}</span>\n\n          <span class=\"d-none d-md-inline\">\n            <button mat-button class=\"nav-button\" *ngFor=\"let item of navigation\" [routerLink]=\"[item.link]\"\n              routerLinkActive=\"active\">\n              {{item.label | translate}}\n            </button>\n          </span>\n\n          <button mat-button mat-stroked-button color=\"accent\" *ngIf=\"!(isAuthenticated$ | async)\" (click)=\"onLoginClick()\">\n            {{ 'bvs.menu.login' | translate }}\n          </button>\n\n          <button *ngIf=\"(isAuthenticated$ | async)\"\n                  mat-icon-button\n                  [matMenuTriggerFor]=\"toolbarUserMenu\">\n            <fa-icon icon=\"user-circle\"></fa-icon>\n          </button>\n\n          <mat-menu #toolbarUserMenu=\"matMenu\">\n            <button mat-menu-item (click)=\"onLogoutClick()\">\n              <mat-icon><fa-icon icon=\"power-off\"></fa-icon></mat-icon>\n              <span>{{ 'bvs.menu.logout' | translate }}</span>\n            </button>\n          </mat-menu>\n\n          <button mat-icon-button routerLink=\"settings\" class=\"d-none d-sm-inline\">\n            <fa-icon icon=\"cog\"></fa-icon>\n          </button>\n\n          <span *ngIf=\"language$ | async as language\">\n            <mat-select [ngModel]=\"language\" (selectionChange)=\"onLanguageSelect($event)\">\n              <mat-option *ngFor=\"let l of languages\" [value]=\"l\">\n                {{ l.toUpperCase() }}\n              </mat-option>\n            </mat-select>\n          </span>\n        </mat-toolbar>\n      </div>\n\n      <div class=\"content\" [@routeAnimations]=\"o.isActivated && o.activatedRoute.routeConfig.data && o.activatedRoute.routeConfig.data.title\">\n        <router-outlet #o=\"outlet\"></router-outlet>\n      </div>\n\n      <div class=\"footer\">\n        <div class=\"row\">\n          <div class=\"col-12 signature\">\n            &#169; <span class=\"year\">{{year}}</span> - Blockchain Voting System\n            <br class=\"d-block d-sm-none\">\n            <a [matTooltip]=\"'bvs.footer.changelog' | translate\"\n               matTooltipPosition=\"before\"\n               href=\"https://github.com/tomastrajan/blockchain-voting-system-app/blob/master/CHANGELOG.md\">\n              <fa-icon icon=\"rocket\"></fa-icon>\n              {{version}} <span *ngIf=\"!isProd\">[{{envName}}]</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n  </mat-sidenav-container>\n\n</div>\n","import { Injectable, ErrorHandler } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { environment } from '../../../environments/environment';\n\nimport { NotificationService } from '../notifications/notification.service';\n\n/** Application-wide error handler that adds a UI notification to the error handling\n * provided by the default Angular ErrorHandler.\n */\n@Injectable()\nexport class AppErrorHandler extends ErrorHandler {\n  constructor(private notificationsService: NotificationService) {\n    super();\n  }\n\n  handleError(error: Error | HttpErrorResponse) {\n    let displayMessage = 'An error occurred.';\n\n    if (!environment.production) {\n      displayMessage += ' See console for details.';\n    }\n\n    this.notificationsService.error(displayMessage);\n\n    super.handleError(error);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { RouterStateSnapshot } from '@angular/router';\nimport { RouterStateSerializer } from '@ngrx/router-store';\nimport { RouterStateUrl } from './router.state';\n\n@Injectable()\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\n    let route = routerState.root;\n\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n\n    const {\n      url,\n      root: { queryParams }\n    } = routerState;\n    const { params } = route;\n\n    return { url, params, queryParams };\n  }\n}\n","import { AppState } from '../core.module';\n\nexport const NIGHT_MODE_THEME = 'BLACK-THEME';\n\nexport type Language = 'en' | 'sk' | 'de' | 'fr' | 'es' | 'pt-br' | 'he';\n\nexport interface SettingsState {\n  language: string;\n  theme: string;\n  autoNightMode: boolean;\n  nightTheme: string;\n  stickyHeader: boolean;\n  pageAnimations: boolean;\n  pageAnimationsDisabled: boolean;\n  elementsAnimations: boolean;\n  hour: number;\n}\n\nexport interface State extends AppState {\n  settings: SettingsState;\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule, Optional, SkipSelf, ErrorHandler } from '@angular/core';\nimport {\n  HttpClientModule,\n  HttpClient,\n  HTTP_INTERCEPTORS\n} from '@angular/common/http';\nimport {\n  StoreRouterConnectingModule,\n  RouterStateSerializer\n} from '@ngrx/router-store';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { TranslateModule, TranslateLoader } from '@ngx-translate/core';\nimport { TranslateHttpLoader } from '@ngx-translate/http-loader';\nimport {\n  FaIconLibrary,\n  FontAwesomeModule\n} from '@fortawesome/angular-fontawesome';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { FormsModule } from '@angular/forms';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { environment } from '../../environments/environment';\n\nimport {\n  AppState,\n  reducers,\n  metaReducers,\n  selectRouterState\n} from './core.state';\nimport { AuthEffects } from './auth/auth.effects';\nimport { selectIsAuthenticated, selectAuth } from './auth/auth.selectors';\nimport { authLogin, authLogout } from './auth/auth.actions';\nimport { AuthGuardService } from './auth/auth-guard.service';\nimport { TitleService } from './title/title.service';\nimport {\n  ROUTE_ANIMATIONS_ELEMENTS,\n  routeAnimations\n} from './animations/route.animations';\nimport { AnimationsService } from './animations/animations.service';\nimport { AppErrorHandler } from './error-handler/app-error-handler.service';\nimport { CustomSerializer } from './router/custom-serializer';\nimport { LocalStorageService } from './local-storage/local-storage.service';\nimport { HttpErrorInterceptor } from './http-interceptors/http-error.interceptor';\nimport { GoogleAnalyticsEffects } from './google-analytics/google-analytics.effects';\nimport { NotificationService } from './notifications/notification.service';\nimport { SettingsEffects } from './settings/settings.effects';\nimport {\n  selectSettingsLanguage,\n  selectEffectiveTheme,\n  selectSettingsStickyHeader\n} from './settings/settings.selectors';\nimport { MatButtonModule } from '@angular/material/button';\nimport {\n  faCog,\n  faBars,\n  faRocket,\n  faPowerOff,\n  faUserCircle,\n  faPlayCircle\n} from '@fortawesome/free-solid-svg-icons';\nimport {\n  faGithub,\n  faMediumM,\n  faTwitter,\n  faInstagram,\n  faYoutube\n} from '@fortawesome/free-brands-svg-icons';\n\nexport {\n  TitleService,\n  selectAuth,\n  authLogin,\n  authLogout,\n  routeAnimations,\n  AppState,\n  LocalStorageService,\n  selectIsAuthenticated,\n  ROUTE_ANIMATIONS_ELEMENTS,\n  AnimationsService,\n  AuthGuardService,\n  selectRouterState,\n  NotificationService,\n  selectEffectiveTheme,\n  selectSettingsLanguage,\n  selectSettingsStickyHeader\n};\n\nexport function httpLoaderFactory(http: HttpClient) {\n  return new TranslateHttpLoader(\n    http,\n    `${environment.i18nPrefix}/assets/i18n/`,\n    '.json'\n  );\n}\n\n@NgModule({\n  imports: [\n    // angular\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // ngrx\n    StoreModule.forRoot(reducers, { metaReducers }),\n    StoreRouterConnectingModule.forRoot(),\n    EffectsModule.forRoot([\n      AuthEffects,\n      SettingsEffects,\n      GoogleAnalyticsEffects\n    ]),\n    environment.production\n      ? []\n      : StoreDevtoolsModule.instrument({\n          name: 'Blockchain Voting System'\n        }),\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule.forRoot({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: httpLoaderFactory,\n        deps: [HttpClient]\n      }\n    })\n  ],\n  declarations: [],\n  providers: [\n    { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true },\n    { provide: ErrorHandler, useClass: AppErrorHandler },\n    { provide: RouterStateSerializer, useClass: CustomSerializer }\n  ],\n  exports: [\n    // angular\n    FormsModule,\n\n    // material\n    MatSidenavModule,\n    MatToolbarModule,\n    MatListModule,\n    MatMenuModule,\n    MatIconModule,\n    MatSelectModule,\n    MatTooltipModule,\n    MatSnackBarModule,\n    MatButtonModule,\n\n    // 3rd party\n    FontAwesomeModule,\n    TranslateModule\n  ]\n})\nexport class CoreModule {\n  constructor(\n    @Optional()\n    @SkipSelf()\n    parentModule: CoreModule,\n    faIconLibrary: FaIconLibrary\n  ) {\n    if (parentModule) {\n      throw new Error('CoreModule is already loaded. Import only in AppModule');\n    }\n    faIconLibrary.addIcons(\n      faCog,\n      faBars,\n      faRocket,\n      faPowerOff,\n      faUserCircle,\n      faPlayCircle,\n      faGithub,\n      faMediumM,\n      faTwitter,\n      faInstagram,\n      faYoutube\n    );\n  }\n}\n","import { createSelector } from '@ngrx/store';\n\nimport { selectAuthState } from '../core.state';\nimport { AuthState } from './auth.models';\n\nexport const selectAuth = createSelector(\n  selectAuthState,\n  (state: AuthState) => state\n);\n\nexport const selectIsAuthenticated = createSelector(\n  selectAuthState,\n  (state: AuthState) => state.isAuthenticated\n);\n","import { ActionReducer, INIT, UPDATE } from '@ngrx/store';\n\nimport { LocalStorageService } from '../local-storage/local-storage.service';\nimport { AppState } from '../core.state';\n\nexport function initStateFromLocalStorage(\n  reducer: ActionReducer<AppState>\n): ActionReducer<AppState> {\n  return function (state, action) {\n    const newState = reducer(state, action);\n    if ([INIT.toString(), UPDATE.toString()].includes(action.type)) {\n      return { ...newState, ...LocalStorageService.loadInitialState() };\n    }\n    return newState;\n  };\n}\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}