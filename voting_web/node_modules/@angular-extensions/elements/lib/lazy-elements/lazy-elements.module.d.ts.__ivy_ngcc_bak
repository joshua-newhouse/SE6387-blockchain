import { ModuleWithProviders, Type } from '@angular/core';
import { ElementConfig, HooksConfig, LazyElementsLoaderService } from './lazy-elements-loader.service';
export declare function createLazyElementRootGuard(rootOptions: LazyElementRootOptions): string;
export declare class LazyElementsModule {
    static forRoot(options: LazyElementModuleRootOptions): ModuleWithProviders<LazyElementsModule>;
    static forFeature(options: LazyElementModuleOptions): ModuleWithProviders<LazyElementsModule>;
    constructor(lazyElementsLoaderService: LazyElementsLoaderService, elementConfigsMultiProvider: ElementConfig[][], guard: any);
}
export interface LazyElementModuleOptions {
    elementConfigs?: ElementConfig[];
}
export interface LazyElementModuleRootOptions {
    elementConfigs?: ElementConfig[];
    rootOptions?: LazyElementRootOptions;
}
export interface LazyElementRootOptions {
    loadingComponent?: Type<any>;
    errorComponent?: Type<any>;
    isModule?: boolean;
    importMap?: boolean;
    preload?: boolean;
    hooks?: HooksConfig;
}
