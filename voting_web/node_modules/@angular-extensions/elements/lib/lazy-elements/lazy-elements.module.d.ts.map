{"version":3,"file":"lazy-elements.module.d.ts","sources":["lazy-elements.module.d.ts"],"names":[],"mappings":"AAAA;AACA;;;;;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import { ModuleWithProviders, Type } from '@angular/core';\nimport { ElementConfig, HooksConfig, LazyElementsLoaderService } from './lazy-elements-loader.service';\nexport declare function createLazyElementRootGuard(rootOptions: LazyElementRootOptions): string;\nexport declare class LazyElementsModule {\n    static forRoot(options: LazyElementModuleRootOptions): ModuleWithProviders<LazyElementsModule>;\n    static forFeature(options: LazyElementModuleOptions): ModuleWithProviders<LazyElementsModule>;\n    constructor(lazyElementsLoaderService: LazyElementsLoaderService, elementConfigsMultiProvider: ElementConfig[][], guard: any);\n}\nexport interface LazyElementModuleOptions {\n    elementConfigs?: ElementConfig[];\n}\nexport interface LazyElementModuleRootOptions {\n    elementConfigs?: ElementConfig[];\n    rootOptions?: LazyElementRootOptions;\n}\nexport interface LazyElementRootOptions {\n    loadingComponent?: Type<any>;\n    errorComponent?: Type<any>;\n    isModule?: boolean;\n    importMap?: boolean;\n    preload?: boolean;\n    hooks?: HooksConfig;\n}\n"]}