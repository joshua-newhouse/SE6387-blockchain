{"version":3,"file":"angular-extensions-elements.js","sources":["../../../projects/elements/src/lib/lazy-elements/lazy-elements.tokens.ts","../../../projects/elements/src/lib/lazy-elements/lazy-elements-loader.service.ts","../../../projects/elements/src/lib/lazy-elements/lazy-element/lazy-element.directive.ts","../../../projects/elements/src/lib/lazy-elements/lazy-element-dynamic/lazy-element-dynamic.directive.ts","../../../projects/elements/src/lib/lazy-elements/lazy-elements.module.ts"],"names":["LOG_PREFIX"],"mappings":"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","sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { ElementConfig } from './lazy-elements-loader.service';\nimport { LazyElementRootOptions } from './lazy-elements.module';\n\nexport const LAZY_ELEMENT_CONFIGS = new InjectionToken<ElementConfig[]>(\n  'LAZY_ELEMENT_CONFIGS'\n);\n\nexport const LAZY_ELEMENT_ROOT_OPTIONS = new InjectionToken<\n  LazyElementRootOptions\n>('LAZY_ELEMENT_ROOT_OPTIONS');\n\nexport const LAZY_ELEMENT_ROOT_GUARD = new InjectionToken<void>(\n  'LAZY_ELEMENT_ROOT_GUARD'\n);\n\nexport const LAZY_ELEMENTS_REGISTRY = new InjectionToken<LazyElementsRegistry>(\n  'LAZY_ELEMENTS_REGISTRY',\n  {\n    providedIn: 'root',\n    factory: () => new Map<string, Promise<void>>(),\n  }\n);\n\nexport interface LazyElementsRegistry {\n  get: (url: string) => Promise<void>;\n  set: (url: string, notifier: Promise<void>) => void;\n  has: (url: string) => boolean;\n}\n","import { Inject, Injectable, Optional, Type } from '@angular/core';\n\nimport { LazyElementRootOptions } from './lazy-elements.module';\nimport {\n  LAZY_ELEMENT_ROOT_OPTIONS,\n  LAZY_ELEMENTS_REGISTRY,\n  LazyElementsRegistry,\n} from './lazy-elements.tokens';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\nexport type Hook = (tag: string) => Promise<void> | void;\n\nexport interface HooksConfig {\n  beforeLoad?: Hook;\n  afterLoad?: Hook;\n}\n\nexport interface ElementConfig {\n  tag: string;\n  url: string;\n  isModule?: boolean;\n  importMap?: boolean;\n  loadingComponent?: Type<any>;\n  errorComponent?: Type<any>;\n  preload?: boolean;\n  hooks?: HooksConfig;\n  isAdded?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyElementsLoaderService {\n  configs: ElementConfig[] = [];\n\n  constructor(\n    @Inject(LAZY_ELEMENTS_REGISTRY) private registry: LazyElementsRegistry,\n    @Optional()\n    @Inject(LAZY_ELEMENT_ROOT_OPTIONS)\n    public options: LazyElementRootOptions\n  ) {\n    if (!options) {\n      this.options = {};\n    }\n  }\n\n  addConfigs(newConfigs: ElementConfig[]) {\n    newConfigs.forEach((newConfig) => {\n      const existingConfig = this.getElementConfig(newConfig.tag);\n      if (existingConfig) {\n        console.warn(\n          `${LOG_PREFIX} - ElementConfig for tag '${newConfig.tag}' was previously added, it will not be added multiple times, continue...`\n        );\n      } else {\n        newConfig.isAdded = true;\n        this.configs.push(newConfig);\n        const shouldPreload =\n          newConfig.preload !== undefined\n            ? newConfig.preload\n            : this.options.preload;\n        if (shouldPreload) {\n          this.loadElement(\n            newConfig.url,\n            newConfig.tag,\n            newConfig.isModule,\n            newConfig.importMap,\n            newConfig.hooks\n          );\n        }\n      }\n    });\n  }\n\n  getElementConfig(tag: string): ElementConfig {\n    return this.configs.find((config) => config.tag === tag);\n  }\n\n  preload(tags?: string[]) {\n    let configs = this.configs;\n    if (tags) {\n      configs = this.configs.filter((config) => tags.includes(config.tag));\n    }\n    configs.forEach((config) =>\n      this.loadElement(\n        config.url,\n        config.tag,\n        config.isModule,\n        config.importMap,\n        config.hooks\n      )\n    );\n  }\n\n  async loadElement(\n    url: string,\n    tag: string,\n    isModule?: boolean,\n    importMap?: boolean,\n    hooksConfig?: HooksConfig\n  ): Promise<void> {\n    const config = this.getElementConfig(tag);\n    isModule ??= config?.isModule ?? this.options.isModule;\n    importMap ??= config?.importMap ?? this.options.importMap;\n\n    if (!tag) {\n      throw new Error(\n        `${LOG_PREFIX} - tag for '${url}' not found, the *axLazyElement has to be used on HTML element`\n      );\n    }\n\n    if (!url) {\n      if (!config?.url && !importMap) {\n        throw new Error(`${LOG_PREFIX} - url for <${tag}> not found`);\n      } else if (importMap) {\n        url = tag;\n      } else {\n        url = config.url;\n      }\n    }\n\n    if (!this.hasElement(url)) {\n      const notifier = this.addElement(url);\n\n      const beforeLoadHook =\n        hooksConfig?.beforeLoad ??\n        config?.hooks?.beforeLoad ??\n        this.options?.hooks?.beforeLoad;\n      const afterLoadHook =\n        hooksConfig?.afterLoad ??\n        config?.hooks?.afterLoad ??\n        this.options?.hooks?.afterLoad;\n\n      if (importMap) {\n        url = await this.resolveImportMap(url);\n      }\n\n      const script = document.createElement('script') as HTMLScriptElement;\n      if (isModule) {\n        script.type = 'module';\n      }\n      script.src = url;\n      script.onload = () => {\n        if (afterLoadHook) {\n          this.handleHook(afterLoadHook, tag)\n            .then(notifier.resolve)\n            .catch(notifier.reject);\n        } else {\n          notifier.resolve();\n        }\n      };\n      script.onerror = notifier.reject;\n      if (beforeLoadHook) {\n        this.handleHook(beforeLoadHook, tag)\n          .then(() => document.body.appendChild(script))\n          .catch(notifier.reject);\n      } else {\n        document.body.appendChild(script);\n      }\n    }\n    return this.registry.get(this.stripUrlProtocol(url));\n  }\n\n  private addElement(url: string): Notifier {\n    let notifier: Notifier;\n    this.registry.set(\n      this.stripUrlProtocol(url),\n      new Promise<void>((resolve, reject) => (notifier = { resolve, reject }))\n    );\n    return notifier;\n  }\n\n  private hasElement(url: string): boolean {\n    return this.registry.has(this.stripUrlProtocol(url));\n  }\n\n  private stripUrlProtocol(url: string): string {\n    return url.replace(/https?:\\/\\//, '');\n  }\n\n  private handleHook(hook: Hook, tag: string): Promise<void> {\n    try {\n      return Promise.resolve(hook(tag));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  private async resolveImportMap(url: string) {\n    const System = (window as any).System;\n    if (System) {\n      await System.prepareImport();\n      url = System.resolve(url);\n    } else {\n      throw new Error(\n        `${LOG_PREFIX} - importMap feature depends on SystemJS library to be globally loaded but none was found, thus '${url}' can't be resolved. You should either load SystemJS or remove the importMap flag.`\n      );\n    }\n    return url;\n  }\n}\n\ninterface Notifier {\n  resolve: () => void;\n  reject: (error: any) => void;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport {\n  ElementConfig,\n  LazyElementsLoaderService,\n} from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n@Directive({\n  selector: '[axLazyElement]',\n})\nexport class LazyElementDirective implements OnInit {\n  @Input('axLazyElement') url: string;\n  @Input('axLazyElementLoadingTemplate') loadingTemplateRef: TemplateRef<any>; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementErrorTemplate') errorTemplateRef: TemplateRef<any>; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementModule') isModule: boolean | undefined; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementImportMap') importMap: boolean | undefined; // tslint:disable-line:no-input-rename\n\n  private viewRef: EmbeddedViewRef<any> = null;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService,\n    private cfr: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const tpl = this.template as any;\n    const elementTag = tpl._declarationTContainer\n      ? tpl._declarationTContainer.tagName\n      : tpl._def.element.template.nodes[0].element.name;\n\n    const elementConfig =\n      this.elementsLoaderService.getElementConfig(elementTag) ||\n      ({} as ElementConfig);\n    const options = this.elementsLoaderService.options;\n    const loadingComponent =\n      elementConfig.loadingComponent || options.loadingComponent;\n\n    if (this.loadingTemplateRef) {\n      this.vcr.createEmbeddedView(this.loadingTemplateRef);\n    } else if (loadingComponent) {\n      const factory = this.cfr.resolveComponentFactory(loadingComponent);\n      this.vcr.createComponent(factory);\n    }\n    this.elementsLoaderService\n      .loadElement(\n        this.url,\n        elementTag,\n        this.isModule,\n        this.importMap,\n        elementConfig?.hooks\n      )\n      .then(() => customElements.whenDefined(elementTag))\n      .then(() => {\n        this.vcr.clear();\n        this.viewRef = this.vcr.createEmbeddedView(this.template);\n        this.cdr.markForCheck();\n      })\n      .catch(() => {\n        this.vcr.clear();\n        const errorComponent =\n          elementConfig.errorComponent || options.errorComponent;\n        if (this.errorTemplateRef) {\n          this.vcr.createEmbeddedView(this.errorTemplateRef);\n          this.cdr.markForCheck();\n        } else if (errorComponent) {\n          const factory = this.cfr.resolveComponentFactory(errorComponent);\n          this.vcr.createComponent(factory);\n          this.cdr.markForCheck();\n        } else {\n          console.error(\n            `${LOG_PREFIX} - Loading of element <${elementTag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElement=\"errorTemplate: error\" to display customized error message in place of element`\n          );\n        }\n      });\n  }\n\n  destroyEmbeddedView() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.detach();\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport {\n  ElementConfig,\n  LazyElementsLoaderService,\n} from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n/** @dynamic */\n@Directive({\n  selector: '[axLazyElementDynamic]',\n})\nexport class LazyElementDynamicDirective implements OnInit {\n  @Input('axLazyElementDynamic') tag: string;\n  @Input('axLazyElementDynamicUrl') url: string; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicLoadingTemplate') loadingTemplateRef: TemplateRef<\n    any\n  >; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicErrorTemplate') errorTemplateRef: TemplateRef<\n    any\n  >; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicModule') isModule: boolean | undefined; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicImportMap') importMap: boolean | undefined; // tslint:disable-line:no-input-rename\n\n  private viewRef: EmbeddedViewRef<any> = null;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private vcr: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService\n  ) {}\n\n  ngOnInit() {\n    if (!this.tag || this.tag.length === 0 || !this.tag.includes('-')) {\n      throw new Error(\n        `${LOG_PREFIX} - Valid tag has to be specified when using *axLazyElementDynamic directive (use *axLazyElementDynamic=\"'some-tag'\"), got: \"${this.tag}\"`\n      );\n    }\n\n    const elementConfig =\n      this.elementsLoaderService.getElementConfig(this.tag) ||\n      ({} as ElementConfig);\n    const options = this.elementsLoaderService.options;\n    const loadingComponent =\n      elementConfig.loadingComponent || options.loadingComponent;\n\n    if (this.loadingTemplateRef) {\n      this.vcr.createEmbeddedView(this.loadingTemplateRef);\n    } else if (loadingComponent) {\n      const factory = this.cfr.resolveComponentFactory(loadingComponent);\n      this.vcr.createComponent(factory);\n    }\n\n    this.elementsLoaderService\n      .loadElement(\n        this.url,\n        this.tag,\n        this.isModule,\n        this.importMap,\n        elementConfig?.hooks\n      )\n      .then(() => customElements.whenDefined(this.tag))\n      .then(() => {\n        this.vcr.clear();\n        const originalCreateElement = this.renderer.createElement;\n        this.renderer.createElement = (name: string, namespace: string) => {\n          if (name === 'ax-lazy-element') {\n            name = this.tag;\n          }\n          return this.document.createElement(name);\n        };\n        this.viewRef = this.vcr.createEmbeddedView(this.template);\n        this.renderer.createElement = originalCreateElement;\n        this.cdr.markForCheck();\n      })\n      .catch((error) => {\n        const errorComponent =\n          elementConfig.errorComponent || options.errorComponent;\n        this.vcr.clear();\n        if (this.errorTemplateRef) {\n          this.vcr.createEmbeddedView(this.errorTemplateRef);\n          this.cdr.markForCheck();\n        } else if (errorComponent) {\n          const factory = this.cfr.resolveComponentFactory(errorComponent);\n          this.vcr.createComponent(factory);\n          this.cdr.markForCheck();\n        } else {\n          console.error(\n            `${LOG_PREFIX} - Loading of element <${this.tag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElementDynamic=\"errorTemplate: error\" to display customized error message in place of element\\n\\n`,\n            error\n          );\n        }\n      });\n  }\n\n  destroyEmbeddedView() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.detach();\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  Type,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LazyElementDirective } from './lazy-element/lazy-element.directive';\nimport { LazyElementDynamicDirective } from './lazy-element-dynamic/lazy-element-dynamic.directive';\nimport {\n  ElementConfig,\n  HooksConfig,\n  LazyElementsLoaderService,\n} from './lazy-elements-loader.service';\nimport {\n  LAZY_ELEMENT_CONFIGS,\n  LAZY_ELEMENT_ROOT_GUARD,\n  LAZY_ELEMENT_ROOT_OPTIONS,\n} from './lazy-elements.tokens';\n\nexport function createLazyElementRootGuard(\n  rootOptions: LazyElementRootOptions\n) {\n  if (rootOptions) {\n    throw new TypeError(\n      `LazyElementsModule.forRoot() called twice. Feature modules should use LazyElementsModule.forFeature() instead.`\n    );\n  }\n  return 'LazyElementsModule.forRoot() multiple execution guard';\n}\n\n@NgModule({\n  declarations: [LazyElementDirective, LazyElementDynamicDirective],\n  imports: [CommonModule],\n  exports: [LazyElementDirective, LazyElementDynamicDirective],\n  providers: [],\n})\nexport class LazyElementsModule {\n  static forRoot(\n    options: LazyElementModuleRootOptions\n  ): ModuleWithProviders<LazyElementsModule> {\n    return {\n      ngModule: LazyElementsModule,\n      providers: [\n        {\n          provide: LAZY_ELEMENT_CONFIGS,\n          useValue:\n            options && options.elementConfigs ? options.elementConfigs : [],\n          multi: true,\n        },\n        {\n          provide: LAZY_ELEMENT_ROOT_OPTIONS,\n          useValue: options.rootOptions ? options.rootOptions : {},\n        },\n        {\n          provide: LAZY_ELEMENT_ROOT_GUARD,\n          useFactory: createLazyElementRootGuard,\n          deps: [[LAZY_ELEMENT_ROOT_OPTIONS, new Optional(), new SkipSelf()]],\n        },\n      ],\n    };\n  }\n\n  static forFeature(\n    options: LazyElementModuleOptions\n  ): ModuleWithProviders<LazyElementsModule> {\n    return {\n      ngModule: LazyElementsModule,\n      providers: [\n        {\n          provide: LAZY_ELEMENT_CONFIGS,\n          useValue:\n            options && options.elementConfigs ? options.elementConfigs : [],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  constructor(\n    lazyElementsLoaderService: LazyElementsLoaderService,\n    @Optional()\n    @Inject(LAZY_ELEMENT_CONFIGS)\n    elementConfigsMultiProvider: ElementConfig[][],\n    @Optional()\n    @Inject(LAZY_ELEMENT_ROOT_GUARD)\n    guard: any\n  ) {\n    if (elementConfigsMultiProvider && elementConfigsMultiProvider.length) {\n      elementConfigsMultiProvider\n        .filter((configs) => configs.some((config) => !config.isAdded))\n        .forEach((configs) => lazyElementsLoaderService.addConfigs(configs));\n    }\n  }\n}\n\nexport interface LazyElementModuleOptions {\n  elementConfigs?: ElementConfig[];\n}\n\nexport interface LazyElementModuleRootOptions {\n  elementConfigs?: ElementConfig[];\n  rootOptions?: LazyElementRootOptions;\n}\n\nexport interface LazyElementRootOptions {\n  loadingComponent?: Type<any>;\n  errorComponent?: Type<any>;\n  isModule?: boolean;\n  importMap?: boolean;\n  preload?: boolean;\n  hooks?: HooksConfig;\n}\n"]}