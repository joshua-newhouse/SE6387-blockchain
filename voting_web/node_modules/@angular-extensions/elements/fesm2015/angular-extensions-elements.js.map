{"version":3,"file":"angular-extensions-elements.js","sources":["../../../projects/elements/src/lib/lazy-elements/lazy-elements.tokens.ts","../../../projects/elements/src/lib/lazy-elements/lazy-elements-loader.service.ts","../../../projects/elements/src/lib/lazy-elements/lazy-element/lazy-element.directive.ts","../../../projects/elements/src/lib/lazy-elements/lazy-element-dynamic/lazy-element-dynamic.directive.ts","../../../projects/elements/src/lib/lazy-elements/lazy-elements.module.ts"],"sourcesContent":["import { InjectionToken } from '@angular/core';\n\nimport { ElementConfig } from './lazy-elements-loader.service';\nimport { LazyElementRootOptions } from './lazy-elements.module';\n\nexport const LAZY_ELEMENT_CONFIGS = new InjectionToken<ElementConfig[]>(\n  'LAZY_ELEMENT_CONFIGS'\n);\n\nexport const LAZY_ELEMENT_ROOT_OPTIONS = new InjectionToken<\n  LazyElementRootOptions\n>('LAZY_ELEMENT_ROOT_OPTIONS');\n\nexport const LAZY_ELEMENT_ROOT_GUARD = new InjectionToken<void>(\n  'LAZY_ELEMENT_ROOT_GUARD'\n);\n\nexport const LAZY_ELEMENTS_REGISTRY = new InjectionToken<LazyElementsRegistry>(\n  'LAZY_ELEMENTS_REGISTRY',\n  {\n    providedIn: 'root',\n    factory: () => new Map<string, Promise<void>>(),\n  }\n);\n\nexport interface LazyElementsRegistry {\n  get: (url: string) => Promise<void>;\n  set: (url: string, notifier: Promise<void>) => void;\n  has: (url: string) => boolean;\n}\n","import { Inject, Injectable, Optional, Type } from '@angular/core';\n\nimport { LazyElementRootOptions } from './lazy-elements.module';\nimport {\n  LAZY_ELEMENT_ROOT_OPTIONS,\n  LAZY_ELEMENTS_REGISTRY,\n  LazyElementsRegistry,\n} from './lazy-elements.tokens';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\nexport type Hook = (tag: string) => Promise<void> | void;\n\nexport interface HooksConfig {\n  beforeLoad?: Hook;\n  afterLoad?: Hook;\n}\n\nexport interface ElementConfig {\n  tag: string;\n  url: string;\n  isModule?: boolean;\n  importMap?: boolean;\n  loadingComponent?: Type<any>;\n  errorComponent?: Type<any>;\n  preload?: boolean;\n  hooks?: HooksConfig;\n  isAdded?: boolean;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class LazyElementsLoaderService {\n  configs: ElementConfig[] = [];\n\n  constructor(\n    @Inject(LAZY_ELEMENTS_REGISTRY) private registry: LazyElementsRegistry,\n    @Optional()\n    @Inject(LAZY_ELEMENT_ROOT_OPTIONS)\n    public options: LazyElementRootOptions\n  ) {\n    if (!options) {\n      this.options = {};\n    }\n  }\n\n  addConfigs(newConfigs: ElementConfig[]) {\n    newConfigs.forEach((newConfig) => {\n      const existingConfig = this.getElementConfig(newConfig.tag);\n      if (existingConfig) {\n        console.warn(\n          `${LOG_PREFIX} - ElementConfig for tag '${newConfig.tag}' was previously added, it will not be added multiple times, continue...`\n        );\n      } else {\n        newConfig.isAdded = true;\n        this.configs.push(newConfig);\n        const shouldPreload =\n          newConfig.preload !== undefined\n            ? newConfig.preload\n            : this.options.preload;\n        if (shouldPreload) {\n          this.loadElement(\n            newConfig.url,\n            newConfig.tag,\n            newConfig.isModule,\n            newConfig.importMap,\n            newConfig.hooks\n          );\n        }\n      }\n    });\n  }\n\n  getElementConfig(tag: string): ElementConfig {\n    return this.configs.find((config) => config.tag === tag);\n  }\n\n  preload(tags?: string[]) {\n    let configs = this.configs;\n    if (tags) {\n      configs = this.configs.filter((config) => tags.includes(config.tag));\n    }\n    configs.forEach((config) =>\n      this.loadElement(\n        config.url,\n        config.tag,\n        config.isModule,\n        config.importMap,\n        config.hooks\n      )\n    );\n  }\n\n  async loadElement(\n    url: string,\n    tag: string,\n    isModule?: boolean,\n    importMap?: boolean,\n    hooksConfig?: HooksConfig\n  ): Promise<void> {\n    const config = this.getElementConfig(tag);\n    isModule ??= config?.isModule ?? this.options.isModule;\n    importMap ??= config?.importMap ?? this.options.importMap;\n\n    if (!tag) {\n      throw new Error(\n        `${LOG_PREFIX} - tag for '${url}' not found, the *axLazyElement has to be used on HTML element`\n      );\n    }\n\n    if (!url) {\n      if (!config?.url && !importMap) {\n        throw new Error(`${LOG_PREFIX} - url for <${tag}> not found`);\n      } else if (importMap) {\n        url = tag;\n      } else {\n        url = config.url;\n      }\n    }\n\n    if (!this.hasElement(url)) {\n      const notifier = this.addElement(url);\n\n      const beforeLoadHook =\n        hooksConfig?.beforeLoad ??\n        config?.hooks?.beforeLoad ??\n        this.options?.hooks?.beforeLoad;\n      const afterLoadHook =\n        hooksConfig?.afterLoad ??\n        config?.hooks?.afterLoad ??\n        this.options?.hooks?.afterLoad;\n\n      if (importMap) {\n        url = await this.resolveImportMap(url);\n      }\n\n      const script = document.createElement('script') as HTMLScriptElement;\n      if (isModule) {\n        script.type = 'module';\n      }\n      script.src = url;\n      script.onload = () => {\n        if (afterLoadHook) {\n          this.handleHook(afterLoadHook, tag)\n            .then(notifier.resolve)\n            .catch(notifier.reject);\n        } else {\n          notifier.resolve();\n        }\n      };\n      script.onerror = notifier.reject;\n      if (beforeLoadHook) {\n        this.handleHook(beforeLoadHook, tag)\n          .then(() => document.body.appendChild(script))\n          .catch(notifier.reject);\n      } else {\n        document.body.appendChild(script);\n      }\n    }\n    return this.registry.get(this.stripUrlProtocol(url));\n  }\n\n  private addElement(url: string): Notifier {\n    let notifier: Notifier;\n    this.registry.set(\n      this.stripUrlProtocol(url),\n      new Promise<void>((resolve, reject) => (notifier = { resolve, reject }))\n    );\n    return notifier;\n  }\n\n  private hasElement(url: string): boolean {\n    return this.registry.has(this.stripUrlProtocol(url));\n  }\n\n  private stripUrlProtocol(url: string): string {\n    return url.replace(/https?:\\/\\//, '');\n  }\n\n  private handleHook(hook: Hook, tag: string): Promise<void> {\n    try {\n      return Promise.resolve(hook(tag));\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  }\n\n  private async resolveImportMap(url: string) {\n    const System = (window as any).System;\n    if (System) {\n      await System.prepareImport();\n      url = System.resolve(url);\n    } else {\n      throw new Error(\n        `${LOG_PREFIX} - importMap feature depends on SystemJS library to be globally loaded but none was found, thus '${url}' can't be resolved. You should either load SystemJS or remove the importMap flag.`\n      );\n    }\n    return url;\n  }\n}\n\ninterface Notifier {\n  resolve: () => void;\n  reject: (error: any) => void;\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\n\nimport {\n  ElementConfig,\n  LazyElementsLoaderService,\n} from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n@Directive({\n  selector: '[axLazyElement]',\n})\nexport class LazyElementDirective implements OnInit {\n  @Input('axLazyElement') url: string;\n  @Input('axLazyElementLoadingTemplate') loadingTemplateRef: TemplateRef<any>; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementErrorTemplate') errorTemplateRef: TemplateRef<any>; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementModule') isModule: boolean | undefined; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementImportMap') importMap: boolean | undefined; // tslint:disable-line:no-input-rename\n\n  private viewRef: EmbeddedViewRef<any> = null;\n\n  constructor(\n    private vcr: ViewContainerRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService,\n    private cfr: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef\n  ) {}\n\n  ngOnInit() {\n    const tpl = this.template as any;\n    const elementTag = tpl._declarationTContainer\n      ? tpl._declarationTContainer.tagName\n      : tpl._def.element.template.nodes[0].element.name;\n\n    const elementConfig =\n      this.elementsLoaderService.getElementConfig(elementTag) ||\n      ({} as ElementConfig);\n    const options = this.elementsLoaderService.options;\n    const loadingComponent =\n      elementConfig.loadingComponent || options.loadingComponent;\n\n    if (this.loadingTemplateRef) {\n      this.vcr.createEmbeddedView(this.loadingTemplateRef);\n    } else if (loadingComponent) {\n      const factory = this.cfr.resolveComponentFactory(loadingComponent);\n      this.vcr.createComponent(factory);\n    }\n    this.elementsLoaderService\n      .loadElement(\n        this.url,\n        elementTag,\n        this.isModule,\n        this.importMap,\n        elementConfig?.hooks\n      )\n      .then(() => customElements.whenDefined(elementTag))\n      .then(() => {\n        this.vcr.clear();\n        this.viewRef = this.vcr.createEmbeddedView(this.template);\n        this.cdr.markForCheck();\n      })\n      .catch(() => {\n        this.vcr.clear();\n        const errorComponent =\n          elementConfig.errorComponent || options.errorComponent;\n        if (this.errorTemplateRef) {\n          this.vcr.createEmbeddedView(this.errorTemplateRef);\n          this.cdr.markForCheck();\n        } else if (errorComponent) {\n          const factory = this.cfr.resolveComponentFactory(errorComponent);\n          this.vcr.createComponent(factory);\n          this.cdr.markForCheck();\n        } else {\n          console.error(\n            `${LOG_PREFIX} - Loading of element <${elementTag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElement=\"errorTemplate: error\" to display customized error message in place of element`\n          );\n        }\n      });\n  }\n\n  destroyEmbeddedView() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.detach();\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import {\n  ChangeDetectorRef,\n  ComponentFactoryResolver,\n  Directive,\n  EmbeddedViewRef,\n  Inject,\n  Input,\n  OnInit,\n  Renderer2,\n  TemplateRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\nimport {\n  ElementConfig,\n  LazyElementsLoaderService,\n} from '../lazy-elements-loader.service';\n\nconst LOG_PREFIX = '@angular-extensions/elements';\n\n/** @dynamic */\n@Directive({\n  selector: '[axLazyElementDynamic]',\n})\nexport class LazyElementDynamicDirective implements OnInit {\n  @Input('axLazyElementDynamic') tag: string;\n  @Input('axLazyElementDynamicUrl') url: string; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicLoadingTemplate') loadingTemplateRef: TemplateRef<\n    any\n  >; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicErrorTemplate') errorTemplateRef: TemplateRef<\n    any\n  >; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicModule') isModule: boolean | undefined; // tslint:disable-line:no-input-rename\n  @Input('axLazyElementDynamicImportMap') importMap: boolean | undefined; // tslint:disable-line:no-input-rename\n\n  private viewRef: EmbeddedViewRef<any> = null;\n\n  constructor(\n    @Inject(DOCUMENT) private document: Document,\n    private renderer: Renderer2,\n    private vcr: ViewContainerRef,\n    private cfr: ComponentFactoryResolver,\n    private cdr: ChangeDetectorRef,\n    private template: TemplateRef<any>,\n    private elementsLoaderService: LazyElementsLoaderService\n  ) {}\n\n  ngOnInit() {\n    if (!this.tag || this.tag.length === 0 || !this.tag.includes('-')) {\n      throw new Error(\n        `${LOG_PREFIX} - Valid tag has to be specified when using *axLazyElementDynamic directive (use *axLazyElementDynamic=\"'some-tag'\"), got: \"${this.tag}\"`\n      );\n    }\n\n    const elementConfig =\n      this.elementsLoaderService.getElementConfig(this.tag) ||\n      ({} as ElementConfig);\n    const options = this.elementsLoaderService.options;\n    const loadingComponent =\n      elementConfig.loadingComponent || options.loadingComponent;\n\n    if (this.loadingTemplateRef) {\n      this.vcr.createEmbeddedView(this.loadingTemplateRef);\n    } else if (loadingComponent) {\n      const factory = this.cfr.resolveComponentFactory(loadingComponent);\n      this.vcr.createComponent(factory);\n    }\n\n    this.elementsLoaderService\n      .loadElement(\n        this.url,\n        this.tag,\n        this.isModule,\n        this.importMap,\n        elementConfig?.hooks\n      )\n      .then(() => customElements.whenDefined(this.tag))\n      .then(() => {\n        this.vcr.clear();\n        const originalCreateElement = this.renderer.createElement;\n        this.renderer.createElement = (name: string, namespace: string) => {\n          if (name === 'ax-lazy-element') {\n            name = this.tag;\n          }\n          return this.document.createElement(name);\n        };\n        this.viewRef = this.vcr.createEmbeddedView(this.template);\n        this.renderer.createElement = originalCreateElement;\n        this.cdr.markForCheck();\n      })\n      .catch((error) => {\n        const errorComponent =\n          elementConfig.errorComponent || options.errorComponent;\n        this.vcr.clear();\n        if (this.errorTemplateRef) {\n          this.vcr.createEmbeddedView(this.errorTemplateRef);\n          this.cdr.markForCheck();\n        } else if (errorComponent) {\n          const factory = this.cfr.resolveComponentFactory(errorComponent);\n          this.vcr.createComponent(factory);\n          this.cdr.markForCheck();\n        } else {\n          console.error(\n            `${LOG_PREFIX} - Loading of element <${this.tag}> failed, please provide <ng-template #error>Loading failed...</ng-template> and reference it in *axLazyElementDynamic=\"errorTemplate: error\" to display customized error message in place of element\\n\\n`,\n            error\n          );\n        }\n      });\n  }\n\n  destroyEmbeddedView() {\n    if (this.viewRef && !this.viewRef.destroyed) {\n      this.viewRef.detach();\n      this.viewRef.destroy();\n      this.viewRef = null;\n    }\n  }\n}\n","import {\n  Inject,\n  ModuleWithProviders,\n  NgModule,\n  Optional,\n  SkipSelf,\n  Type,\n} from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LazyElementDirective } from './lazy-element/lazy-element.directive';\nimport { LazyElementDynamicDirective } from './lazy-element-dynamic/lazy-element-dynamic.directive';\nimport {\n  ElementConfig,\n  HooksConfig,\n  LazyElementsLoaderService,\n} from './lazy-elements-loader.service';\nimport {\n  LAZY_ELEMENT_CONFIGS,\n  LAZY_ELEMENT_ROOT_GUARD,\n  LAZY_ELEMENT_ROOT_OPTIONS,\n} from './lazy-elements.tokens';\n\nexport function createLazyElementRootGuard(\n  rootOptions: LazyElementRootOptions\n) {\n  if (rootOptions) {\n    throw new TypeError(\n      `LazyElementsModule.forRoot() called twice. Feature modules should use LazyElementsModule.forFeature() instead.`\n    );\n  }\n  return 'LazyElementsModule.forRoot() multiple execution guard';\n}\n\n@NgModule({\n  declarations: [LazyElementDirective, LazyElementDynamicDirective],\n  imports: [CommonModule],\n  exports: [LazyElementDirective, LazyElementDynamicDirective],\n  providers: [],\n})\nexport class LazyElementsModule {\n  static forRoot(\n    options: LazyElementModuleRootOptions\n  ): ModuleWithProviders<LazyElementsModule> {\n    return {\n      ngModule: LazyElementsModule,\n      providers: [\n        {\n          provide: LAZY_ELEMENT_CONFIGS,\n          useValue:\n            options && options.elementConfigs ? options.elementConfigs : [],\n          multi: true,\n        },\n        {\n          provide: LAZY_ELEMENT_ROOT_OPTIONS,\n          useValue: options.rootOptions ? options.rootOptions : {},\n        },\n        {\n          provide: LAZY_ELEMENT_ROOT_GUARD,\n          useFactory: createLazyElementRootGuard,\n          deps: [[LAZY_ELEMENT_ROOT_OPTIONS, new Optional(), new SkipSelf()]],\n        },\n      ],\n    };\n  }\n\n  static forFeature(\n    options: LazyElementModuleOptions\n  ): ModuleWithProviders<LazyElementsModule> {\n    return {\n      ngModule: LazyElementsModule,\n      providers: [\n        {\n          provide: LAZY_ELEMENT_CONFIGS,\n          useValue:\n            options && options.elementConfigs ? options.elementConfigs : [],\n          multi: true,\n        },\n      ],\n    };\n  }\n\n  constructor(\n    lazyElementsLoaderService: LazyElementsLoaderService,\n    @Optional()\n    @Inject(LAZY_ELEMENT_CONFIGS)\n    elementConfigsMultiProvider: ElementConfig[][],\n    @Optional()\n    @Inject(LAZY_ELEMENT_ROOT_GUARD)\n    guard: any\n  ) {\n    if (elementConfigsMultiProvider && elementConfigsMultiProvider.length) {\n      elementConfigsMultiProvider\n        .filter((configs) => configs.some((config) => !config.isAdded))\n        .forEach((configs) => lazyElementsLoaderService.addConfigs(configs));\n    }\n  }\n}\n\nexport interface LazyElementModuleOptions {\n  elementConfigs?: ElementConfig[];\n}\n\nexport interface LazyElementModuleRootOptions {\n  elementConfigs?: ElementConfig[];\n  rootOptions?: LazyElementRootOptions;\n}\n\nexport interface LazyElementRootOptions {\n  loadingComponent?: Type<any>;\n  errorComponent?: Type<any>;\n  isModule?: boolean;\n  importMap?: boolean;\n  preload?: boolean;\n  hooks?: HooksConfig;\n}\n"],"names":["LOG_PREFIX"],"mappings":";;;;;;;;;;MAKa,oBAAoB,GAAG,IAAI,cAAc,CACpD,sBAAsB;;MAGX,yBAAyB,GAAG,IAAI,cAAc,CAEzD,2BAA2B;;MAEhB,uBAAuB,GAAG,IAAI,cAAc,CACvD,yBAAyB;;MAGd,sBAAsB,GAAG,IAAI,cAAc,CACtD,wBAAwB,EACxB;IACE,UAAU,EAAE,MAAM;IAClB,OAAO;;;IAAE,MAAM,IAAI,GAAG,EAAyB,CAAA;CAChD;;;;mCAOF;;;IAHC,mCAAoC;;IACpC,mCAAoD;;IACpD,mCAA8B;;;;;;;;;MCnB1B,UAAU,GAAG,8BAA8B;;;;0BAOhD;;;IAFC,iCAAkB;;IAClB,gCAAiB;;;;;4BAalB;;;IATC,4BAAY;;IACZ,4BAAY;;IACZ,iCAAmB;;IACnB,kCAAoB;;IACpB,yCAA6B;;IAC7B,uCAA2B;;IAC3B,gCAAkB;;IAClB,8BAAoB;;IACpB,gCAAkB;;MAMP,yBAAyB;;;;;IAGpC,YAC0C,QAA8B,EAG/D,OAA+B;QAHE,aAAQ,GAAR,QAAQ,CAAsB;QAG/D,YAAO,GAAP,OAAO,CAAwB;QANxC,YAAO,GAAoB,EAAE,CAAC;QAQ5B,IAAI,CAAC,OAAO,EAAE;YACZ,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;SACnB;KACF;;;;;IAED,UAAU,CAAC,UAA2B;QACpC,UAAU,CAAC,OAAO;;;;QAAC,CAAC,SAAS;;kBACrB,cAAc,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,GAAG,CAAC;YAC3D,IAAI,cAAc,EAAE;gBAClB,OAAO,CAAC,IAAI,CACV,GAAG,UAAU,6BAA6B,SAAS,CAAC,GAAG,0EAA0E,CAClI,CAAC;aACH;iBAAM;gBACL,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC;gBACzB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;;sBACvB,aAAa,GACjB,SAAS,CAAC,OAAO,KAAK,SAAS;sBAC3B,SAAS,CAAC,OAAO;sBACjB,IAAI,CAAC,OAAO,CAAC,OAAO;gBAC1B,IAAI,aAAa,EAAE;oBACjB,IAAI,CAAC,WAAW,CACd,SAAS,CAAC,GAAG,EACb,SAAS,CAAC,GAAG,EACb,SAAS,CAAC,QAAQ,EAClB,SAAS,CAAC,SAAS,EACnB,SAAS,CAAC,KAAK,CAChB,CAAC;iBACH;aACF;SACF,EAAC,CAAC;KACJ;;;;;IAED,gBAAgB,CAAC,GAAW;QAC1B,OAAO,IAAI,CAAC,OAAO,CAAC,IAAI;;;;QAAC,CAAC,MAAM,KAAK,MAAM,CAAC,GAAG,KAAK,GAAG,EAAC,CAAC;KAC1D;;;;;IAED,OAAO,CAAC,IAAe;;YACjB,OAAO,GAAG,IAAI,CAAC,OAAO;QAC1B,IAAI,IAAI,EAAE;YACR,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM;;;;YAAC,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,GAAG,CAAC,EAAC,CAAC;SACtE;QACD,OAAO,CAAC,OAAO;;;;QAAC,CAAC,MAAM,KACrB,IAAI,CAAC,WAAW,CACd,MAAM,CAAC,GAAG,EACV,MAAM,CAAC,GAAG,EACV,MAAM,CAAC,QAAQ,EACf,MAAM,CAAC,SAAS,EAChB,MAAM,CAAC,KAAK,CACb,EACF,CAAC;KACH;;;;;;;;;IAEK,WAAW,CACf,GAAW,EACX,GAAW,EACX,QAAkB,EAClB,SAAmB,EACnB,WAAyB;;;;kBAEnB,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC;YACzC,QAAQ,aAAR,QAAQ,cAAR,QAAQ,IAAR,QAAQ,SAAK,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,QAAQ,mCAAI,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAC;YACvD,SAAS,aAAT,SAAS,cAAT,SAAS,IAAT,SAAS,SAAK,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,SAAS,mCAAI,IAAI,CAAC,OAAO,CAAC,SAAS,EAAC;YAE1D,IAAI,CAAC,GAAG,EAAE;gBACR,MAAM,IAAI,KAAK,CACb,GAAG,UAAU,eAAe,GAAG,gEAAgE,CAChG,CAAC;aACH;YAED,IAAI,CAAC,GAAG,EAAE;gBACR,IAAI,EAAC,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,CAAA,IAAI,CAAC,SAAS,EAAE;oBAC9B,MAAM,IAAI,KAAK,CAAC,GAAG,UAAU,eAAe,GAAG,aAAa,CAAC,CAAC;iBAC/D;qBAAM,IAAI,SAAS,EAAE;oBACpB,GAAG,GAAG,GAAG,CAAC;iBACX;qBAAM;oBACL,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC;iBAClB;aACF;YAED,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;;sBACnB,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC;;sBAE/B,cAAc,eAClB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,UAAU,yCACvB,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,0CAAE,UAAU,+CACzB,IAAI,CAAC,OAAO,0CAAE,KAAK,0CAAE,UAAU;;sBAC3B,aAAa,eACjB,WAAW,aAAX,WAAW,uBAAX,WAAW,CAAE,SAAS,yCACtB,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,KAAK,0CAAE,SAAS,+CACxB,IAAI,CAAC,OAAO,0CAAE,KAAK,0CAAE,SAAS;gBAEhC,IAAI,SAAS,EAAE;oBACb,GAAG,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC;iBACxC;;sBAEK,MAAM,sBAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,EAAqB;gBACpE,IAAI,QAAQ,EAAE;oBACZ,MAAM,CAAC,IAAI,GAAG,QAAQ,CAAC;iBACxB;gBACD,MAAM,CAAC,GAAG,GAAG,GAAG,CAAC;gBACjB,MAAM,CAAC,MAAM;;;gBAAG;oBACd,IAAI,aAAa,EAAE;wBACjB,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,GAAG,CAAC;6BAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC;6BACtB,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;qBAC3B;yBAAM;wBACL,QAAQ,CAAC,OAAO,EAAE,CAAC;qBACpB;iBACF,CAAA,CAAC;gBACF,MAAM,CAAC,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC;gBACjC,IAAI,cAAc,EAAE;oBAClB,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE,GAAG,CAAC;yBACjC,IAAI;;;oBAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAC;yBAC7C,KAAK,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;iBAC3B;qBAAM;oBACL,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;iBACnC;aACF;YACD,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;;KACtD;;;;;;IAEO,UAAU,CAAC,GAAW;;YACxB,QAAkB;QACtB,IAAI,CAAC,QAAQ,CAAC,GAAG,CACf,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,EAC1B,IAAI,OAAO;;;;;QAAO,CAAC,OAAO,EAAE,MAAM,MAAM,QAAQ,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC,EAAC,CACzE,CAAC;QACF,OAAO,QAAQ,CAAC;KACjB;;;;;;IAEO,UAAU,CAAC,GAAW;QAC5B,OAAO,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;KACtD;;;;;;IAEO,gBAAgB,CAAC,GAAW;QAClC,OAAO,GAAG,CAAC,OAAO,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;KACvC;;;;;;;IAEO,UAAU,CAAC,IAAU,EAAE,GAAW;QACxC,IAAI;YACF,OAAO,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;QAAC,OAAO,GAAG,EAAE;YACZ,OAAO,OAAO,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;SAC5B;KACF;;;;;;IAEa,gBAAgB,CAAC,GAAW;;;kBAClC,MAAM,GAAG,oBAAC,MAAM,IAAS,MAAM;YACrC,IAAI,MAAM,EAAE;gBACV,MAAM,MAAM,CAAC,aAAa,EAAE,CAAC;gBAC7B,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACL,MAAM,IAAI,KAAK,CACb,GAAG,UAAU,oGAAoG,GAAG,oFAAoF,CACzM,CAAC;aACH;YACD,OAAO,GAAG,CAAC;SACZ;KAAA;;;YAzKF,UAAU,SAAC;gBACV,UAAU,EAAE,MAAM;aACnB;;;;4CAKI,MAAM,SAAC,sBAAsB;4CAC7B,QAAQ,YACR,MAAM,SAAC,yBAAyB;;;;;IALnC,4CAA8B;;;;;IAG5B,6CAAsE;;IACtE,4CAEsC;;;;;AAkK1C,uBAGC;;;IAFC,2BAAoB;;IACpB,0BAA6B;;;;;;;;;MC5LzBA,YAAU,GAAG,8BAA8B;MAKpC,oBAAoB;;;;;;;;IAS/B,YACU,GAAqB,EACrB,QAA0B,EAC1B,qBAAgD,EAChD,GAA6B,EAC7B,GAAsB;QAJtB,QAAG,GAAH,GAAG,CAAkB;QACrB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,0BAAqB,GAArB,qBAAqB,CAA2B;QAChD,QAAG,GAAH,GAAG,CAA0B;QAC7B,QAAG,GAAH,GAAG,CAAmB;;QAPxB,YAAO,GAAyB,IAAI,CAAC;KAQzC;;;;IAEJ,QAAQ;;cACA,GAAG,sBAAG,IAAI,CAAC,QAAQ,EAAO;;cAC1B,UAAU,GAAG,GAAG,CAAC,sBAAsB;cACzC,GAAG,CAAC,sBAAsB,CAAC,OAAO;cAClC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI;;cAE7C,aAAa,GACjB,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,UAAU,CAAC;gCACtD,EAAE,GAAkB;;cACjB,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO;;cAC5C,gBAAgB,GACpB,aAAa,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB;QAE5D,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACtD;aAAM,IAAI,gBAAgB,EAAE;;kBACrB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,gBAAgB,CAAC;YAClE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACnC;QACD,IAAI,CAAC,qBAAqB;aACvB,WAAW,CACV,IAAI,CAAC,GAAG,EACR,UAAU,EACV,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,SAAS,EACd,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,CACrB;aACA,IAAI;;;QAAC,MAAM,cAAc,CAAC,WAAW,CAAC,UAAU,CAAC,EAAC;aAClD,IAAI;;;QAAC;YACJ,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACjB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,EAAC;aACD,KAAK;;;QAAC;YACL,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;;kBACX,cAAc,GAClB,aAAa,CAAC,cAAc,IAAI,OAAO,CAAC,cAAc;YACxD,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB;iBAAM,IAAI,cAAc,EAAE;;sBACnB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,cAAc,CAAC;gBAChE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB;iBAAM;gBACL,OAAO,CAAC,KAAK,CACX,GAAGA,YAAU,0BAA0B,UAAU,gMAAgM,CAClP,CAAC;aACH;SACF,EAAC,CAAC;KACN;;;;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;KACF;;;YA9EF,SAAS,SAAC;gBACT,QAAQ,EAAE,iBAAiB;aAC5B;;;;YAZC,gBAAgB;YADhB,WAAW;YAMX,yBAAyB;YAXzB,wBAAwB;YADxB,iBAAiB;;;kBAqBhB,KAAK,SAAC,eAAe;iCACrB,KAAK,SAAC,8BAA8B;+BACpC,KAAK,SAAC,4BAA4B;uBAClC,KAAK,SAAC,qBAAqB;wBAC3B,KAAK,SAAC,wBAAwB;;;;IAJ/B,mCAAoC;;IACpC,kDAA4E;;IAC5E,gDAAwE;;IACxE,wCAA4D;;IAC5D,yCAAgE;;;;;IAEhE,uCAA6C;;;;;IAG3C,mCAA6B;;;;;IAC7B,wCAAkC;;;;;IAClC,qDAAwD;;;;;IACxD,mCAAqC;;;;;IACrC,mCAA8B;;;;;;;;;MChB5BA,YAAU,GAAG,8BAA8B;;;;MAMpC,2BAA2B;;;;;;;;;;IActC,YAC4B,QAAkB,EACpC,QAAmB,EACnB,GAAqB,EACrB,GAA6B,EAC7B,GAAsB,EACtB,QAA0B,EAC1B,qBAAgD;QAN9B,aAAQ,GAAR,QAAQ,CAAU;QACpC,aAAQ,GAAR,QAAQ,CAAW;QACnB,QAAG,GAAH,GAAG,CAAkB;QACrB,QAAG,GAAH,GAAG,CAA0B;QAC7B,QAAG,GAAH,GAAG,CAAmB;QACtB,aAAQ,GAAR,QAAQ,CAAkB;QAC1B,0BAAqB,GAArB,qBAAqB,CAA2B;;QATlD,YAAO,GAAyB,IAAI,CAAC;KAUzC;;;;IAEJ,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,GAAG,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE;YACjE,MAAM,IAAI,KAAK,CACb,GAAGA,YAAU,+HAA+H,IAAI,CAAC,GAAG,GAAG,CACxJ,CAAC;SACH;;cAEK,aAAa,GACjB,IAAI,CAAC,qBAAqB,CAAC,gBAAgB,CAAC,IAAI,CAAC,GAAG,CAAC;gCACpD,EAAE,GAAkB;;cACjB,OAAO,GAAG,IAAI,CAAC,qBAAqB,CAAC,OAAO;;cAC5C,gBAAgB,GACpB,aAAa,CAAC,gBAAgB,IAAI,OAAO,CAAC,gBAAgB;QAE5D,IAAI,IAAI,CAAC,kBAAkB,EAAE;YAC3B,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACtD;aAAM,IAAI,gBAAgB,EAAE;;kBACrB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,gBAAgB,CAAC;YAClE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;SACnC;QAED,IAAI,CAAC,qBAAqB;aACvB,WAAW,CACV,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,SAAS,EACd,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,KAAK,CACrB;aACA,IAAI;;;QAAC,MAAM,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,EAAC;aAChD,IAAI;;;QAAC;YACJ,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;;kBACX,qBAAqB,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa;YACzD,IAAI,CAAC,QAAQ,CAAC,aAAa;;;;;YAAG,CAAC,IAAY,EAAE,SAAiB;gBAC5D,IAAI,IAAI,KAAK,iBAAiB,EAAE;oBAC9B,IAAI,GAAG,IAAI,CAAC,GAAG,CAAC;iBACjB;gBACD,OAAO,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;aAC1C,CAAA,CAAC;YACF,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,CAAC,aAAa,GAAG,qBAAqB,CAAC;YACpD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;SACzB,EAAC;aACD,KAAK;;;;QAAC,CAAC,KAAK;;kBACL,cAAc,GAClB,aAAa,CAAC,cAAc,IAAI,OAAO,CAAC,cAAc;YACxD,IAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;YACjB,IAAI,IAAI,CAAC,gBAAgB,EAAE;gBACzB,IAAI,CAAC,GAAG,CAAC,kBAAkB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;gBACnD,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB;iBAAM,IAAI,cAAc,EAAE;;sBACnB,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,cAAc,CAAC;gBAChE,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;gBAClC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC;aACzB;iBAAM;gBACL,OAAO,CAAC,KAAK,CACX,GAAGA,YAAU,0BAA0B,IAAI,CAAC,GAAG,2MAA2M,EAC1P,KAAK,CACN,CAAC;aACH;SACF,EAAC,CAAC;KACN;;;;IAED,mBAAmB;QACjB,IAAI,IAAI,CAAC,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,EAAE;YAC3C,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,CAAC;YACtB,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,CAAC;YACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SACrB;KACF;;;YAhGF,SAAS,SAAC;gBACT,QAAQ,EAAE,wBAAwB;aACnC;;;;YAgBuC,QAAQ,uBAA3C,MAAM,SAAC,QAAQ;YAhClB,SAAS;YAET,gBAAgB;YARhB,wBAAwB;YADxB,iBAAiB;YAQjB,WAAW;YAOX,yBAAyB;;;kBAUxB,KAAK,SAAC,sBAAsB;kBAC5B,KAAK,SAAC,yBAAyB;iCAC/B,KAAK,SAAC,qCAAqC;+BAG3C,KAAK,SAAC,mCAAmC;uBAGzC,KAAK,SAAC,4BAA4B;wBAClC,KAAK,SAAC,+BAA+B;;;;IATtC,0CAA2C;;IAC3C,0CAA8C;;IAC9C,yDAEE;;IACF,uDAEE;;IACF,+CAAmE;;IACnE,gDAAuE;;;;;IAEvE,8CAA6C;;;;;IAG3C,+CAA4C;;;;;IAC5C,+CAA2B;;;;;IAC3B,0CAA6B;;;;;IAC7B,0CAAqC;;;;;IACrC,0CAA8B;;;;;IAC9B,+CAAkC;;;;;IAClC,4DAAwD;;;;;;;;;;;;SCvB5C,0BAA0B,CACxC,WAAmC;IAEnC,IAAI,WAAW,EAAE;QACf,MAAM,IAAI,SAAS,CACjB,gHAAgH,CACjH,CAAC;KACH;IACD,OAAO,uDAAuD,CAAC;AACjE,CAAC;MAQY,kBAAkB;;;;;;IA0C7B,YACE,yBAAoD,EAGpD,2BAA8C,EAG9C,KAAU;QAEV,IAAI,2BAA2B,IAAI,2BAA2B,CAAC,MAAM,EAAE;YACrE,2BAA2B;iBACxB,MAAM;;;;YAAC,CAAC,OAAO,KAAK,OAAO,CAAC,IAAI;;;;YAAC,CAAC,MAAM,KAAK,CAAC,MAAM,CAAC,OAAO,EAAC,EAAC;iBAC9D,OAAO;;;;YAAC,CAAC,OAAO,KAAK,yBAAyB,CAAC,UAAU,CAAC,OAAO,CAAC,EAAC,CAAC;SACxE;KACF;;;;;IAvDD,OAAO,OAAO,CACZ,OAAqC;QAErC,OAAO;YACL,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,oBAAoB;oBAC7B,QAAQ,EACN,OAAO,IAAI,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,GAAG,EAAE;oBACjE,KAAK,EAAE,IAAI;iBACZ;gBACD;oBACE,OAAO,EAAE,yBAAyB;oBAClC,QAAQ,EAAE,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,GAAG,EAAE;iBACzD;gBACD;oBACE,OAAO,EAAE,uBAAuB;oBAChC,UAAU,EAAE,0BAA0B;oBACtC,IAAI,EAAE,CAAC,CAAC,yBAAyB,EAAE,IAAI,QAAQ,EAAE,EAAE,IAAI,QAAQ,EAAE,CAAC,CAAC;iBACpE;aACF;SACF,CAAC;KACH;;;;;IAED,OAAO,UAAU,CACf,OAAiC;QAEjC,OAAO;YACL,QAAQ,EAAE,kBAAkB;YAC5B,SAAS,EAAE;gBACT;oBACE,OAAO,EAAE,oBAAoB;oBAC7B,QAAQ,EACN,OAAO,IAAI,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,cAAc,GAAG,EAAE;oBACjE,KAAK,EAAE,IAAI;iBACZ;aACF;SACF,CAAC;KACH;;;YA9CF,QAAQ,SAAC;gBACR,YAAY,EAAE,CAAC,oBAAoB,EAAE,2BAA2B,CAAC;gBACjE,OAAO,EAAE,CAAC,YAAY,CAAC;gBACvB,OAAO,EAAE,CAAC,oBAAoB,EAAE,2BAA2B,CAAC;gBAC5D,SAAS,EAAE,EAAE;aACd;;;;YAxBC,yBAAyB;wCAqEtB,QAAQ,YACR,MAAM,SAAC,oBAAoB;4CAE3B,QAAQ,YACR,MAAM,SAAC,uBAAuB;;;;;uCAalC;;;IADC,kDAAiC;;;;;2CAMlC;;;IAFC,sDAAiC;;IACjC,mDAAqC;;;;;qCAUtC;;;IANC,kDAA6B;;IAC7B,gDAA2B;;IAC3B,0CAAmB;;IACnB,2CAAoB;;IACpB,yCAAkB;;IAClB,uCAAoB;;;;;;;;;;;;;;;;;"}